2025-07-14T11:52:33+02:00 :: Request received for : []

 ============ End Of Script ================== 

2025-07-14T11:53:36+02:00 :: Request received for : []

 ============ End Of Script ================== 

2025-07-14T11:58:52+02:00 :: Request received for : []

 ============ End Of Script ================== 

2025-07-14T12:10:34+02:00 :: Request received for : []

 ============ End Of Script ================== 

2025-07-14T12:12:23+02:00 :: mehod inside insertAttendanceData 

2025-07-14T12:12:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:12:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:12:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:12:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:12:23+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-01 

2025-07-14T12:12:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-01' 

2025-07-14T12:12:23+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:12:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:12:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:12:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:12:23+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-02 

2025-07-14T12:12:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-02' 

2025-07-14T12:12:23+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:12:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:12:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:12:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:12:23+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-03 

2025-07-14T12:12:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-03' 

2025-07-14T12:12:23+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:12:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:12:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:12:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:12:23+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-04 

2025-07-14T12:12:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-04' 

2025-07-14T12:12:23+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:12:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:12:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:12:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:12:23+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-05 

2025-07-14T12:12:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-05' 

2025-07-14T12:12:23+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:12:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:12:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:12:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:12:23+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-06 

2025-07-14T12:12:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-06' 

2025-07-14T12:12:23+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:12:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:12:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:12:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:12:23+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-07 

2025-07-14T12:12:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-07' 

2025-07-14T12:12:23+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:12:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:12:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:12:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:12:23+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-08 

2025-07-14T12:12:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-08' 

2025-07-14T12:12:23+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:12:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:12:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:12:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:12:23+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-09 

2025-07-14T12:12:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-09' 

2025-07-14T12:12:23+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:12:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:12:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:12:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:12:23+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-10 

2025-07-14T12:12:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-10' 

2025-07-14T12:12:23+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:12:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:12:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:12:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:12:23+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-11 

2025-07-14T12:12:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-11' 

2025-07-14T12:12:23+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:12:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:12:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:12:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:12:23+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-12 

2025-07-14T12:12:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-12' 

2025-07-14T12:12:23+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:12:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:12:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:12:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:12:23+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-13 

2025-07-14T12:12:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-13' 

2025-07-14T12:12:23+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:12:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:12:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:12:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:12:23+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-14 

2025-07-14T12:12:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-14' 

2025-07-14T12:12:23+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:12:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:12:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:12:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:12:23+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-15 

2025-07-14T12:12:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-15' 

2025-07-14T12:12:23+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:12:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:12:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:12:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:12:23+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-16 

2025-07-14T12:12:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-16' 

2025-07-14T12:12:23+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:12:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:12:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:12:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:12:23+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-17 

2025-07-14T12:12:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-17' 

2025-07-14T12:12:23+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:12:23+02:00 :: Attendance Inserted 

 ============ End Of Script ================== 

2025-07-14T12:17:19+02:00 :: mehod inside insertAttendanceData 

2025-07-14T12:17:19+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:17:19+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:17:19+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:17:19+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:17:19+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-01 

2025-07-14T12:17:19+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-01' 

2025-07-14T12:17:19+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:17:19+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:17:19+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:17:19+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:17:19+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-02 

2025-07-14T12:17:19+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-02' 

2025-07-14T12:17:19+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:17:19+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:17:19+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:17:19+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:17:19+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-03 

2025-07-14T12:17:19+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-03' 

2025-07-14T12:17:19+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:17:19+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:17:19+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:17:19+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:17:19+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-04 

2025-07-14T12:17:19+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-04' 

2025-07-14T12:17:19+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:17:19+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:17:19+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:17:19+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:17:19+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-05 

2025-07-14T12:17:19+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-05' 

2025-07-14T12:17:19+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:17:19+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:17:19+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:17:19+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:17:19+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-06 

2025-07-14T12:17:19+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-06' 

2025-07-14T12:17:19+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:17:19+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:17:19+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:17:19+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:17:19+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-07 

2025-07-14T12:17:19+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-07' 

2025-07-14T12:17:19+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:17:19+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:17:19+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:17:19+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:17:19+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-08 

2025-07-14T12:17:19+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-08' 

2025-07-14T12:17:19+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:17:19+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:17:19+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:17:19+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:17:19+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-09 

2025-07-14T12:17:19+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-09' 

2025-07-14T12:17:19+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:17:19+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:17:19+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:17:19+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:17:19+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-10 

2025-07-14T12:17:19+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-10' 

2025-07-14T12:17:19+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:17:19+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:17:19+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:17:19+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:17:19+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-11 

2025-07-14T12:17:19+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-11' 

2025-07-14T12:17:19+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:17:19+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:17:19+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:17:19+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:17:19+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-12 

2025-07-14T12:17:19+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-12' 

2025-07-14T12:17:19+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:17:19+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:17:19+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:17:19+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:17:19+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-13 

2025-07-14T12:17:19+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-13' 

2025-07-14T12:17:19+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:17:19+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:17:19+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:17:19+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:17:19+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-14 

2025-07-14T12:17:19+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-14' 

2025-07-14T12:17:19+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:17:19+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:17:19+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:17:19+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:17:19+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-15 

2025-07-14T12:17:19+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-15' 

2025-07-14T12:17:19+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:17:19+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:17:19+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:17:19+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:17:19+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-16 

2025-07-14T12:17:19+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-16' 

2025-07-14T12:17:19+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:17:19+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:17:19+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:17:19+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:17:19+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-17 

2025-07-14T12:17:19+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-17' 

2025-07-14T12:17:19+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:17:19+02:00 :: Attendance Inserted 

 ============ End Of Script ================== 

2025-07-14T12:19:16+02:00 :: mehod inside insertAttendanceData 

2025-07-14T12:19:16+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:19:16+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:19:16+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:19:16+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:19:16+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-01 

2025-07-14T12:19:16+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-01' 

2025-07-14T12:19:16+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:19:16+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:19:16+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:19:16+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:19:16+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-02 

2025-07-14T12:19:16+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-02' 

2025-07-14T12:19:16+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:19:16+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:19:16+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:19:16+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:19:16+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-03 

2025-07-14T12:19:16+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-03' 

2025-07-14T12:19:16+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:19:16+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:19:16+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:19:16+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:19:16+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-04 

2025-07-14T12:19:16+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-04' 

2025-07-14T12:19:16+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:19:16+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:19:16+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:19:16+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:19:16+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-05 

2025-07-14T12:19:16+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-05' 

2025-07-14T12:19:16+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:19:16+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:19:16+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:19:16+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:19:16+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-06 

2025-07-14T12:19:16+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-06' 

2025-07-14T12:19:16+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:19:16+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:19:16+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:19:16+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:19:16+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-07 

2025-07-14T12:19:16+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-07' 

2025-07-14T12:19:16+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:19:16+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:19:16+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:19:16+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:19:16+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-08 

2025-07-14T12:19:16+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-08' 

2025-07-14T12:19:16+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:19:16+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:19:16+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:19:16+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:19:16+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-09 

2025-07-14T12:19:16+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-09' 

2025-07-14T12:19:16+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:19:16+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:19:16+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:19:16+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:19:16+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-10 

2025-07-14T12:19:16+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-10' 

2025-07-14T12:19:16+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:19:16+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:19:16+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:19:16+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:19:16+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-11 

2025-07-14T12:19:16+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-11' 

2025-07-14T12:19:16+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:19:16+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:19:16+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:19:16+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:19:16+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-12 

2025-07-14T12:19:16+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-12' 

2025-07-14T12:19:16+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:19:16+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:19:16+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:19:16+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:19:16+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-13 

2025-07-14T12:19:16+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-13' 

2025-07-14T12:19:16+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:19:16+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:19:16+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:19:16+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:19:16+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-14 

2025-07-14T12:19:16+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-14' 

2025-07-14T12:19:16+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:19:16+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:19:16+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:19:16+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:19:16+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-15 

2025-07-14T12:19:16+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-15' 

2025-07-14T12:19:16+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:19:16+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:19:16+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:19:16+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:19:16+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-16 

2025-07-14T12:19:16+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-16' 

2025-07-14T12:19:16+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:19:16+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:19:16+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:19:16+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:19:16+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-17 

2025-07-14T12:19:16+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-17' 

2025-07-14T12:19:16+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:19:16+02:00 :: Attendance Inserted 

 ============ End Of Script ================== 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceData 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-01-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-01-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 9:39 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 17:22 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:39","out_time":"17:22","duration":"7:43","late_by":"00:00","early_by":"1:8","status":2,"punch_records":"09:39:in(USB) 09:39:(USB) 14:58:out(USB) 17:22:in(USB) 17:22:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-01-05','9:39','17:22','7:43','00:00','1:8','09:39:in(USB) 09:39:(USB) 14:58:out(USB) 17:22:in(USB) 17:22:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-02-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-02-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 10:57 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 18:20 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:57","out_time":"18:20","duration":"7:23","late_by":"0:27","early_by":"0:10","status":2,"punch_records":"10:57:in(USB) 10:57:(USB) 18:20:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-02-05','10:57','18:20','7:23','0:27','0:10','10:57:in(USB) 10:57:(USB) 18:20:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-03-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-03-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 10:22 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 17:56 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:22","out_time":"17:56","duration":"7:34","late_by":"00:00","early_by":"0:34","status":2,"punch_records":"10:22:in(USB) 10:22:(USB) 17:56:out(USB) 17:56:(USB) ","overtime":"7:34","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-03-05','10:22','17:56','7:34','00:00','0:34','10:22:in(USB) 10:22:(USB) 17:56:out(USB) 17:56:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-04-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-04-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-05' 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-06-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-06-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 10:25 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 18:18 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:25","out_time":"18:18","duration":"7:53","late_by":"00:00","early_by":"0:12","status":2,"punch_records":"10:25:in(USB) 14:08:out(USB) 18:18:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-06-05','10:25','18:18','7:53','00:00','0:12','10:25:in(USB) 14:08:out(USB) 18:18:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-07-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-07-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-07-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-07-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-08-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-08-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 10:47 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 17:45 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:47","out_time":"17:45","duration":"6:58","late_by":"0:17","early_by":"0:45","status":2,"punch_records":"10:47:in(USB) 10:47:(USB) 13:51:out(USB) 13:51:(USB) 14:55:in(USB) 14:55:(USB) 17:45:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-08-05','10:47','17:45','6:58','0:17','0:45','10:47:in(USB) 10:47:(USB) 13:51:out(USB) 13:51:(USB) 14:55:in(USB) 14:55:(USB) 17:45:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-09-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-09-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 10:35 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 17:49 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:35","out_time":"17:49","duration":"7:14","late_by":"0:5","early_by":"0:41","status":2,"punch_records":"10:35:in(USB) 10:35:(USB) 14:29:out(USB) 17:49:in(USB) 17:49:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-09-05','10:35','17:49','7:14','0:5','0:41','10:35:in(USB) 10:35:(USB) 14:29:out(USB) 17:49:in(USB) 17:49:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-10-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-10-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 11:11 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 16:15 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:11","out_time":"16:15","duration":"5:4","late_by":"0:41","early_by":"2:15","status":2,"punch_records":"11:11:in(USB) 11:56:out(USB) 13:14:in(USB) 13:14:(USB) 13:23:out(USB) 14:24:in(USB) 16:15:out(USB) ","overtime":"5:04","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-10-05','11:11','16:15','5:4','0:41','2:15','11:11:in(USB) 11:56:out(USB) 13:14:in(USB) 13:14:(USB) 13:23:out(USB) 14:24:in(USB) 16:15:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-11-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-11-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-11-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-12-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-12-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 10:30 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 18:07 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:30","out_time":"18:07","duration":"7:37","late_by":"00:00","early_by":"0:23","status":2,"punch_records":"10:30:in(USB) 18:04:out(USB) 18:06:(USB) 18:07:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-12-05','10:30','18:07','7:37','00:00','0:23','10:30:in(USB) 18:04:out(USB) 18:06:(USB) 18:07:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-13 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-13' 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-14 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-14' 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-15 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-15' 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-16 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-16' 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-17 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-17' 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-18 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-18' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-19 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-19' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 11:15 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 18:06 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:15","out_time":"18:06","duration":"6:51","late_by":"0:45","early_by":"0:24","status":2,"punch_records":"11:15:in(USB) 13:49:out(USB) 13:56:in(USB) 18:06:out(USB) 18:06:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-19','11:15','18:06','6:51','0:45','0:24','11:15:in(USB) 13:49:out(USB) 13:56:in(USB) 18:06:out(USB) 18:06:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-20 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-20' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 10:28 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 17:57 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:28","out_time":"17:57","duration":"7:29","late_by":"00:00","early_by":"0:33","status":2,"punch_records":"10:28:in(USB) 17:56:out(USB) 17:57:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-20','10:28','17:57','7:29','00:00','0:33','10:28:in(USB) 17:56:out(USB) 17:57:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-21 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-21' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 10:24 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 17:47 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:24","out_time":"17:47","duration":"7:23","late_by":"00:00","early_by":"0:43","status":2,"punch_records":"10:24:in(USB) 10:24:(USB) 17:47:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-21','10:24','17:47','7:23','00:00','0:43','10:24:in(USB) 10:24:(USB) 17:47:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-22 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-22' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 11:07 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 19:52 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:07","out_time":"19:52","duration":"8:45","late_by":"0:37","early_by":"00:00","status":2,"punch_records":"11:07:in(USB) 11:07:(USB) 11:07:(USB) 19:52:out(USB) 19:52:(USB) ","overtime":"1:22","user_id":"2","user_biometric_id":"1","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-22','11:07','19:52','8:45','0:37','00:00','11:07:in(USB) 11:07:(USB) 11:07:(USB) 19:52:out(USB) 19:52:(USB) ',2,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-23 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-23' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 10:49 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 18:33 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:49","out_time":"18:33","duration":"7:44","late_by":"0:19","early_by":"00:00","status":2,"punch_records":"10:49:in(USB) 10:49:(USB) 10:49:(USB) 10:49:(USB) 18:33:out(USB) 18:33:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-23','10:49','18:33','7:44','0:19','00:00','10:49:in(USB) 10:49:(USB) 10:49:(USB) 10:49:(USB) 18:33:out(USB) 18:33:(USB) ',2,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-24 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-24' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 10:32 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 18:28 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:32","out_time":"18:28","duration":"7:56","late_by":"0:2","early_by":"0:2","status":2,"punch_records":"10:32:in(USB) 10:32:(USB) 18:28:out(USB) ","overtime":"7:56","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-24','10:32','18:28','7:56','0:2','0:2','10:32:in(USB) 10:32:(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-25 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-25' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-26 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-26' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 10:40 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 16:27 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:40","out_time":"16:27","duration":"5:47","late_by":"0:10","early_by":"2:3","status":2,"punch_records":"10:40:in(USB) 10:40:(USB) 16:27:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-26','10:40','16:27','5:47','0:10','2:3','10:40:in(USB) 10:40:(USB) 16:27:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-27 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-27' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 10:33 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 17:48 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:33","out_time":"17:48","duration":"7:15","late_by":"0:3","early_by":"0:42","status":2,"punch_records":"10:33:in(USB) 14:17:out(USB) 17:48:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-27','10:33','17:48','7:15','0:3','0:42','10:33:in(USB) 14:17:out(USB) 17:48:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-28 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-28' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 11:02 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 17:54 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:02","out_time":"17:54","duration":"6:52","late_by":"0:32","early_by":"0:36","status":2,"punch_records":"11:02:in(USB) 11:02:(USB) 12:43:out(USB) 17:54:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-28','11:02','17:54','6:52','0:32','0:36','11:02:in(USB) 11:02:(USB) 12:43:out(USB) 17:54:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-29 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-29' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 10:32 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 17:32 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:32","out_time":"17:32","duration":"7:0","late_by":"0:2","early_by":"0:58","status":2,"punch_records":"10:32:in(USB) 10:32:(USB) 14:19:out(USB) 17:32:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-29','10:32','17:32','7:0','0:2','0:58','10:32:in(USB) 10:32:(USB) 14:19:out(USB) 17:32:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-30 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-30' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , in_time => 11:01 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 , out_time => 17:48 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 2 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:01","out_time":"17:48","duration":"6:47","late_by":"0:31","early_by":"0:42","status":2,"punch_records":"11:01:in(USB) 17:48:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-30','11:01','17:48','6:47','0:31','0:42','11:01:in(USB) 17:48:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-01-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-01-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , in_time => 10:35 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , out_time => 16:10 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:35","out_time":"16:10","duration":"5:35","late_by":"0:5","early_by":"2:20","status":2,"punch_records":"10:35:in(USB) 10:51:out(USB) 11:25:in(USB) 14:00:out(USB) 14:56:in(USB) 16:10:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-01-05','10:35','16:10','5:35','0:5','2:20','10:35:in(USB) 10:51:out(USB) 11:25:in(USB) 14:00:out(USB) 14:56:in(USB) 16:10:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-02-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-02-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , in_time => 11:28 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , out_time => 16:13 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:28","out_time":"16:13","duration":"4:45","late_by":"0:58","early_by":"2:17","status":2,"punch_records":"11:28:in(USB) 11:37:out(USB) 11:56:in(USB) 13:22:out(USB) 14:53:in(USB) 16:13:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-02-05','11:28','16:13','4:45','0:58','2:17','11:28:in(USB) 11:37:out(USB) 11:56:in(USB) 13:22:out(USB) 14:53:in(USB) 16:13:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-03-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-03-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , in_time => 15:10 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , out_time => 17:39 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"15:10","out_time":"17:39","duration":"2:29","late_by":"4:40","early_by":"0:51","status":2,"punch_records":"15:10:in(USB) 15:29:out(USB) 16:10:in(USB) 16:42:out(USB) 17:05:in(USB) 17:05:(USB) 17:24:out(USB) 17:24:(USB) 17:39:in(USB) ","overtime":"2:29","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-03-05','15:10','17:39','2:29','4:40','0:51','15:10:in(USB) 15:29:out(USB) 16:10:in(USB) 16:42:out(USB) 17:05:in(USB) 17:05:(USB) 17:24:out(USB) 17:24:(USB) 17:39:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-04-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-04-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-05 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-05') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-06-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-06-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-06-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-06-05 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-06-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-06-05') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-06-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-07-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-07-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-07-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-07-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-08-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-08-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-08-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-08-05 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-08-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-08-05') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-08-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-09-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-09-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , in_time => 11:11 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , out_time => 15:03 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:11","out_time":"15:03","duration":"3:52","late_by":"0:41","early_by":"3:27","status":2,"punch_records":"11:11:in(USB) 11:16:(USB) 11:57:out(USB) 14:26:in(USB) 15:03:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-09-05','11:11','15:03','3:52','0:41','3:27','11:11:in(USB) 11:16:(USB) 11:57:out(USB) 14:26:in(USB) 15:03:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-10-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-10-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , in_time => 16:37 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , out_time => 16:47 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"16:37","out_time":"16:47","duration":"0:10","late_by":"6:7","early_by":"1:43","status":2,"punch_records":"16:37:in(USB) 16:47:out(USB) ","overtime":"0:10","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-10-05','16:37','16:47','0:10','6:7','1:43','16:37:in(USB) 16:47:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-11-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-11-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-11-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-12-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-12-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , in_time => 11:28 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , out_time => 17:17 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:28","out_time":"17:17","duration":"5:49","late_by":"0:58","early_by":"1:13","status":2,"punch_records":"11:28:in(USB) 11:33:out(USB) 15:47:in(USB) 16:57:out(USB) 16:57:(USB) 17:17:in(USB) 17:17:(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-12-05','11:28','17:17','5:49','0:58','1:13','11:28:in(USB) 11:33:out(USB) 15:47:in(USB) 16:57:out(USB) 16:57:(USB) 17:17:in(USB) 17:17:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-13 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-13' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , in_time => 11:27 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , out_time => 16:32 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:27","out_time":"16:32","duration":"5:5","late_by":"0:57","early_by":"1:58","status":2,"punch_records":"11:27:in(USB) 14:05:out(USB) 16:32:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-13','11:27','16:32','5:5','0:57','1:58','11:27:in(USB) 14:05:out(USB) 16:32:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-14 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-14' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , in_time => 15:15 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , out_time => 17:00 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"15:15","out_time":"17:00","duration":"1:45","late_by":"4:45","early_by":"1:30","status":2,"punch_records":"15:15:in(USB) 17:00:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-14','15:15','17:00','1:45','4:45','1:30','15:15:in(USB) 17:00:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-15 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-15' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , in_time => 13:25 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , out_time => 16:37 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:25","out_time":"16:37","duration":"3:12","late_by":"2:55","early_by":"1:53","status":2,"punch_records":"13:25:in(USB) 13:25:(USB) 14:26:out(USB) 16:30:in(USB) 16:30:(USB) 16:30:(USB) 16:37:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-15','13:25','16:37','3:12','2:55','1:53','13:25:in(USB) 13:25:(USB) 14:26:out(USB) 16:30:in(USB) 16:30:(USB) 16:30:(USB) 16:37:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-16 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-16' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-16','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-17 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-17' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-18 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-18' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-19 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-19' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"16:01","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"16:01:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-19','16:01','','0:00','0:00','0:00','16:01:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-20 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-20' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-20 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-20 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-20')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-20') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-20','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-21 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-21' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , in_time => 11:11 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , out_time => 14:12 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:11","out_time":"14:12","duration":"3:1","late_by":"0:41","early_by":"4:18","status":2,"punch_records":"11:11:in(USB) 11:53:out(USB) 11:53:(USB) 14:12:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-21','11:11','14:12','3:1','0:41','4:18','11:11:in(USB) 11:53:out(USB) 11:53:(USB) 14:12:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-22 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-22' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , in_time => 13:44 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , out_time => 17:21 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:44","out_time":"17:21","duration":"3:37","late_by":"3:14","early_by":"1:9","status":2,"punch_records":"13:44:in(USB) 15:00:out(USB) 17:21:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-22','13:44','17:21','3:37','3:14','1:9','13:44:in(USB) 15:00:out(USB) 17:21:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-23 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-23' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , in_time => 12:08 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , out_time => 16:17 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:08","out_time":"16:17","duration":"4:9","late_by":"1:38","early_by":"2:13","status":2,"punch_records":"12:08:in(USB) 16:17:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-23','12:08','16:17','4:9','1:38','2:13','12:08:in(USB) 16:17:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-24 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-24' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-25 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-25' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-26 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-26' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , in_time => 12:01 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , out_time => 14:20 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:01","out_time":"14:20","duration":"2:19","late_by":"1:31","early_by":"4:10","status":2,"punch_records":"12:01:in(USB) 12:01:(USB) 12:45:out(USB) 13:58:in(USB) 14:20:out(USB) 14:20:(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-26','12:01','14:20','2:19','1:31','4:10','12:01:in(USB) 12:01:(USB) 12:45:out(USB) 13:58:in(USB) 14:20:out(USB) 14:20:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-27 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-27' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , in_time => 11:13 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , out_time => 15:29 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:13","out_time":"15:29","duration":"4:16","late_by":"0:43","early_by":"3:1","status":2,"punch_records":"11:13:in(USB) 11:19:out(USB) 12:27:in(USB) 14:42:out(USB) 15:29:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-27','11:13','15:29','4:16','0:43','3:1','11:13:in(USB) 11:19:out(USB) 12:27:in(USB) 14:42:out(USB) 15:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-28 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-28' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , in_time => 10:59 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , out_time => 17:07 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:59","out_time":"17:07","duration":"6:8","late_by":"0:29","early_by":"1:23","status":2,"punch_records":"10:59:in(USB) 11:03:(USB) 11:08:out(USB) 14:54:in(USB) 17:07:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-28','10:59','17:07','6:8','0:29','1:23','10:59:in(USB) 11:03:(USB) 11:08:out(USB) 14:54:in(USB) 17:07:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-29 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-29' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"14:40","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"14:40:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-29','14:40','','0:00','0:00','0:00','14:40:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-30 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-30' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , in_time => 11:27 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 , out_time => 13:26 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 71 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:27","out_time":"13:26","duration":"1:59","late_by":"0:57","early_by":"5:4","status":2,"punch_records":"11:27:in(USB) 11:31:(USB) 12:18:out(USB) 13:26:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-30','11:27','13:26','1:59','0:57','5:4','11:27:in(USB) 11:31:(USB) 12:18:out(USB) 13:26:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-01-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-01-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-01-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-01-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-02-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-02-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-02-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-02-05 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-02-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-02-05') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-02-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-03-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-03-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-03-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-03-05 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-03-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-03-05') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-03-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-04-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-04-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-05 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-05') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-06-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-06-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , in_time => 12:30 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , out_time => 15:17 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:30","out_time":"15:17","duration":"2:47","late_by":"2:0","early_by":"3:13","status":2,"punch_records":"12:30:in(USB) 15:17:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-06-05','12:30','15:17','2:47','2:0','3:13','12:30:in(USB) 15:17:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-07-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-07-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , in_time => 11:31 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , out_time => 16:37 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:31","out_time":"16:37","duration":"5:6","late_by":"1:1","early_by":"1:53","status":2,"punch_records":"11:31:in(USB) 11:31:(USB) 14:07:out(USB) 14:07:(USB) 16:37:in(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-07-05','11:31','16:37','5:6','1:1','1:53','11:31:in(USB) 11:31:(USB) 14:07:out(USB) 14:07:(USB) 16:37:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-08-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-08-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , in_time => 11:22 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , out_time => 13:47 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:22","out_time":"13:47","duration":"2:25","late_by":"0:52","early_by":"4:43","status":2,"punch_records":"11:22:in(USB) 11:22:(USB) 13:47:out(USB) 13:47:(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-08-05','11:22','13:47','2:25','0:52','4:43','11:22:in(USB) 11:22:(USB) 13:47:out(USB) 13:47:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-09-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-09-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , in_time => 11:53 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , out_time => 15:10 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:53","out_time":"15:10","duration":"3:17","late_by":"1:23","early_by":"3:20","status":2,"punch_records":"11:53:in(USB) 11:53:(USB) 14:27:out(USB) 14:27:(USB) 14:52:in(USB) 15:10:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-09-05','11:53','15:10','3:17','1:23','3:20','11:53:in(USB) 11:53:(USB) 14:27:out(USB) 14:27:(USB) 14:52:in(USB) 15:10:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-10-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-10-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , in_time => 14:04 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , out_time => 16:39 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"14:04","out_time":"16:39","duration":"2:35","late_by":"3:34","early_by":"1:51","status":2,"punch_records":"14:04:in(USB) 14:04:(USB) 16:39:out(USB) 16:39:(USB) ","overtime":"2:35","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-10-05','14:04','16:39','2:35','3:34','1:51','14:04:in(USB) 14:04:(USB) 16:39:out(USB) 16:39:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-11-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-11-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-11-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-12-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-12-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , in_time => 11:33 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , out_time => 15:25 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:33","out_time":"15:25","duration":"3:52","late_by":"1:3","early_by":"3:5","status":2,"punch_records":"11:33:in(USB) 14:41:out(USB) 14:41:(USB) 14:49:in(USB) 14:49:(USB) 15:25:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-12-05','11:33','15:25','3:52','1:3','3:5','11:33:in(USB) 14:41:out(USB) 14:41:(USB) 14:49:in(USB) 14:49:(USB) 15:25:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-13 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-13' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , in_time => 11:27 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , out_time => 14:02 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:27","out_time":"14:02","duration":"2:35","late_by":"0:57","early_by":"4:28","status":2,"punch_records":"11:27:in(USB) 11:27:(USB) 13:17:out(USB) 14:02:in(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-13','11:27','14:02','2:35','0:57','4:28','11:27:in(USB) 11:27:(USB) 13:17:out(USB) 14:02:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-14 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-14' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-14 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-14 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-14')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-14') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-14','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-15 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-15' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , in_time => 11:01 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , out_time => 14:15 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:01","out_time":"14:15","duration":"3:14","late_by":"0:31","early_by":"4:15","status":2,"punch_records":"11:01:in(USB) 14:15:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-15','11:01','14:15','3:14','0:31','4:15','11:01:in(USB) 14:15:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-16 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-16' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-16','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-17 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-17' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-18 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-18' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-19 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-19' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-19 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-19 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-19')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-19') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-19','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-20 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-20' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-20 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-20 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-20')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-20') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-20','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-21 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-21' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-21 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-21 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-21')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-21') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-21','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-22 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-22' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-22 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-22 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-22')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-22') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-22','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-23 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-23' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-23 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-23 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-23')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-23') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-23','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-24 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-24' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-25 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-25' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-26 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-26' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , in_time => 12:38 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , out_time => 13:55 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:38","out_time":"13:55","duration":"1:17","late_by":"2:8","early_by":"4:35","status":2,"punch_records":"12:38:in(USB) 12:38:(USB) 13:55:out(USB) 13:55:(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-26','12:38','13:55','1:17','2:8','4:35','12:38:in(USB) 12:38:(USB) 13:55:out(USB) 13:55:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-27 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-27' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , in_time => 11:43 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , out_time => 14:51 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:43","out_time":"14:51","duration":"3:8","late_by":"1:13","early_by":"3:39","status":2,"punch_records":"11:43:in(USB) 11:43:(USB) 14:51:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-27','11:43','14:51','3:8','1:13','3:39','11:43:in(USB) 11:43:(USB) 14:51:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-28 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-28' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , in_time => 12:34 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , out_time => 14:50 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:34","out_time":"14:50","duration":"2:16","late_by":"2:4","early_by":"3:40","status":2,"punch_records":"12:34:in(USB) 14:50:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-28','12:34','14:50','2:16','2:4','3:40','12:34:in(USB) 14:50:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-29 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-29' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-29 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-29 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-29')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-29') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-29','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-30 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-30' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-30 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-30 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-30')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-30') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 72 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-30','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-01-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-01-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:38 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 17:09 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:38","out_time":"17:09","duration":"6:31","late_by":"0:8","early_by":"1:21","status":2,"punch_records":"10:38:in(USB) 13:19:out(USB) 13:58:in(USB) 13:58:(USB) 16:20:out(USB) 17:09:in(USB) 17:09:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-01-05','10:38','17:09','6:31','0:8','1:21','10:38:in(USB) 13:19:out(USB) 13:58:in(USB) 13:58:(USB) 16:20:out(USB) 17:09:in(USB) 17:09:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-02-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-02-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:44 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:33 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:44","out_time":"18:33","duration":"7:49","late_by":"0:14","early_by":"00:00","status":2,"punch_records":"10:44:in(USB) 10:44:(USB) 13:00:out(USB) 13:00:(USB) 13:59:in(USB) 13:59:(USB) 13:59:(USB) 14:11:out(USB) 14:11:(USB) 18:33:in(USB) 18:33:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-02-05','10:44','18:33','7:49','0:14','00:00','10:44:in(USB) 10:44:(USB) 13:00:out(USB) 13:00:(USB) 13:59:in(USB) 13:59:(USB) 13:59:(USB) 14:11:out(USB) 14:11:(USB) 18:33:in(USB) 18:33:(USB) ',2,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-03-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-03-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:41 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:25 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:41","out_time":"18:25","duration":"7:44","late_by":"0:11","early_by":"0:5","status":2,"punch_records":"10:41:in(USB) 11:12:out(USB) 13:19:in(USB) 18:25:out(USB) ","overtime":"7:44","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-03-05','10:41','18:25','7:44','0:11','0:5','10:41:in(USB) 11:12:out(USB) 13:19:in(USB) 18:25:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-04-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-04-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:37 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 17:47 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:37","out_time":"17:47","duration":"7:10","late_by":"0:7","early_by":"0:43","status":2,"punch_records":"10:37:in(USB) 11:25:out(USB) 13:11:in(USB) 16:56:out(USB) 16:56:(USB) 17:47:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-05','10:37','17:47','7:10','0:7','0:43','10:37:in(USB) 11:25:out(USB) 13:11:in(USB) 16:56:out(USB) 16:56:(USB) 17:47:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-06-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-06-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:17 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:30 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:17","out_time":"18:30","duration":"8:13","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:17:in(USB) 12:27:out(USB) 13:16:in(USB) 13:28:out(USB) 14:05:in(USB) 15:07:out(USB) 15:07:(USB) 16:59:in(USB) 18:10:out(USB) 18:30:in(USB) 18:30:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-06-05','10:17','18:30','8:13','00:00','00:00','10:17:in(USB) 12:27:out(USB) 13:16:in(USB) 13:28:out(USB) 14:05:in(USB) 15:07:out(USB) 15:07:(USB) 16:59:in(USB) 18:10:out(USB) 18:30:in(USB) 18:30:(USB) ',2,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-07-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-07-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:08 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 14:55 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:08","out_time":"14:55","duration":"4:47","late_by":"00:00","early_by":"3:35","status":2,"punch_records":"10:08:in(USB) 10:08:(USB) 14:55:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-07-05','10:08','14:55','4:47','00:00','3:35','10:08:in(USB) 10:08:(USB) 14:55:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-08-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-08-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:27 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:27","out_time":"18:32","duration":"8:5","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:27:in(USB) 18:32:out(USB) 18:32:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-08-05','10:27','18:32','8:5','00:00','00:00','10:27:in(USB) 18:32:out(USB) 18:32:(USB) ',2,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-09-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-09-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 11:07 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:07","out_time":"18:32","duration":"7:25","late_by":"0:37","early_by":"00:00","status":2,"punch_records":"11:07:in(USB) 13:52:out(USB) 13:52:(USB) 18:32:in(USB) 18:32:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-09-05','11:07','18:32','7:25','0:37','00:00','11:07:in(USB) 13:52:out(USB) 13:52:(USB) 18:32:in(USB) 18:32:(USB) ',2,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-10-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-10-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:09 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:13 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:09","out_time":"18:13","duration":"8:4","late_by":"00:00","early_by":"0:17","status":2,"punch_records":"10:09:in(USB) 10:09:(USB) 11:24:out(USB) 12:29:in(USB) 12:29:(USB) 12:55:out(USB) 13:05:in(USB) 14:12:out(USB) 14:12:(USB) 15:32:in(USB) 15:32:(USB) 16:32:out(USB) 18:13:in(USB) 18:13:(USB) ","overtime":"8:04","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-10-05','10:09','18:13','8:4','00:00','0:17','10:09:in(USB) 10:09:(USB) 11:24:out(USB) 12:29:in(USB) 12:29:(USB) 12:55:out(USB) 13:05:in(USB) 14:12:out(USB) 14:12:(USB) 15:32:in(USB) 15:32:(USB) 16:32:out(USB) 18:13:in(USB) 18:13:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-11-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-11-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-11-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-12-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-12-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:13 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:24 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:13","out_time":"18:24","duration":"8:11","late_by":"00:00","early_by":"0:6","status":2,"punch_records":"10:13:in(USB) 10:21:out(USB) 10:21:(USB) 10:39:in(USB) 10:47:out(USB) 10:47:(USB) 11:01:in(USB) 15:10:out(USB) 16:31:in(USB) 18:24:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-12-05','10:13','18:24','8:11','00:00','0:6','10:13:in(USB) 10:21:out(USB) 10:21:(USB) 10:39:in(USB) 10:47:out(USB) 10:47:(USB) 11:01:in(USB) 15:10:out(USB) 16:31:in(USB) 18:24:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-13 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-13' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:29 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:00 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:29","out_time":"18:00","duration":"7:31","late_by":"00:00","early_by":"0:30","status":2,"punch_records":"10:29:in(USB) 13:23:out(USB) 13:23:(USB) 13:44:in(USB) 13:44:(USB) 16:30:out(USB) 16:30:(USB) 18:00:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-13','10:29','18:00','7:31','00:00','0:30','10:29:in(USB) 13:23:out(USB) 13:23:(USB) 13:44:in(USB) 13:44:(USB) 16:30:out(USB) 16:30:(USB) 18:00:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-14 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-14' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:46 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:46","duration":"8:12","late_by":"0:4","early_by":"00:00","status":2,"punch_records":"10:34:in(USB) 10:57:out(USB) 10:57:(USB) 11:28:in(USB) 11:34:out(USB) 11:34:(USB) 13:20:in(USB) 13:20:(USB) 14:57:out(USB) 16:43:in(USB) 16:43:(USB) 17:46:out(USB) 18:46:in(USB) 18:46:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-14','10:34','18:46','8:12','0:4','00:00','10:34:in(USB) 10:57:out(USB) 10:57:(USB) 11:28:in(USB) 11:34:out(USB) 11:34:(USB) 13:20:in(USB) 13:20:(USB) 14:57:out(USB) 16:43:in(USB) 16:43:(USB) 17:46:out(USB) 18:46:in(USB) 18:46:(USB) ',2,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-15 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-15' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:37 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:20 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:37","out_time":"18:20","duration":"7:43","late_by":"0:7","early_by":"0:10","status":2,"punch_records":"10:37:in(USB) 10:37:(USB) 11:17:out(USB) 11:17:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:19:(USB) 11:20:(USB) 12:46:in(USB) 14:16:out(USB) 14:16:(USB) 16:57:in(USB) 16:57:(USB) 18:17:out(USB) 18:20:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-15','10:37','18:20','7:43','0:7','0:10','10:37:in(USB) 10:37:(USB) 11:17:out(USB) 11:17:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:19:(USB) 11:20:(USB) 12:46:in(USB) 14:16:out(USB) 14:16:(USB) 16:57:in(USB) 16:57:(USB) 18:17:out(USB) 18:20:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-16 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-16' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:51 , organization_id => 1 , date => 2025-05-16  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 15:54 , organization_id => 1 , date => 2025-05-16  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:51","out_time":"15:54","duration":"5:3","late_by":"0:21","early_by":"2:36","status":2,"punch_records":"10:51:in(USB) 11:05:out(USB) 11:05:(USB) 11:12:in(USB) 11:12:(USB) 13:11:out(USB) 14:22:in(USB) 14:22:(USB) 14:34:out(USB) 15:54:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-16','10:51','15:54','5:3','0:21','2:36','10:51:in(USB) 11:05:out(USB) 11:05:(USB) 11:12:in(USB) 11:12:(USB) 13:11:out(USB) 14:22:in(USB) 14:22:(USB) 14:34:out(USB) 15:54:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-17 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-17' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:32 , organization_id => 1 , date => 2025-05-17  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-17' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:38 , organization_id => 1 , date => 2025-05-17  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:32","out_time":"18:38","duration":"8:6","late_by":"0:2","early_by":"00:00","status":2,"punch_records":"10:32:in(USB) 10:32:(USB) 11:29:out(USB) 13:15:in(USB) 15:08:out(USB) 18:18:in(USB) 18:38:out(USB) ","overtime":"8:06","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-17','10:32','18:38','8:6','0:2','00:00','10:32:in(USB) 10:32:(USB) 11:29:out(USB) 13:15:in(USB) 15:08:out(USB) 18:18:in(USB) 18:38:out(USB) ',2,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-18 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-18' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-19 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-19' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:32","duration":"7:58","late_by":"0:4","early_by":"00:00","status":2,"punch_records":"10:34:in(USB) 10:34:(USB) 10:34:(USB) 10:40:out(USB) 10:56:in(USB) 12:06:out(USB) 12:20:in(USB) 12:32:out(USB) 16:57:in(USB) 17:07:out(USB) 18:32:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-19','10:34','18:32','7:58','0:4','00:00','10:34:in(USB) 10:34:(USB) 10:34:(USB) 10:40:out(USB) 10:56:in(USB) 12:06:out(USB) 12:20:in(USB) 12:32:out(USB) 16:57:in(USB) 17:07:out(USB) 18:32:in(USB) ',2,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-20 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-20' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:44 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 17:11 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:44","out_time":"17:11","duration":"6:27","late_by":"0:14","early_by":"1:19","status":2,"punch_records":"10:44:in(USB) 11:08:out(USB) 12:16:in(USB) 13:41:out(USB) 16:15:in(USB) 16:15:(USB) 17:11:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-20','10:44','17:11','6:27','0:14','1:19','10:44:in(USB) 11:08:out(USB) 12:16:in(USB) 13:41:out(USB) 16:15:in(USB) 16:15:(USB) 17:11:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-21 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-21' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:28","duration":"7:54","late_by":"0:4","early_by":"0:2","status":2,"punch_records":"10:34:in(TD) 10:47:out(USB) 10:47:(USB) 13:39:in(USB) 16:12:out(USB) 16:50:in(USB) 18:28:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-21','10:34','18:28','7:54','0:4','0:2','10:34:in(TD) 10:47:out(USB) 10:47:(USB) 13:39:in(USB) 16:12:out(USB) 16:50:in(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-22 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-22' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:28","duration":"7:54","late_by":"0:4","early_by":"0:2","status":2,"punch_records":"10:34:in(USB) 10:34:(USB) 15:48:out(USB) 18:24:in(USB) 18:24:(USB) 18:28:(USB) 18:28:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-22','10:34','18:28','7:54','0:4','0:2','10:34:in(USB) 10:34:(USB) 15:48:out(USB) 18:24:in(USB) 18:24:(USB) 18:28:(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-23 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-23' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:29 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:29","out_time":"18:28","duration":"7:59","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:29:in(USB) 10:36:out(USB) 10:36:(USB) 12:21:in(USB) 13:21:out(USB) 13:50:in(USB) 14:11:out(USB) 16:26:in(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-23','10:29','18:28','7:59','00:00','0:2','10:29:in(USB) 10:36:out(USB) 10:36:(USB) 12:21:in(USB) 13:21:out(USB) 13:50:in(USB) 14:11:out(USB) 16:26:in(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-24 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-24' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:14 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:29 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:14","out_time":"18:29","duration":"8:15","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:14:in(USB) 10:22:out(USB) 13:42:in(USB) 16:29:out(USB) 17:51:in(USB) 18:14:out(USB) 18:29:in(USB) ","overtime":"8:15","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-24','10:14','18:29','8:15','00:00','0:1','10:14:in(USB) 10:22:out(USB) 13:42:in(USB) 16:29:out(USB) 17:51:in(USB) 18:14:out(USB) 18:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-25 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-25' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-26 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-26' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:26 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:26","out_time":"18:32","duration":"8:6","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:26:in(USB) 10:35:out(USB) 10:35:(USB) 10:40:(USB) 10:43:in(USB) 13:41:out(USB) 13:58:in(USB) 14:20:out(USB) 15:11:in(USB) 17:01:out(USB) 17:39:in(USB) 17:52:out(USB) 17:52:(USB) 18:29:in(USB) 18:32:(USB) 18:32:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-26','10:26','18:32','8:6','00:00','00:00','10:26:in(USB) 10:35:out(USB) 10:35:(USB) 10:40:(USB) 10:43:in(USB) 13:41:out(USB) 13:58:in(USB) 14:20:out(USB) 15:11:in(USB) 17:01:out(USB) 17:39:in(USB) 17:52:out(USB) 17:52:(USB) 18:29:in(USB) 18:32:(USB) 18:32:(USB) ',2,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-27 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-27' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:27 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 14:28 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:27","out_time":"14:28","duration":"4:1","late_by":"00:00","early_by":"4:2","status":2,"punch_records":"10:27:in(USB) 13:26:out(USB) 14:28:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-27','10:27','14:28','4:1','00:00','4:2','10:27:in(USB) 13:26:out(USB) 14:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-28 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-28' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:34 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:34","duration":"8:0","late_by":"0:4","early_by":"00:00","status":2,"punch_records":"10:34:in(USB) 11:56:out(USB) 15:00:in(USB) 15:01:(USB) 16:26:out(USB) 17:34:in(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-28','10:34','18:34','8:0','0:4','00:00','10:34:in(USB) 11:56:out(USB) 15:00:in(USB) 15:01:(USB) 16:26:out(USB) 17:34:in(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ',2,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-29 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-29' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:29 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 14:19 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:29","out_time":"14:19","duration":"3:50","late_by":"00:00","early_by":"4:11","status":2,"punch_records":"10:29:in(USB) 10:29:(USB) 11:35:out(USB) 11:41:in(USB) 11:41:(USB) 11:41:(USB) 11:41:(USB) 11:43:(USB) 11:43:(USB) 11:44:(USB) 11:44:(USB) 11:50:out(USB) 11:51:(USB) 13:45:in(USB) 13:54:out(USB) 14:16:in(USB) 14:19:(USB) 14:19:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-29','10:29','14:19','3:50','00:00','4:11','10:29:in(USB) 10:29:(USB) 11:35:out(USB) 11:41:in(USB) 11:41:(USB) 11:41:(USB) 11:41:(USB) 11:43:(USB) 11:43:(USB) 11:44:(USB) 11:44:(USB) 11:50:out(USB) 11:51:(USB) 13:45:in(USB) 13:54:out(USB) 14:16:in(USB) 14:19:(USB) 14:19:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-30 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-30' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , in_time => 10:26 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 40 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:26","out_time":"18:28","duration":"8:2","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:26:in(USB) 12:06:out(USB) 12:06:(USB) 12:59:in(USB) 14:21:out(USB) 18:28:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-30','10:26','18:28','8:2','00:00','0:2','10:26:in(USB) 12:06:out(USB) 12:06:(USB) 12:59:in(USB) 14:21:out(USB) 18:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-01-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-01-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:54","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"09:54:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-01-05','9:54','','0:00','0:00','0:00','09:54:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-02-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-02-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"18:28","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"18:28:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-02-05','18:28','','0:00','0:00','0:00','18:28:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-03-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-03-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , in_time => 10:07 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , out_time => 13:51 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:07","out_time":"13:51","duration":"3:44","late_by":"00:00","early_by":"4:39","status":2,"punch_records":"10:07:in(USB) 13:51:out(USB) 13:51:(USB) ","overtime":"3:44","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-03-05','10:07','13:51','3:44','00:00','4:39','10:07:in(USB) 13:51:out(USB) 13:51:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-04-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-04-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , in_time => 10:09 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , out_time => 18:29 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:09","out_time":"18:29","duration":"8:20","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:09:in(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-05','10:09','18:29','8:20','00:00','0:1','10:09:in(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-06-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-06-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , in_time => 9:40 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , out_time => 18:29 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:40","out_time":"18:29","duration":"8:49","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:40:in(USB) 09:40:(USB) 18:29:out(USB) 18:29:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-06-05','9:40','18:29','8:49','00:00','0:1','09:40:in(USB) 09:40:(USB) 18:29:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-07-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-07-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , in_time => 9:53 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , out_time => 14:22 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:53","out_time":"14:22","duration":"4:29","late_by":"00:00","early_by":"4:8","status":2,"punch_records":"09:53:in(USB) 09:53:(USB) 14:22:out(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-07-05','9:53','14:22','4:29','00:00','4:8','09:53:in(USB) 09:53:(USB) 14:22:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-08-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-08-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , in_time => 10:13 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , out_time => 18:27 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:13","out_time":"18:27","duration":"8:14","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:13:in(USB) 10:13:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-08-05','10:13','18:27','8:14','00:00','0:3','10:13:in(USB) 10:13:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-09-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-09-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , in_time => 10:02 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , out_time => 18:27 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:02","out_time":"18:27","duration":"8:25","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:02:in(USB) 10:02:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-09-05','10:02','18:27','8:25','00:00','0:3','10:02:in(USB) 10:02:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-10-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-10-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , in_time => 10:14 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , out_time => 16:15 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:14","out_time":"16:15","duration":"6:1","late_by":"00:00","early_by":"2:15","status":2,"punch_records":"10:14:in(USB) 10:14:(USB) 13:53:out(USB) 13:53:(USB) 16:15:in(USB) ","overtime":"6:01","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-10-05','10:14','16:15','6:1','00:00','2:15','10:14:in(USB) 10:14:(USB) 13:53:out(USB) 13:53:(USB) 16:15:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-11-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-11-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-11-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-12-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-12-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , in_time => 10:28 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , out_time => 18:28 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:28","out_time":"18:28","duration":"8:0","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:28:in(USB) 10:28:(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-12-05','10:28','18:28','8:0','00:00','0:2','10:28:in(USB) 10:28:(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-13 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-13' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , in_time => 10:02 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , out_time => 18:27 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:02","out_time":"18:27","duration":"8:25","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:02:in(USB) 10:02:(USB) 16:44:out(USB) 18:27:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-13','10:02','18:27','8:25','00:00','0:3','10:02:in(USB) 10:02:(USB) 16:44:out(USB) 18:27:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-14 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-14' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , in_time => 10:18 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , out_time => 18:32 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:18","out_time":"18:32","duration":"8:14","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:18:in(USB) 10:18:(USB) 13:44:out(USB) 13:44:(USB) 18:32:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-14','10:18','18:32','8:14','00:00','00:00','10:18:in(USB) 10:18:(USB) 13:44:out(USB) 13:44:(USB) 18:32:in(USB) ',2,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-15 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-15' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:37","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"10:37:in(USB) 10:37:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-15','10:37','','0:00','0:00','0:00','10:37:in(USB) 10:37:(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-16 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-16' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-16','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-17 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-17' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-18 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-18' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-19 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-19' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , in_time => 10:04 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , out_time => 18:29 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:04","out_time":"18:29","duration":"8:25","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:04:in(USB) 11:44:out(USB) 18:29:in(USB) 18:29:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-19','10:04','18:29','8:25','00:00','0:1','10:04:in(USB) 11:44:out(USB) 18:29:in(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-20 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-20' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:53","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"09:53:in(USB) 09:54:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-20','9:53','','0:00','0:00','0:00','09:53:in(USB) 09:54:(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-21 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-21' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-21 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-21 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-21')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-21') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-21','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-22 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-22' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-22 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-22 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-22')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-22') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-22','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-23 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-23' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , in_time => 9:59 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , out_time => 18:26 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:59","out_time":"18:26","duration":"8:27","late_by":"00:00","early_by":"0:4","status":2,"punch_records":"09:59:in(USB) 18:26:out(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-23','9:59','18:26','8:27','00:00','0:4','09:59:in(USB) 18:26:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-24 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-24' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-25 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-25' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-26 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-26' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-26 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-26 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-26')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-26') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-26','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-27 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-27' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-27 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-27 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-27')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-27') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-27','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-28 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-28' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-28 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-28 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-28')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-28') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-28','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-29 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-29' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-29 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-29 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-29')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-29') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-29','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-30 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-30' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-30 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-30 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-30')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-30') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 42 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-30','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-01-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-01-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , in_time => 10:16 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , out_time => 17:30 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:16","out_time":"17:30","duration":"7:14","late_by":"00:00","early_by":"1:0","status":2,"punch_records":"10:16:in(USB) 13:50:out(USB) 13:50:(USB) 17:30:in(USB) 17:30:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-01-05','10:16','17:30','7:14','00:00','1:0','10:16:in(USB) 13:50:out(USB) 13:50:(USB) 17:30:in(USB) 17:30:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-02-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-02-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"18:31","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"18:31:in(USB) 18:31:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-02-05','18:31','','0:00','0:00','0:00','18:31:in(USB) 18:31:(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-03-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-03-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , in_time => 13:04 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , out_time => 18:27 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:04","out_time":"18:27","duration":"5:23","late_by":"2:34","early_by":"0:3","status":2,"punch_records":"13:04:in(USB) 13:04:(USB) 14:45:out(USB) 14:45:(USB) 18:27:in(USB) 18:27:(USB) ","overtime":"5:23","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-03-05','13:04','18:27','5:23','2:34','0:3','13:04:in(USB) 13:04:(USB) 14:45:out(USB) 14:45:(USB) 18:27:in(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-04-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-04-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-05 , organization_id => 1 

2025-07-14T12:49:39+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:39+02:00 :: requested param :: date => 2025-05-05 , organization => 1 

2025-07-14T12:49:39+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-05') IS NOT NULL 

2025-07-14T12:49:39+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-06-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-06-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , in_time => 10:09 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:09","out_time":"18:29","duration":"8:20","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:09:in(USB) 18:29:out(USB) 18:29:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-06-05','10:09','18:29','8:20','00:00','0:1','10:09:in(USB) 18:29:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-07-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-07-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , in_time => 10:03 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , out_time => 18:52 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:03","out_time":"18:52","duration":"8:49","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:03:in(USB) 10:03:(USB) 18:52:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-07-05','10:03','18:52','8:49','00:00','00:00','10:03:in(USB) 10:03:(USB) 18:52:out(USB) ',2,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-08-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-08-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , in_time => 10:02 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , out_time => 18:30 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:02","out_time":"18:30","duration":"8:28","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:02:in(USB) 14:08:out(USB) 18:30:in(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-08-05','10:02','18:30','8:28','00:00','00:00','10:02:in(USB) 14:08:out(USB) 18:30:in(USB) ',2,'') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-09-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-09-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , in_time => 10:08 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , out_time => 18:28 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:08","out_time":"18:28","duration":"8:20","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:08:in(USB) 18:28:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-09-05','10:08','18:28','8:20','00:00','0:2','10:08:in(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:39+02:00 :: Insert into attendance successful 

2025-07-14T12:49:39+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:39+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:39+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:39+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-10-05 

2025-07-14T12:49:39+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-10-05' 

2025-07-14T12:49:39+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:39+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , in_time => 10:16 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 , out_time => 18:28 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:49:39+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:39+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:39+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:39+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:39+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:39+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:16","out_time":"18:28","duration":"8:12","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:16:in(USB) 10:16:(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"8:12","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:39+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-10-05','10:16','18:28','8:12','00:00','0:2','10:16:in(USB) 10:16:(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-11-05 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-11-05' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:49:40+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:49:40+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-11-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-12-05 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-12-05' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , in_time => 10:04 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , out_time => 18:27 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:04","out_time":"18:27","duration":"8:23","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:04:in(USB) 18:27:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-12-05','10:04','18:27','8:23','00:00','0:3','10:04:in(USB) 18:27:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-13 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-13' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , in_time => 10:08 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:08","out_time":"18:29","duration":"8:21","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:08:in(USB) 10:09:(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-13','10:08','18:29','8:21','00:00','0:1','10:08:in(USB) 10:09:(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-14 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-14' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , in_time => 10:03 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , out_time => 18:35 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:03","out_time":"18:35","duration":"8:32","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:03:in(USB) 10:03:(USB) 18:35:out(USB) 18:35:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-14','10:03','18:35','8:32','00:00','00:00','10:03:in(USB) 10:03:(USB) 18:35:out(USB) 18:35:(USB) ',2,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-15 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-15' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , in_time => 10:21 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , out_time => 18:30 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:21","out_time":"18:30","duration":"8:9","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:21:in(USB) 10:21:(USB) 18:30:out(USB) 18:30:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-15','10:21','18:30','8:9','00:00','00:00','10:21:in(USB) 10:21:(USB) 18:30:out(USB) 18:30:(USB) ',2,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-16 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-16' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T12:49:40+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T12:49:40+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-16','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-17 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-17' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-18 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-18' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-19 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-19' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-19 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-19 , organization => 1 

2025-07-14T12:49:40+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-19')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-19') IS NOT NULL 

2025-07-14T12:49:40+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-19','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-20 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-20' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-20 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-20 , organization => 1 

2025-07-14T12:49:40+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-20')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-20') IS NOT NULL 

2025-07-14T12:49:40+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-20','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-21 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-21' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-21 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-21 , organization => 1 

2025-07-14T12:49:40+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-21')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-21') IS NOT NULL 

2025-07-14T12:49:40+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-21','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-22 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-22' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-22 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-22 , organization => 1 

2025-07-14T12:49:40+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-22')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-22') IS NOT NULL 

2025-07-14T12:49:40+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-22','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-23 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-23' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-23 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-23 , organization => 1 

2025-07-14T12:49:40+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-23')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-23') IS NOT NULL 

2025-07-14T12:49:40+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-23','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-24 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-24' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-25 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-25' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-26 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-26' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , in_time => 10:33 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:33","out_time":"18:29","duration":"7:56","late_by":"0:3","early_by":"0:1","status":2,"punch_records":"10:33:in(USB) 18:29:out(USB) 18:29:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-26','10:33','18:29','7:56','0:3','0:1','10:33:in(USB) 18:29:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-27 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-27' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , in_time => 10:04 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , out_time => 18:28 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:04","out_time":"18:28","duration":"8:24","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:04:in(USB) 13:54:out(USB) 13:54:(USB) 18:28:in(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-27','10:04','18:28','8:24','00:00','0:2','10:04:in(USB) 13:54:out(USB) 13:54:(USB) 18:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-28 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-28' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , in_time => 10:06 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , out_time => 18:30 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:06","out_time":"18:30","duration":"8:24","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:06:in(USB) 10:07:(USB) 18:30:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-28','10:06','18:30','8:24','00:00','00:00','10:06:in(USB) 10:07:(USB) 18:30:out(USB) ',2,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-29 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-29' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , in_time => 10:00 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:00","out_time":"18:29","duration":"8:29","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:00:in(USB) 10:01:(USB) 14:02:out(USB) 18:29:in(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-29','10:00','18:29','8:29','00:00','0:1','10:00:in(USB) 10:01:(USB) 14:02:out(USB) 18:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-30 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-30' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , in_time => 10:12 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 , out_time => 18:27 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 27 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:12","out_time":"18:27","duration":"8:15","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:12:in(USB) 10:12:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-30','10:12','18:27','8:15','00:00','0:3','10:12:in(USB) 10:12:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-01-05 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-01-05' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 9:22 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 17:29 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:22","out_time":"17:29","duration":"8:7","late_by":"00:00","early_by":"1:1","status":2,"punch_records":"09:22:in(USB) 17:29:out(USB) 17:29:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-01-05','9:22','17:29','8:7','00:00','1:1','09:22:in(USB) 17:29:out(USB) 17:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-02-05 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-02-05' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 9:34 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 18:32 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:34","out_time":"18:32","duration":"8:58","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:34:in(USB) 18:32:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-02-05','9:34','18:32','8:58','00:00','00:00','09:34:in(USB) 18:32:out(USB) ',2,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-03-05 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-03-05' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 9:27 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 18:27 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:27","out_time":"18:27","duration":"9:0","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"09:27:in(USB) 18:26:out(USB) 18:27:(USB) ","overtime":"8:59","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-03-05','9:27','18:27','9:0','00:00','0:3','09:27:in(USB) 18:26:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-04-05 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-04-05' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-05 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-05' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 8:57 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 18:30 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"8:57","out_time":"18:30","duration":"9:33","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"08:57:in(USB) 09:27:out(USB) 09:56:in(USB) 17:14:out(USB) 17:14:(USB) 18:30:in(USB) 18:30:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-05','8:57','18:30','9:33','00:00','00:00','08:57:in(USB) 09:27:out(USB) 09:56:in(USB) 17:14:out(USB) 17:14:(USB) 18:30:in(USB) 18:30:(USB) ',2,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-06-05 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-06-05' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 9:20 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:20","out_time":"18:29","duration":"9:9","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:20:in(USB) 09:20:(USB) 09:50:out(USB) 18:29:in(USB) 18:29:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-06-05','9:20','18:29','9:9','00:00','0:1','09:20:in(USB) 09:20:(USB) 09:50:out(USB) 18:29:in(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-07-05 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-07-05' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 9:21 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 18:51 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:21","out_time":"18:51","duration":"9:30","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:21:in(USB) 09:21:(USB) 09:54:out(USB) 13:54:in(USB) 18:51:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-07-05','9:21','18:51','9:30','00:00','00:00','09:21:in(USB) 09:21:(USB) 09:54:out(USB) 13:54:in(USB) 18:51:out(USB) ',2,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-08-05 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-08-05' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 9:26 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:26","out_time":"18:29","duration":"9:3","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:26:in(USB) 09:57:out(USB) 16:47:in(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-08-05','9:26','18:29','9:3','00:00','0:1','09:26:in(USB) 09:57:out(USB) 16:47:in(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-09-05 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-09-05' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-09-05 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-09-05 , organization => 1 

2025-07-14T12:49:40+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-09-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-09-05') IS NOT NULL 

2025-07-14T12:49:40+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-09-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-10-05 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-10-05' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-10-05 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-10-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-11-05 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-11-05' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:49:40+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:49:40+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-11-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-12-05 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-12-05' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-12-05 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-12-05 , organization => 1 

2025-07-14T12:49:40+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-12-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-12-05') IS NOT NULL 

2025-07-14T12:49:40+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-12-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-13 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-13' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-13 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-13 , organization => 1 

2025-07-14T12:49:40+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-13')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-13') IS NOT NULL 

2025-07-14T12:49:40+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-13','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-14 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-14' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-14 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-14 , organization => 1 

2025-07-14T12:49:40+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-14')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-14') IS NOT NULL 

2025-07-14T12:49:40+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-14','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-15 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-15' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 9:12 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 18:30 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:12","out_time":"18:30","duration":"9:18","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:12:in(USB) 09:50:out(USB) 18:30:in(USB) 18:30:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-15','9:12','18:30','9:18','00:00','00:00','09:12:in(USB) 09:50:out(USB) 18:30:in(USB) 18:30:(USB) ',2,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-16 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-16' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 9:16 , organization_id => 1 , date => 2025-05-16  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 18:34 , organization_id => 1 , date => 2025-05-16  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:16","out_time":"18:34","duration":"9:18","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:16:in(USB) 09:16:(USB) 09:56:out(USB) 09:56:(USB) 16:32:in(USB) 16:32:(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-16','9:16','18:34','9:18','00:00','00:00','09:16:in(USB) 09:16:(USB) 09:56:out(USB) 09:56:(USB) 16:32:in(USB) 16:32:(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ',2,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-17 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-17' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 9:17 , organization_id => 1 , date => 2025-05-17  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-05-17  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-17' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:17","out_time":"18:29","duration":"9:12","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:17:in(USB) 18:28:out(USB) 18:29:(USB) ","overtime":"9:11","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-17','9:17','18:29','9:12','00:00','0:1','09:17:in(USB) 18:28:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-18 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-18' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-19 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-19' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 8:58 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 18:58 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"8:58","out_time":"18:58","duration":"10:0","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"08:58:in(USB) 08:58:(USB) 09:32:out(USB) 09:32:(USB) 18:58:in(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-19','8:58','18:58','10:0','00:00','00:00','08:58:in(USB) 08:58:(USB) 09:32:out(USB) 09:32:(USB) 18:58:in(USB) ',2,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-20 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-20' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 9:17 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:17","out_time":"18:29","duration":"9:12","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:17:in(USB) 09:50:out(USB) 18:29:in(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-20','9:17','18:29','9:12','00:00','0:1','09:17:in(USB) 09:50:out(USB) 18:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-21 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-21' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 9:12 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 9:42 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:12","out_time":"9:42","duration":"0:30","late_by":"00:00","early_by":"8:48","status":2,"punch_records":"09:12:in(USB) 09:42:out(USB) 09:42:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-21','9:12','9:42','0:30','00:00','8:48','09:12:in(USB) 09:42:out(USB) 09:42:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-22 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-22' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 9:24 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:24","out_time":"18:29","duration":"9:5","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:24:in(USB) 13:45:out(USB) 14:11:in(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-22','9:24','18:29','9:5','00:00','0:1','09:24:in(USB) 13:45:out(USB) 14:11:in(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-23 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-23' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 9:25 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 18:28 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:25","out_time":"18:28","duration":"9:3","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"09:25:in(USB) 09:25:(USB) 09:59:out(USB) 14:07:in(USB) 18:28:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-23','9:25','18:28','9:3','00:00','0:2','09:25:in(USB) 09:25:(USB) 09:59:out(USB) 14:07:in(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-24 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-24' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 9:19 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 18:28 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:19","out_time":"18:28","duration":"9:9","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"09:19:in(USB) 09:55:out(USB) 18:28:in(USB) ","overtime":"9:09","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-24','9:19','18:28','9:9','00:00','0:2','09:19:in(USB) 09:55:out(USB) 18:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-25 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-25' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:49:40+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:49:40+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-26 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-26' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:14","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"09:14:in(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-26','9:14','','0:00','0:00','0:00','09:14:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-27 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-27' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 9:12 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 9:38 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:12","out_time":"9:38","duration":"0:26","late_by":"00:00","early_by":"8:52","status":2,"punch_records":"09:12:in(USB) 09:38:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-27','9:12','9:38','0:26','00:00','8:52','09:12:in(USB) 09:38:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-28 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-28' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 9:24 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 18:30 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:24","out_time":"18:30","duration":"9:6","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:24:in(USB) 09:24:(USB) 09:50:out(USB) 14:03:in(USB) 18:30:out(USB) 18:30:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-28','9:24','18:30','9:6','00:00','00:00','09:24:in(USB) 09:24:(USB) 09:50:out(USB) 14:03:in(USB) 18:30:out(USB) 18:30:(USB) ',2,'') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-29 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-29' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 13:42 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 18:28 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:42","out_time":"18:28","duration":"4:46","late_by":"3:12","early_by":"0:2","status":2,"punch_records":"13:42:in(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-29','13:42','18:28','4:46','3:12','0:2','13:42:in(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:49:40+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:49:40+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:49:40+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-30 

2025-07-14T12:49:40+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-30' 

2025-07-14T12:49:40+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:49:40+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , in_time => 9:29 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 , out_time => 18:27 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:49:40+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:49:40+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:49:40+02:00 :: requested param :: user_id => 23 

2025-07-14T12:49:40+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:49:40+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:49:40+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:29","out_time":"18:27","duration":"8:58","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"09:29:in(USB) 09:43:out(USB) 13:53:in(USB) 13:53:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:49:40+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-30','9:29','18:27','8:58','00:00','0:3','09:29:in(USB) 09:43:out(USB) 13:53:in(USB) 13:53:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:49:40+02:00 :: Insert into attendance successful 

2025-07-14T12:49:40+02:00 :: Attendance Inserted 

 ============ End Of Script ================== 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceData 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-01-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-01-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 9:39 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 17:22 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:39","out_time":"17:22","duration":"7:43","late_by":"00:00","early_by":"1:8","status":2,"punch_records":"09:39:in(USB) 09:39:(USB) 14:58:out(USB) 17:22:in(USB) 17:22:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-01-05','9:39','17:22','7:43','00:00','1:8','09:39:in(USB) 09:39:(USB) 14:58:out(USB) 17:22:in(USB) 17:22:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-02-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-02-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:57 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 18:20 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:57","out_time":"18:20","duration":"7:23","late_by":"0:27","early_by":"0:10","status":2,"punch_records":"10:57:in(USB) 10:57:(USB) 18:20:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-02-05','10:57','18:20','7:23','0:27','0:10','10:57:in(USB) 10:57:(USB) 18:20:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-03-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-03-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:22 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 17:56 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:22","out_time":"17:56","duration":"7:34","late_by":"00:00","early_by":"0:34","status":2,"punch_records":"10:22:in(USB) 10:22:(USB) 17:56:out(USB) 17:56:(USB) ","overtime":"7:34","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-03-05','10:22','17:56','7:34','00:00','0:34','10:22:in(USB) 10:22:(USB) 17:56:out(USB) 17:56:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-04-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-04-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:31 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 17:43 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:31","out_time":"17:43","duration":"7:12","late_by":"0:1","early_by":"0:47","status":2,"punch_records":"10:31:in(USB) 10:31:(USB) 17:43:out(USB) 17:43:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-05','10:31','17:43','7:12','0:1','0:47','10:31:in(USB) 10:31:(USB) 17:43:out(USB) 17:43:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-06-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-06-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:25 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 18:18 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:25","out_time":"18:18","duration":"7:53","late_by":"00:00","early_by":"0:12","status":2,"punch_records":"10:25:in(USB) 14:08:out(USB) 18:18:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-06-05','10:25','18:18','7:53','00:00','0:12','10:25:in(USB) 14:08:out(USB) 18:18:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-07-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-07-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-07-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-07-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-08-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-08-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:47 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 17:45 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:47","out_time":"17:45","duration":"6:58","late_by":"0:17","early_by":"0:45","status":2,"punch_records":"10:47:in(USB) 10:47:(USB) 13:51:out(USB) 13:51:(USB) 14:55:in(USB) 14:55:(USB) 17:45:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-08-05','10:47','17:45','6:58','0:17','0:45','10:47:in(USB) 10:47:(USB) 13:51:out(USB) 13:51:(USB) 14:55:in(USB) 14:55:(USB) 17:45:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-09-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-09-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:35 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 17:49 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:35","out_time":"17:49","duration":"7:14","late_by":"0:5","early_by":"0:41","status":2,"punch_records":"10:35:in(USB) 10:35:(USB) 14:29:out(USB) 17:49:in(USB) 17:49:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-09-05','10:35','17:49','7:14','0:5','0:41','10:35:in(USB) 10:35:(USB) 14:29:out(USB) 17:49:in(USB) 17:49:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-10-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-10-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 11:11 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 16:15 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:11","out_time":"16:15","duration":"5:4","late_by":"0:41","early_by":"2:15","status":2,"punch_records":"11:11:in(USB) 11:56:out(USB) 13:14:in(USB) 13:14:(USB) 13:23:out(USB) 14:24:in(USB) 16:15:out(USB) ","overtime":"5:04","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-10-05','11:11','16:15','5:4','0:41','2:15','11:11:in(USB) 11:56:out(USB) 13:14:in(USB) 13:14:(USB) 13:23:out(USB) 14:24:in(USB) 16:15:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-11-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-11-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-11-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-12-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-12-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:30 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 18:07 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:30","out_time":"18:07","duration":"7:37","late_by":"00:00","early_by":"0:23","status":2,"punch_records":"10:30:in(USB) 18:04:out(USB) 18:06:(USB) 18:07:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-12-05','10:30','18:07','7:37','00:00','0:23','10:30:in(USB) 18:04:out(USB) 18:06:(USB) 18:07:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-13 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-13' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:30 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 17:44 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:30","out_time":"17:44","duration":"7:14","late_by":"00:00","early_by":"0:46","status":2,"punch_records":"10:30:in(USB) 17:44:out(USB) 17:44:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-13','10:30','17:44','7:14','00:00','0:46','10:30:in(USB) 17:44:out(USB) 17:44:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-14 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-14' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:21 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 17:56 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:21","out_time":"17:56","duration":"7:35","late_by":"00:00","early_by":"0:34","status":2,"punch_records":"10:21:in(USB) 10:21:(USB) 17:56:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-14','10:21','17:56','7:35','00:00','0:34','10:21:in(USB) 10:21:(USB) 17:56:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-15 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-15' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:15 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 18:00 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:15","out_time":"18:00","duration":"7:45","late_by":"00:00","early_by":"0:30","status":2,"punch_records":"10:15:in(USB) 10:15:(USB) 18:00:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-15','10:15','18:00','7:45','00:00','0:30','10:15:in(USB) 10:15:(USB) 18:00:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-16 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-16' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:28 , organization_id => 1 , date => 2025-05-16  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 17:02 , organization_id => 1 , date => 2025-05-16  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:28","out_time":"17:02","duration":"6:34","late_by":"00:00","early_by":"1:28","status":2,"punch_records":"10:28:in(USB) 11:20:out(USB) 11:21:(USB) 14:57:in(USB) 17:02:out(USB) 17:02:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-16','10:28','17:02','6:34','00:00','1:28','10:28:in(USB) 11:20:out(USB) 11:21:(USB) 14:57:in(USB) 17:02:out(USB) 17:02:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-17 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-17' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:30 , organization_id => 1 , date => 2025-05-17  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 17:49 , organization_id => 1 , date => 2025-05-17  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-17' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:30","out_time":"17:49","duration":"7:19","late_by":"00:00","early_by":"0:41","status":2,"punch_records":"10:30:in(USB) 10:30:(USB) 10:30:(USB) 17:49:out(USB) ","overtime":"7:19","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-17','10:30','17:49','7:19','00:00','0:41','10:30:in(USB) 10:30:(USB) 10:30:(USB) 17:49:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-18 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-18' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-19 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-19' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 11:15 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 18:06 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:15","out_time":"18:06","duration":"6:51","late_by":"0:45","early_by":"0:24","status":2,"punch_records":"11:15:in(USB) 13:49:out(USB) 13:56:in(USB) 18:06:out(USB) 18:06:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-19','11:15','18:06','6:51','0:45','0:24','11:15:in(USB) 13:49:out(USB) 13:56:in(USB) 18:06:out(USB) 18:06:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-20 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-20' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:28 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 17:57 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:28","out_time":"17:57","duration":"7:29","late_by":"00:00","early_by":"0:33","status":2,"punch_records":"10:28:in(USB) 17:56:out(USB) 17:57:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-20','10:28','17:57','7:29','00:00','0:33','10:28:in(USB) 17:56:out(USB) 17:57:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-21 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-21' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:24 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 17:47 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:24","out_time":"17:47","duration":"7:23","late_by":"00:00","early_by":"0:43","status":2,"punch_records":"10:24:in(USB) 10:24:(USB) 17:47:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-21','10:24','17:47','7:23','00:00','0:43','10:24:in(USB) 10:24:(USB) 17:47:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-22 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-22' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 11:07 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 19:52 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:07","out_time":"19:52","duration":"8:45","late_by":"0:37","early_by":"00:00","status":2,"punch_records":"11:07:in(USB) 11:07:(USB) 11:07:(USB) 19:52:out(USB) 19:52:(USB) ","overtime":"1:22","user_id":"2","user_biometric_id":"1","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-22','11:07','19:52','8:45','0:37','00:00','11:07:in(USB) 11:07:(USB) 11:07:(USB) 19:52:out(USB) 19:52:(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-23 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-23' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:49 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 18:33 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:49","out_time":"18:33","duration":"7:44","late_by":"0:19","early_by":"00:00","status":2,"punch_records":"10:49:in(USB) 10:49:(USB) 10:49:(USB) 10:49:(USB) 18:33:out(USB) 18:33:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-23','10:49','18:33','7:44','0:19','00:00','10:49:in(USB) 10:49:(USB) 10:49:(USB) 10:49:(USB) 18:33:out(USB) 18:33:(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-24 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-24' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:32 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 18:28 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:32","out_time":"18:28","duration":"7:56","late_by":"0:2","early_by":"0:2","status":2,"punch_records":"10:32:in(USB) 10:32:(USB) 18:28:out(USB) ","overtime":"7:56","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-24','10:32','18:28','7:56','0:2','0:2','10:32:in(USB) 10:32:(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-25 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-25' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-26 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-26' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:40 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 16:27 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:40","out_time":"16:27","duration":"5:47","late_by":"0:10","early_by":"2:3","status":2,"punch_records":"10:40:in(USB) 10:40:(USB) 16:27:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-26','10:40','16:27','5:47','0:10','2:3','10:40:in(USB) 10:40:(USB) 16:27:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-27 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-27' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:33 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 17:48 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:33","out_time":"17:48","duration":"7:15","late_by":"0:3","early_by":"0:42","status":2,"punch_records":"10:33:in(USB) 14:17:out(USB) 17:48:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-27','10:33','17:48','7:15','0:3','0:42','10:33:in(USB) 14:17:out(USB) 17:48:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-28 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-28' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 11:02 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 17:54 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:02","out_time":"17:54","duration":"6:52","late_by":"0:32","early_by":"0:36","status":2,"punch_records":"11:02:in(USB) 11:02:(USB) 12:43:out(USB) 17:54:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-28','11:02','17:54','6:52','0:32','0:36','11:02:in(USB) 11:02:(USB) 12:43:out(USB) 17:54:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-29 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-29' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 10:32 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 17:32 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:32","out_time":"17:32","duration":"7:0","late_by":"0:2","early_by":"0:58","status":2,"punch_records":"10:32:in(USB) 10:32:(USB) 14:19:out(USB) 17:32:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-29','10:32','17:32','7:0','0:2','0:58','10:32:in(USB) 10:32:(USB) 14:19:out(USB) 17:32:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-30 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-30' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , in_time => 11:01 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 , out_time => 17:48 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 2 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:01","out_time":"17:48","duration":"6:47","late_by":"0:31","early_by":"0:42","status":2,"punch_records":"11:01:in(USB) 17:48:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-30','11:01','17:48','6:47','0:31','0:42','11:01:in(USB) 17:48:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-01-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-01-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , in_time => 10:35 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , out_time => 16:10 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:35","out_time":"16:10","duration":"5:35","late_by":"0:5","early_by":"2:20","status":2,"punch_records":"10:35:in(USB) 10:51:out(USB) 11:25:in(USB) 14:00:out(USB) 14:56:in(USB) 16:10:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-01-05','10:35','16:10','5:35','0:5','2:20','10:35:in(USB) 10:51:out(USB) 11:25:in(USB) 14:00:out(USB) 14:56:in(USB) 16:10:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-02-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-02-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , in_time => 11:28 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , out_time => 16:13 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:28","out_time":"16:13","duration":"4:45","late_by":"0:58","early_by":"2:17","status":2,"punch_records":"11:28:in(USB) 11:37:out(USB) 11:56:in(USB) 13:22:out(USB) 14:53:in(USB) 16:13:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-02-05','11:28','16:13','4:45','0:58','2:17','11:28:in(USB) 11:37:out(USB) 11:56:in(USB) 13:22:out(USB) 14:53:in(USB) 16:13:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-03-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-03-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , in_time => 15:10 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , out_time => 17:39 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"15:10","out_time":"17:39","duration":"2:29","late_by":"4:40","early_by":"0:51","status":2,"punch_records":"15:10:in(USB) 15:29:out(USB) 16:10:in(USB) 16:42:out(USB) 17:05:in(USB) 17:05:(USB) 17:24:out(USB) 17:24:(USB) 17:39:in(USB) ","overtime":"2:29","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-03-05','15:10','17:39','2:29','4:40','0:51','15:10:in(USB) 15:29:out(USB) 16:10:in(USB) 16:42:out(USB) 17:05:in(USB) 17:05:(USB) 17:24:out(USB) 17:24:(USB) 17:39:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-04-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-04-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-05 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-05') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-06-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-06-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-06-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-06-05 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-06-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-06-05') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-06-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-07-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-07-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-07-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-07-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-08-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-08-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-08-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-08-05 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-08-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-08-05') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-08-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-09-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-09-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , in_time => 11:11 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , out_time => 15:03 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:11","out_time":"15:03","duration":"3:52","late_by":"0:41","early_by":"3:27","status":2,"punch_records":"11:11:in(USB) 11:16:(USB) 11:57:out(USB) 14:26:in(USB) 15:03:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-09-05','11:11','15:03','3:52','0:41','3:27','11:11:in(USB) 11:16:(USB) 11:57:out(USB) 14:26:in(USB) 15:03:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-10-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-10-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , in_time => 16:37 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , out_time => 16:47 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"16:37","out_time":"16:47","duration":"0:10","late_by":"6:7","early_by":"1:43","status":2,"punch_records":"16:37:in(USB) 16:47:out(USB) ","overtime":"0:10","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-10-05','16:37','16:47','0:10','6:7','1:43','16:37:in(USB) 16:47:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-11-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-11-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-11-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-12-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-12-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , in_time => 11:28 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , out_time => 17:17 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:28","out_time":"17:17","duration":"5:49","late_by":"0:58","early_by":"1:13","status":2,"punch_records":"11:28:in(USB) 11:33:out(USB) 15:47:in(USB) 16:57:out(USB) 16:57:(USB) 17:17:in(USB) 17:17:(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-12-05','11:28','17:17','5:49','0:58','1:13','11:28:in(USB) 11:33:out(USB) 15:47:in(USB) 16:57:out(USB) 16:57:(USB) 17:17:in(USB) 17:17:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-13 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-13' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , in_time => 11:27 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , out_time => 16:32 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:27","out_time":"16:32","duration":"5:5","late_by":"0:57","early_by":"1:58","status":2,"punch_records":"11:27:in(USB) 14:05:out(USB) 16:32:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-13','11:27','16:32','5:5','0:57','1:58','11:27:in(USB) 14:05:out(USB) 16:32:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-14 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-14' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , in_time => 15:15 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , out_time => 17:00 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"15:15","out_time":"17:00","duration":"1:45","late_by":"4:45","early_by":"1:30","status":2,"punch_records":"15:15:in(USB) 17:00:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-14','15:15','17:00','1:45','4:45','1:30','15:15:in(USB) 17:00:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-15 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-15' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , in_time => 13:25 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , out_time => 16:37 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:25","out_time":"16:37","duration":"3:12","late_by":"2:55","early_by":"1:53","status":2,"punch_records":"13:25:in(USB) 13:25:(USB) 14:26:out(USB) 16:30:in(USB) 16:30:(USB) 16:30:(USB) 16:37:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-15','13:25','16:37','3:12','2:55','1:53','13:25:in(USB) 13:25:(USB) 14:26:out(USB) 16:30:in(USB) 16:30:(USB) 16:30:(USB) 16:37:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-16 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-16' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-16','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-17 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-17' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-18 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-18' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-19 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-19' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"16:01","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"16:01:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-19','16:01','','0:00','0:00','0:00','16:01:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-20 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-20' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-20 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-20 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-20')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-20') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-20','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-21 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-21' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , in_time => 11:11 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , out_time => 14:12 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:11","out_time":"14:12","duration":"3:1","late_by":"0:41","early_by":"4:18","status":2,"punch_records":"11:11:in(USB) 11:53:out(USB) 11:53:(USB) 14:12:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-21','11:11','14:12','3:1','0:41','4:18','11:11:in(USB) 11:53:out(USB) 11:53:(USB) 14:12:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-22 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-22' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , in_time => 13:44 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , out_time => 17:21 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:44","out_time":"17:21","duration":"3:37","late_by":"3:14","early_by":"1:9","status":2,"punch_records":"13:44:in(USB) 15:00:out(USB) 17:21:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-22','13:44','17:21','3:37','3:14','1:9','13:44:in(USB) 15:00:out(USB) 17:21:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-23 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-23' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , in_time => 12:08 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , out_time => 16:17 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:08","out_time":"16:17","duration":"4:9","late_by":"1:38","early_by":"2:13","status":2,"punch_records":"12:08:in(USB) 16:17:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-23','12:08','16:17','4:9','1:38','2:13','12:08:in(USB) 16:17:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-24 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-24' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-25 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-25' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-26 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-26' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , in_time => 12:01 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , out_time => 14:20 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:01","out_time":"14:20","duration":"2:19","late_by":"1:31","early_by":"4:10","status":2,"punch_records":"12:01:in(USB) 12:01:(USB) 12:45:out(USB) 13:58:in(USB) 14:20:out(USB) 14:20:(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-26','12:01','14:20','2:19','1:31','4:10','12:01:in(USB) 12:01:(USB) 12:45:out(USB) 13:58:in(USB) 14:20:out(USB) 14:20:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-27 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-27' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , in_time => 11:13 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , out_time => 15:29 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:13","out_time":"15:29","duration":"4:16","late_by":"0:43","early_by":"3:1","status":2,"punch_records":"11:13:in(USB) 11:19:out(USB) 12:27:in(USB) 14:42:out(USB) 15:29:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-27','11:13','15:29','4:16','0:43','3:1','11:13:in(USB) 11:19:out(USB) 12:27:in(USB) 14:42:out(USB) 15:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-28 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-28' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , in_time => 10:59 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , out_time => 17:07 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:59","out_time":"17:07","duration":"6:8","late_by":"0:29","early_by":"1:23","status":2,"punch_records":"10:59:in(USB) 11:03:(USB) 11:08:out(USB) 14:54:in(USB) 17:07:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-28','10:59','17:07','6:8','0:29','1:23','10:59:in(USB) 11:03:(USB) 11:08:out(USB) 14:54:in(USB) 17:07:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-29 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-29' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"14:40","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"14:40:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-29','14:40','','0:00','0:00','0:00','14:40:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-30 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-30' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , in_time => 11:27 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 , out_time => 13:26 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 71 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:27","out_time":"13:26","duration":"1:59","late_by":"0:57","early_by":"5:4","status":2,"punch_records":"11:27:in(USB) 11:31:(USB) 12:18:out(USB) 13:26:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-30','11:27','13:26','1:59','0:57','5:4','11:27:in(USB) 11:31:(USB) 12:18:out(USB) 13:26:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-01-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-01-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-01-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-01-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-02-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-02-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-02-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-02-05 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-02-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-02-05') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-02-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-03-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-03-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-03-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-03-05 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-03-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-03-05') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-03-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-04-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-04-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-05 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-05') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-06-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-06-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , in_time => 12:30 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , out_time => 15:17 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:30","out_time":"15:17","duration":"2:47","late_by":"2:0","early_by":"3:13","status":2,"punch_records":"12:30:in(USB) 15:17:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-06-05','12:30','15:17','2:47','2:0','3:13','12:30:in(USB) 15:17:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-07-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-07-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , in_time => 11:31 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , out_time => 16:37 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:31","out_time":"16:37","duration":"5:6","late_by":"1:1","early_by":"1:53","status":2,"punch_records":"11:31:in(USB) 11:31:(USB) 14:07:out(USB) 14:07:(USB) 16:37:in(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-07-05','11:31','16:37','5:6','1:1','1:53','11:31:in(USB) 11:31:(USB) 14:07:out(USB) 14:07:(USB) 16:37:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-08-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-08-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , in_time => 11:22 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , out_time => 13:47 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:22","out_time":"13:47","duration":"2:25","late_by":"0:52","early_by":"4:43","status":2,"punch_records":"11:22:in(USB) 11:22:(USB) 13:47:out(USB) 13:47:(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-08-05','11:22','13:47','2:25','0:52','4:43','11:22:in(USB) 11:22:(USB) 13:47:out(USB) 13:47:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-09-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-09-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , in_time => 11:53 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , out_time => 15:10 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:53","out_time":"15:10","duration":"3:17","late_by":"1:23","early_by":"3:20","status":2,"punch_records":"11:53:in(USB) 11:53:(USB) 14:27:out(USB) 14:27:(USB) 14:52:in(USB) 15:10:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-09-05','11:53','15:10','3:17','1:23','3:20','11:53:in(USB) 11:53:(USB) 14:27:out(USB) 14:27:(USB) 14:52:in(USB) 15:10:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-10-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-10-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , in_time => 14:04 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , out_time => 16:39 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"14:04","out_time":"16:39","duration":"2:35","late_by":"3:34","early_by":"1:51","status":2,"punch_records":"14:04:in(USB) 14:04:(USB) 16:39:out(USB) 16:39:(USB) ","overtime":"2:35","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-10-05','14:04','16:39','2:35','3:34','1:51','14:04:in(USB) 14:04:(USB) 16:39:out(USB) 16:39:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-11-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-11-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-11-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-12-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-12-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , in_time => 11:33 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , out_time => 15:25 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:33","out_time":"15:25","duration":"3:52","late_by":"1:3","early_by":"3:5","status":2,"punch_records":"11:33:in(USB) 14:41:out(USB) 14:41:(USB) 14:49:in(USB) 14:49:(USB) 15:25:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-12-05','11:33','15:25','3:52','1:3','3:5','11:33:in(USB) 14:41:out(USB) 14:41:(USB) 14:49:in(USB) 14:49:(USB) 15:25:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-13 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-13' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , in_time => 11:27 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , out_time => 14:02 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:27","out_time":"14:02","duration":"2:35","late_by":"0:57","early_by":"4:28","status":2,"punch_records":"11:27:in(USB) 11:27:(USB) 13:17:out(USB) 14:02:in(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-13','11:27','14:02','2:35','0:57','4:28','11:27:in(USB) 11:27:(USB) 13:17:out(USB) 14:02:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-14 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-14' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-14 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-14 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-14')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-14') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-14','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-15 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-15' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , in_time => 11:01 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , out_time => 14:15 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:01","out_time":"14:15","duration":"3:14","late_by":"0:31","early_by":"4:15","status":2,"punch_records":"11:01:in(USB) 14:15:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-15','11:01','14:15','3:14','0:31','4:15','11:01:in(USB) 14:15:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-16 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-16' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-16','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-17 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-17' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-18 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-18' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-19 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-19' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-19 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-19 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-19')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-19') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-19','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-20 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-20' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-20 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-20 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-20')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-20') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-20','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-21 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-21' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-21 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-21 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-21')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-21') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-21','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-22 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-22' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-22 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-22 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-22')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-22') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-22','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-23 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-23' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-23 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-23 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-23')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-23') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-23','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-24 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-24' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-25 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-25' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-26 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-26' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , in_time => 12:38 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , out_time => 13:55 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:38","out_time":"13:55","duration":"1:17","late_by":"2:8","early_by":"4:35","status":2,"punch_records":"12:38:in(USB) 12:38:(USB) 13:55:out(USB) 13:55:(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-26','12:38','13:55','1:17','2:8','4:35','12:38:in(USB) 12:38:(USB) 13:55:out(USB) 13:55:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-27 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-27' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , in_time => 11:43 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , out_time => 14:51 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:43","out_time":"14:51","duration":"3:8","late_by":"1:13","early_by":"3:39","status":2,"punch_records":"11:43:in(USB) 11:43:(USB) 14:51:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-27','11:43','14:51','3:8','1:13','3:39','11:43:in(USB) 11:43:(USB) 14:51:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-28 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-28' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , in_time => 12:34 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , out_time => 14:50 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:34","out_time":"14:50","duration":"2:16","late_by":"2:4","early_by":"3:40","status":2,"punch_records":"12:34:in(USB) 14:50:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-28','12:34','14:50','2:16','2:4','3:40','12:34:in(USB) 14:50:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-29 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-29' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-29 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-29 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-29')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-29') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-29','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-30 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-30' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-30 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-30 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-30')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-30') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 72 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-30','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-01-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-01-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:38 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 17:09 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:38","out_time":"17:09","duration":"6:31","late_by":"0:8","early_by":"1:21","status":2,"punch_records":"10:38:in(USB) 13:19:out(USB) 13:58:in(USB) 13:58:(USB) 16:20:out(USB) 17:09:in(USB) 17:09:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-01-05','10:38','17:09','6:31','0:8','1:21','10:38:in(USB) 13:19:out(USB) 13:58:in(USB) 13:58:(USB) 16:20:out(USB) 17:09:in(USB) 17:09:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-02-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-02-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:44 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:33 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:44","out_time":"18:33","duration":"7:49","late_by":"0:14","early_by":"00:00","status":2,"punch_records":"10:44:in(USB) 10:44:(USB) 13:00:out(USB) 13:00:(USB) 13:59:in(USB) 13:59:(USB) 13:59:(USB) 14:11:out(USB) 14:11:(USB) 18:33:in(USB) 18:33:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-02-05','10:44','18:33','7:49','0:14','00:00','10:44:in(USB) 10:44:(USB) 13:00:out(USB) 13:00:(USB) 13:59:in(USB) 13:59:(USB) 13:59:(USB) 14:11:out(USB) 14:11:(USB) 18:33:in(USB) 18:33:(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-03-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-03-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:41 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:25 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:41","out_time":"18:25","duration":"7:44","late_by":"0:11","early_by":"0:5","status":2,"punch_records":"10:41:in(USB) 11:12:out(USB) 13:19:in(USB) 18:25:out(USB) ","overtime":"7:44","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-03-05','10:41','18:25','7:44','0:11','0:5','10:41:in(USB) 11:12:out(USB) 13:19:in(USB) 18:25:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-04-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-04-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:37 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 17:47 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:37","out_time":"17:47","duration":"7:10","late_by":"0:7","early_by":"0:43","status":2,"punch_records":"10:37:in(USB) 11:25:out(USB) 13:11:in(USB) 16:56:out(USB) 16:56:(USB) 17:47:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-05','10:37','17:47','7:10','0:7','0:43','10:37:in(USB) 11:25:out(USB) 13:11:in(USB) 16:56:out(USB) 16:56:(USB) 17:47:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-06-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-06-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:17 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:30 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:17","out_time":"18:30","duration":"8:13","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:17:in(USB) 12:27:out(USB) 13:16:in(USB) 13:28:out(USB) 14:05:in(USB) 15:07:out(USB) 15:07:(USB) 16:59:in(USB) 18:10:out(USB) 18:30:in(USB) 18:30:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-06-05','10:17','18:30','8:13','00:00','00:00','10:17:in(USB) 12:27:out(USB) 13:16:in(USB) 13:28:out(USB) 14:05:in(USB) 15:07:out(USB) 15:07:(USB) 16:59:in(USB) 18:10:out(USB) 18:30:in(USB) 18:30:(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-07-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-07-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:08 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 14:55 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:08","out_time":"14:55","duration":"4:47","late_by":"00:00","early_by":"3:35","status":2,"punch_records":"10:08:in(USB) 10:08:(USB) 14:55:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-07-05','10:08','14:55','4:47','00:00','3:35','10:08:in(USB) 10:08:(USB) 14:55:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-08-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-08-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:27 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:27","out_time":"18:32","duration":"8:5","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:27:in(USB) 18:32:out(USB) 18:32:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-08-05','10:27','18:32','8:5','00:00','00:00','10:27:in(USB) 18:32:out(USB) 18:32:(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-09-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-09-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 11:07 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:07","out_time":"18:32","duration":"7:25","late_by":"0:37","early_by":"00:00","status":2,"punch_records":"11:07:in(USB) 13:52:out(USB) 13:52:(USB) 18:32:in(USB) 18:32:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-09-05','11:07','18:32','7:25','0:37','00:00','11:07:in(USB) 13:52:out(USB) 13:52:(USB) 18:32:in(USB) 18:32:(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-10-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-10-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:09 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:13 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:09","out_time":"18:13","duration":"8:4","late_by":"00:00","early_by":"0:17","status":2,"punch_records":"10:09:in(USB) 10:09:(USB) 11:24:out(USB) 12:29:in(USB) 12:29:(USB) 12:55:out(USB) 13:05:in(USB) 14:12:out(USB) 14:12:(USB) 15:32:in(USB) 15:32:(USB) 16:32:out(USB) 18:13:in(USB) 18:13:(USB) ","overtime":"8:04","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-10-05','10:09','18:13','8:4','00:00','0:17','10:09:in(USB) 10:09:(USB) 11:24:out(USB) 12:29:in(USB) 12:29:(USB) 12:55:out(USB) 13:05:in(USB) 14:12:out(USB) 14:12:(USB) 15:32:in(USB) 15:32:(USB) 16:32:out(USB) 18:13:in(USB) 18:13:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-11-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-11-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-11-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-12-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-12-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:13 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:24 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:13","out_time":"18:24","duration":"8:11","late_by":"00:00","early_by":"0:6","status":2,"punch_records":"10:13:in(USB) 10:21:out(USB) 10:21:(USB) 10:39:in(USB) 10:47:out(USB) 10:47:(USB) 11:01:in(USB) 15:10:out(USB) 16:31:in(USB) 18:24:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-12-05','10:13','18:24','8:11','00:00','0:6','10:13:in(USB) 10:21:out(USB) 10:21:(USB) 10:39:in(USB) 10:47:out(USB) 10:47:(USB) 11:01:in(USB) 15:10:out(USB) 16:31:in(USB) 18:24:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-13 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-13' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:29 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:00 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:29","out_time":"18:00","duration":"7:31","late_by":"00:00","early_by":"0:30","status":2,"punch_records":"10:29:in(USB) 13:23:out(USB) 13:23:(USB) 13:44:in(USB) 13:44:(USB) 16:30:out(USB) 16:30:(USB) 18:00:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-13','10:29','18:00','7:31','00:00','0:30','10:29:in(USB) 13:23:out(USB) 13:23:(USB) 13:44:in(USB) 13:44:(USB) 16:30:out(USB) 16:30:(USB) 18:00:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-14 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-14' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:46 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:46","duration":"8:12","late_by":"0:4","early_by":"00:00","status":2,"punch_records":"10:34:in(USB) 10:57:out(USB) 10:57:(USB) 11:28:in(USB) 11:34:out(USB) 11:34:(USB) 13:20:in(USB) 13:20:(USB) 14:57:out(USB) 16:43:in(USB) 16:43:(USB) 17:46:out(USB) 18:46:in(USB) 18:46:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-14','10:34','18:46','8:12','0:4','00:00','10:34:in(USB) 10:57:out(USB) 10:57:(USB) 11:28:in(USB) 11:34:out(USB) 11:34:(USB) 13:20:in(USB) 13:20:(USB) 14:57:out(USB) 16:43:in(USB) 16:43:(USB) 17:46:out(USB) 18:46:in(USB) 18:46:(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-15 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-15' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:37 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:20 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:37","out_time":"18:20","duration":"7:43","late_by":"0:7","early_by":"0:10","status":2,"punch_records":"10:37:in(USB) 10:37:(USB) 11:17:out(USB) 11:17:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:19:(USB) 11:20:(USB) 12:46:in(USB) 14:16:out(USB) 14:16:(USB) 16:57:in(USB) 16:57:(USB) 18:17:out(USB) 18:20:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-15','10:37','18:20','7:43','0:7','0:10','10:37:in(USB) 10:37:(USB) 11:17:out(USB) 11:17:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:19:(USB) 11:20:(USB) 12:46:in(USB) 14:16:out(USB) 14:16:(USB) 16:57:in(USB) 16:57:(USB) 18:17:out(USB) 18:20:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-16 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-16' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:51 , organization_id => 1 , date => 2025-05-16  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 15:54 , organization_id => 1 , date => 2025-05-16  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:51","out_time":"15:54","duration":"5:3","late_by":"0:21","early_by":"2:36","status":2,"punch_records":"10:51:in(USB) 11:05:out(USB) 11:05:(USB) 11:12:in(USB) 11:12:(USB) 13:11:out(USB) 14:22:in(USB) 14:22:(USB) 14:34:out(USB) 15:54:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-16','10:51','15:54','5:3','0:21','2:36','10:51:in(USB) 11:05:out(USB) 11:05:(USB) 11:12:in(USB) 11:12:(USB) 13:11:out(USB) 14:22:in(USB) 14:22:(USB) 14:34:out(USB) 15:54:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-17 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-17' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:32 , organization_id => 1 , date => 2025-05-17  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-17' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:38 , organization_id => 1 , date => 2025-05-17  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:32","out_time":"18:38","duration":"8:6","late_by":"0:2","early_by":"00:00","status":2,"punch_records":"10:32:in(USB) 10:32:(USB) 11:29:out(USB) 13:15:in(USB) 15:08:out(USB) 18:18:in(USB) 18:38:out(USB) ","overtime":"8:06","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-17','10:32','18:38','8:6','0:2','00:00','10:32:in(USB) 10:32:(USB) 11:29:out(USB) 13:15:in(USB) 15:08:out(USB) 18:18:in(USB) 18:38:out(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-18 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-18' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-19 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-19' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:32","duration":"7:58","late_by":"0:4","early_by":"00:00","status":2,"punch_records":"10:34:in(USB) 10:34:(USB) 10:34:(USB) 10:40:out(USB) 10:56:in(USB) 12:06:out(USB) 12:20:in(USB) 12:32:out(USB) 16:57:in(USB) 17:07:out(USB) 18:32:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-19','10:34','18:32','7:58','0:4','00:00','10:34:in(USB) 10:34:(USB) 10:34:(USB) 10:40:out(USB) 10:56:in(USB) 12:06:out(USB) 12:20:in(USB) 12:32:out(USB) 16:57:in(USB) 17:07:out(USB) 18:32:in(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-20 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-20' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:44 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 17:11 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:44","out_time":"17:11","duration":"6:27","late_by":"0:14","early_by":"1:19","status":2,"punch_records":"10:44:in(USB) 11:08:out(USB) 12:16:in(USB) 13:41:out(USB) 16:15:in(USB) 16:15:(USB) 17:11:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-20','10:44','17:11','6:27','0:14','1:19','10:44:in(USB) 11:08:out(USB) 12:16:in(USB) 13:41:out(USB) 16:15:in(USB) 16:15:(USB) 17:11:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-21 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-21' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:28","duration":"7:54","late_by":"0:4","early_by":"0:2","status":2,"punch_records":"10:34:in(TD) 10:47:out(USB) 10:47:(USB) 13:39:in(USB) 16:12:out(USB) 16:50:in(USB) 18:28:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-21','10:34','18:28','7:54','0:4','0:2','10:34:in(TD) 10:47:out(USB) 10:47:(USB) 13:39:in(USB) 16:12:out(USB) 16:50:in(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-22 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-22' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:28","duration":"7:54","late_by":"0:4","early_by":"0:2","status":2,"punch_records":"10:34:in(USB) 10:34:(USB) 15:48:out(USB) 18:24:in(USB) 18:24:(USB) 18:28:(USB) 18:28:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-22','10:34','18:28','7:54','0:4','0:2','10:34:in(USB) 10:34:(USB) 15:48:out(USB) 18:24:in(USB) 18:24:(USB) 18:28:(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-23 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-23' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:29 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:29","out_time":"18:28","duration":"7:59","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:29:in(USB) 10:36:out(USB) 10:36:(USB) 12:21:in(USB) 13:21:out(USB) 13:50:in(USB) 14:11:out(USB) 16:26:in(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-23','10:29','18:28','7:59','00:00','0:2','10:29:in(USB) 10:36:out(USB) 10:36:(USB) 12:21:in(USB) 13:21:out(USB) 13:50:in(USB) 14:11:out(USB) 16:26:in(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-24 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-24' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:14 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:29 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:14","out_time":"18:29","duration":"8:15","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:14:in(USB) 10:22:out(USB) 13:42:in(USB) 16:29:out(USB) 17:51:in(USB) 18:14:out(USB) 18:29:in(USB) ","overtime":"8:15","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-24','10:14','18:29','8:15','00:00','0:1','10:14:in(USB) 10:22:out(USB) 13:42:in(USB) 16:29:out(USB) 17:51:in(USB) 18:14:out(USB) 18:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-25 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-25' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-26 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-26' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:26 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:26","out_time":"18:32","duration":"8:6","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:26:in(USB) 10:35:out(USB) 10:35:(USB) 10:40:(USB) 10:43:in(USB) 13:41:out(USB) 13:58:in(USB) 14:20:out(USB) 15:11:in(USB) 17:01:out(USB) 17:39:in(USB) 17:52:out(USB) 17:52:(USB) 18:29:in(USB) 18:32:(USB) 18:32:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-26','10:26','18:32','8:6','00:00','00:00','10:26:in(USB) 10:35:out(USB) 10:35:(USB) 10:40:(USB) 10:43:in(USB) 13:41:out(USB) 13:58:in(USB) 14:20:out(USB) 15:11:in(USB) 17:01:out(USB) 17:39:in(USB) 17:52:out(USB) 17:52:(USB) 18:29:in(USB) 18:32:(USB) 18:32:(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-27 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-27' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:27 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 14:28 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:27","out_time":"14:28","duration":"4:1","late_by":"00:00","early_by":"4:2","status":2,"punch_records":"10:27:in(USB) 13:26:out(USB) 14:28:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-27','10:27','14:28','4:1','00:00','4:2','10:27:in(USB) 13:26:out(USB) 14:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-28 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-28' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:34 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:34","duration":"8:0","late_by":"0:4","early_by":"00:00","status":2,"punch_records":"10:34:in(USB) 11:56:out(USB) 15:00:in(USB) 15:01:(USB) 16:26:out(USB) 17:34:in(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-28','10:34','18:34','8:0','0:4','00:00','10:34:in(USB) 11:56:out(USB) 15:00:in(USB) 15:01:(USB) 16:26:out(USB) 17:34:in(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-29 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-29' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:29 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 14:19 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:29","out_time":"14:19","duration":"3:50","late_by":"00:00","early_by":"4:11","status":2,"punch_records":"10:29:in(USB) 10:29:(USB) 11:35:out(USB) 11:41:in(USB) 11:41:(USB) 11:41:(USB) 11:41:(USB) 11:43:(USB) 11:43:(USB) 11:44:(USB) 11:44:(USB) 11:50:out(USB) 11:51:(USB) 13:45:in(USB) 13:54:out(USB) 14:16:in(USB) 14:19:(USB) 14:19:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-29','10:29','14:19','3:50','00:00','4:11','10:29:in(USB) 10:29:(USB) 11:35:out(USB) 11:41:in(USB) 11:41:(USB) 11:41:(USB) 11:41:(USB) 11:43:(USB) 11:43:(USB) 11:44:(USB) 11:44:(USB) 11:50:out(USB) 11:51:(USB) 13:45:in(USB) 13:54:out(USB) 14:16:in(USB) 14:19:(USB) 14:19:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-30 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-30' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , in_time => 10:26 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 40 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:26","out_time":"18:28","duration":"8:2","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:26:in(USB) 12:06:out(USB) 12:06:(USB) 12:59:in(USB) 14:21:out(USB) 18:28:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-30','10:26','18:28','8:2','00:00','0:2','10:26:in(USB) 12:06:out(USB) 12:06:(USB) 12:59:in(USB) 14:21:out(USB) 18:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-01-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-01-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:54","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"09:54:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-01-05','9:54','','0:00','0:00','0:00','09:54:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-02-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-02-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"18:28","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"18:28:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-02-05','18:28','','0:00','0:00','0:00','18:28:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-03-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-03-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , in_time => 10:07 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , out_time => 13:51 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:07","out_time":"13:51","duration":"3:44","late_by":"00:00","early_by":"4:39","status":2,"punch_records":"10:07:in(USB) 13:51:out(USB) 13:51:(USB) ","overtime":"3:44","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-03-05','10:07','13:51','3:44','00:00','4:39','10:07:in(USB) 13:51:out(USB) 13:51:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-04-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-04-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , in_time => 10:09 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , out_time => 18:29 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:09","out_time":"18:29","duration":"8:20","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:09:in(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-05','10:09','18:29','8:20','00:00','0:1','10:09:in(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-06-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-06-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , in_time => 9:40 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , out_time => 18:29 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:40","out_time":"18:29","duration":"8:49","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:40:in(USB) 09:40:(USB) 18:29:out(USB) 18:29:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-06-05','9:40','18:29','8:49','00:00','0:1','09:40:in(USB) 09:40:(USB) 18:29:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-07-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-07-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , in_time => 9:53 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , out_time => 14:22 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:53","out_time":"14:22","duration":"4:29","late_by":"00:00","early_by":"4:8","status":2,"punch_records":"09:53:in(USB) 09:53:(USB) 14:22:out(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-07-05','9:53','14:22','4:29','00:00','4:8','09:53:in(USB) 09:53:(USB) 14:22:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-08-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-08-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , in_time => 10:13 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , out_time => 18:27 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:13","out_time":"18:27","duration":"8:14","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:13:in(USB) 10:13:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-08-05','10:13','18:27','8:14','00:00','0:3','10:13:in(USB) 10:13:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-09-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-09-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , in_time => 10:02 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , out_time => 18:27 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:02","out_time":"18:27","duration":"8:25","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:02:in(USB) 10:02:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-09-05','10:02','18:27','8:25','00:00','0:3','10:02:in(USB) 10:02:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-10-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-10-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , in_time => 10:14 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , out_time => 16:15 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:14","out_time":"16:15","duration":"6:1","late_by":"00:00","early_by":"2:15","status":2,"punch_records":"10:14:in(USB) 10:14:(USB) 13:53:out(USB) 13:53:(USB) 16:15:in(USB) ","overtime":"6:01","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-10-05','10:14','16:15','6:1','00:00','2:15','10:14:in(USB) 10:14:(USB) 13:53:out(USB) 13:53:(USB) 16:15:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-11-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-11-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-11-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-12-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-12-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , in_time => 10:28 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , out_time => 18:28 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:28","out_time":"18:28","duration":"8:0","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:28:in(USB) 10:28:(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-12-05','10:28','18:28','8:0','00:00','0:2','10:28:in(USB) 10:28:(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-13 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-13' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , in_time => 10:02 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , out_time => 18:27 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:02","out_time":"18:27","duration":"8:25","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:02:in(USB) 10:02:(USB) 16:44:out(USB) 18:27:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-13','10:02','18:27','8:25','00:00','0:3','10:02:in(USB) 10:02:(USB) 16:44:out(USB) 18:27:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-14 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-14' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , in_time => 10:18 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , out_time => 18:32 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:18","out_time":"18:32","duration":"8:14","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:18:in(USB) 10:18:(USB) 13:44:out(USB) 13:44:(USB) 18:32:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-14','10:18','18:32','8:14','00:00','00:00','10:18:in(USB) 10:18:(USB) 13:44:out(USB) 13:44:(USB) 18:32:in(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-15 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-15' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:37","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"10:37:in(USB) 10:37:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-15','10:37','','0:00','0:00','0:00','10:37:in(USB) 10:37:(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-16 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-16' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-16','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-17 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-17' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-18 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-18' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-19 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-19' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , in_time => 10:04 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , out_time => 18:29 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:04","out_time":"18:29","duration":"8:25","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:04:in(USB) 11:44:out(USB) 18:29:in(USB) 18:29:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-19','10:04','18:29','8:25','00:00','0:1','10:04:in(USB) 11:44:out(USB) 18:29:in(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-20 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-20' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:53","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"09:53:in(USB) 09:54:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-20','9:53','','0:00','0:00','0:00','09:53:in(USB) 09:54:(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-21 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-21' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-21 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-21 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-21')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-21') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-21','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-22 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-22' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-22 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-22 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-22')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-22') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-22','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-23 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-23' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , in_time => 9:59 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , out_time => 18:26 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:59","out_time":"18:26","duration":"8:27","late_by":"00:00","early_by":"0:4","status":2,"punch_records":"09:59:in(USB) 18:26:out(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-23','9:59','18:26','8:27','00:00','0:4','09:59:in(USB) 18:26:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-24 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-24' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-25 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-25' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-26 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-26' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-26 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-26 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-26')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-26') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-26','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-27 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-27' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-27 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-27 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-27')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-27') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-27','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-28 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-28' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-28 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-28 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-28')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-28') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-28','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-29 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-29' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-29 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-29 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-29')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-29') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-29','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-30 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-30' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-30 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-30 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-30')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-30') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 42 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-30','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-01-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-01-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , in_time => 10:16 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , out_time => 17:30 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:16","out_time":"17:30","duration":"7:14","late_by":"00:00","early_by":"1:0","status":2,"punch_records":"10:16:in(USB) 13:50:out(USB) 13:50:(USB) 17:30:in(USB) 17:30:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-01-05','10:16','17:30','7:14','00:00','1:0','10:16:in(USB) 13:50:out(USB) 13:50:(USB) 17:30:in(USB) 17:30:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-02-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-02-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"18:31","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"18:31:in(USB) 18:31:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-02-05','18:31','','0:00','0:00','0:00','18:31:in(USB) 18:31:(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-03-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-03-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , in_time => 13:04 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , out_time => 18:27 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:04","out_time":"18:27","duration":"5:23","late_by":"2:34","early_by":"0:3","status":2,"punch_records":"13:04:in(USB) 13:04:(USB) 14:45:out(USB) 14:45:(USB) 18:27:in(USB) 18:27:(USB) ","overtime":"5:23","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-03-05','13:04','18:27','5:23','2:34','0:3','13:04:in(USB) 13:04:(USB) 14:45:out(USB) 14:45:(USB) 18:27:in(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-04-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-04-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-05 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-05') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-06-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-06-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , in_time => 10:09 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:09","out_time":"18:29","duration":"8:20","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:09:in(USB) 18:29:out(USB) 18:29:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-06-05','10:09','18:29','8:20','00:00','0:1','10:09:in(USB) 18:29:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-07-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-07-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , in_time => 10:03 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , out_time => 18:52 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:03","out_time":"18:52","duration":"8:49","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:03:in(USB) 10:03:(USB) 18:52:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-07-05','10:03','18:52','8:49','00:00','00:00','10:03:in(USB) 10:03:(USB) 18:52:out(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-08-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-08-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , in_time => 10:02 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , out_time => 18:30 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:02","out_time":"18:30","duration":"8:28","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:02:in(USB) 14:08:out(USB) 18:30:in(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-08-05','10:02','18:30','8:28','00:00','00:00','10:02:in(USB) 14:08:out(USB) 18:30:in(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-09-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-09-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , in_time => 10:08 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , out_time => 18:28 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:08","out_time":"18:28","duration":"8:20","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:08:in(USB) 18:28:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-09-05','10:08','18:28','8:20','00:00','0:2','10:08:in(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-10-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-10-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , in_time => 10:16 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , out_time => 18:28 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:16","out_time":"18:28","duration":"8:12","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:16:in(USB) 10:16:(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"8:12","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-10-05','10:16','18:28','8:12','00:00','0:2','10:16:in(USB) 10:16:(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-11-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-11-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-11-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-12-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-12-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , in_time => 10:04 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , out_time => 18:27 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:04","out_time":"18:27","duration":"8:23","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:04:in(USB) 18:27:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-12-05','10:04','18:27','8:23','00:00','0:3','10:04:in(USB) 18:27:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-13 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-13' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , in_time => 10:08 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:08","out_time":"18:29","duration":"8:21","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:08:in(USB) 10:09:(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-13','10:08','18:29','8:21','00:00','0:1','10:08:in(USB) 10:09:(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-14 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-14' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , in_time => 10:03 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , out_time => 18:35 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:03","out_time":"18:35","duration":"8:32","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:03:in(USB) 10:03:(USB) 18:35:out(USB) 18:35:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-14','10:03','18:35','8:32','00:00','00:00','10:03:in(USB) 10:03:(USB) 18:35:out(USB) 18:35:(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-15 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-15' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , in_time => 10:21 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , out_time => 18:30 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:21","out_time":"18:30","duration":"8:9","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:21:in(USB) 10:21:(USB) 18:30:out(USB) 18:30:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-15','10:21','18:30','8:9','00:00','00:00','10:21:in(USB) 10:21:(USB) 18:30:out(USB) 18:30:(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-16 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-16' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-16','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-17 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-17' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-18 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-18' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-19 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-19' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-19 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-19 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-19')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-19') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-19','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-20 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-20' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-20 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-20 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-20')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-20') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-20','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-21 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-21' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-21 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-21 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-21')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-21') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-21','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-22 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-22' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-22 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-22 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-22')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-22') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-22','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-23 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-23' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-23 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-23 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-23')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-23') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-23','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-24 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-24' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-25 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-25' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-26 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-26' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , in_time => 10:33 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:33","out_time":"18:29","duration":"7:56","late_by":"0:3","early_by":"0:1","status":2,"punch_records":"10:33:in(USB) 18:29:out(USB) 18:29:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-26','10:33','18:29','7:56','0:3','0:1','10:33:in(USB) 18:29:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-27 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-27' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , in_time => 10:04 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , out_time => 18:28 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:04","out_time":"18:28","duration":"8:24","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:04:in(USB) 13:54:out(USB) 13:54:(USB) 18:28:in(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-27','10:04','18:28','8:24','00:00','0:2','10:04:in(USB) 13:54:out(USB) 13:54:(USB) 18:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-28 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-28' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , in_time => 10:06 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , out_time => 18:30 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:06","out_time":"18:30","duration":"8:24","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:06:in(USB) 10:07:(USB) 18:30:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-28','10:06','18:30','8:24','00:00','00:00','10:06:in(USB) 10:07:(USB) 18:30:out(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-29 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-29' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , in_time => 10:00 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:00","out_time":"18:29","duration":"8:29","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:00:in(USB) 10:01:(USB) 14:02:out(USB) 18:29:in(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-29','10:00','18:29','8:29','00:00','0:1','10:00:in(USB) 10:01:(USB) 14:02:out(USB) 18:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-30 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-30' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , in_time => 10:12 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 , out_time => 18:27 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 27 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:12","out_time":"18:27","duration":"8:15","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:12:in(USB) 10:12:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-30','10:12','18:27','8:15','00:00','0:3','10:12:in(USB) 10:12:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-01-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-01-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 9:22 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 17:29 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:22","out_time":"17:29","duration":"8:7","late_by":"00:00","early_by":"1:1","status":2,"punch_records":"09:22:in(USB) 17:29:out(USB) 17:29:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-01-05','9:22','17:29','8:7','00:00','1:1','09:22:in(USB) 17:29:out(USB) 17:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-02-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-02-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 9:34 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 18:32 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:34","out_time":"18:32","duration":"8:58","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:34:in(USB) 18:32:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-02-05','9:34','18:32','8:58','00:00','00:00','09:34:in(USB) 18:32:out(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-03-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-03-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 9:27 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 18:27 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:27","out_time":"18:27","duration":"9:0","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"09:27:in(USB) 18:26:out(USB) 18:27:(USB) ","overtime":"8:59","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-03-05','9:27','18:27','9:0','00:00','0:3','09:27:in(USB) 18:26:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-04-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-04-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 8:57 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 18:30 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"8:57","out_time":"18:30","duration":"9:33","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"08:57:in(USB) 09:27:out(USB) 09:56:in(USB) 17:14:out(USB) 17:14:(USB) 18:30:in(USB) 18:30:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-05','8:57','18:30','9:33','00:00','00:00','08:57:in(USB) 09:27:out(USB) 09:56:in(USB) 17:14:out(USB) 17:14:(USB) 18:30:in(USB) 18:30:(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-06-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-06-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 9:20 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:20","out_time":"18:29","duration":"9:9","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:20:in(USB) 09:20:(USB) 09:50:out(USB) 18:29:in(USB) 18:29:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-06-05','9:20','18:29','9:9','00:00','0:1','09:20:in(USB) 09:20:(USB) 09:50:out(USB) 18:29:in(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-07-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-07-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 9:21 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 18:51 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:21","out_time":"18:51","duration":"9:30","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:21:in(USB) 09:21:(USB) 09:54:out(USB) 13:54:in(USB) 18:51:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-07-05','9:21','18:51','9:30','00:00','00:00','09:21:in(USB) 09:21:(USB) 09:54:out(USB) 13:54:in(USB) 18:51:out(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-08-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-08-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 9:26 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:26","out_time":"18:29","duration":"9:3","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:26:in(USB) 09:57:out(USB) 16:47:in(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-08-05','9:26','18:29','9:3','00:00','0:1','09:26:in(USB) 09:57:out(USB) 16:47:in(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-09-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-09-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-09-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-09-05 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-09-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-09-05') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-09-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-10-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-10-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-10-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-10-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-11-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-11-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-11-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-12-05 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-12-05' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-12-05 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-12-05 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-12-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-12-05') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-12-05','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-13 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-13' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-13 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-13 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-13')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-13') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-13','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-14 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-14' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-14 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-14 , organization => 1 

2025-07-14T12:53:21+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-14')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-14') IS NOT NULL 

2025-07-14T12:53:21+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-14','','','0:00','0:00','0:00','',1,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-15 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-15' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 9:12 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 18:30 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:12","out_time":"18:30","duration":"9:18","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:12:in(USB) 09:50:out(USB) 18:30:in(USB) 18:30:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-15','9:12','18:30','9:18','00:00','00:00','09:12:in(USB) 09:50:out(USB) 18:30:in(USB) 18:30:(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-16 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-16' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 9:16 , organization_id => 1 , date => 2025-05-16  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 18:34 , organization_id => 1 , date => 2025-05-16  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:16","out_time":"18:34","duration":"9:18","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:16:in(USB) 09:16:(USB) 09:56:out(USB) 09:56:(USB) 16:32:in(USB) 16:32:(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-16','9:16','18:34','9:18','00:00','00:00','09:16:in(USB) 09:16:(USB) 09:56:out(USB) 09:56:(USB) 16:32:in(USB) 16:32:(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-17 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-17' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 9:17 , organization_id => 1 , date => 2025-05-17  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-05-17  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-17' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:17","out_time":"18:29","duration":"9:12","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:17:in(USB) 18:28:out(USB) 18:29:(USB) ","overtime":"9:11","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-17','9:17','18:29','9:12','00:00','0:1','09:17:in(USB) 18:28:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-18 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-18' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-19 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-19' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 8:58 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 18:58 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"8:58","out_time":"18:58","duration":"10:0","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"08:58:in(USB) 08:58:(USB) 09:32:out(USB) 09:32:(USB) 18:58:in(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-19','8:58','18:58','10:0','00:00','00:00','08:58:in(USB) 08:58:(USB) 09:32:out(USB) 09:32:(USB) 18:58:in(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-20 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-20' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 9:17 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:17","out_time":"18:29","duration":"9:12","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:17:in(USB) 09:50:out(USB) 18:29:in(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-20','9:17','18:29','9:12','00:00','0:1','09:17:in(USB) 09:50:out(USB) 18:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-21 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-21' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 9:12 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 9:42 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:12","out_time":"9:42","duration":"0:30","late_by":"00:00","early_by":"8:48","status":2,"punch_records":"09:12:in(USB) 09:42:out(USB) 09:42:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-21','9:12','9:42','0:30','00:00','8:48','09:12:in(USB) 09:42:out(USB) 09:42:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-22 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-22' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 9:24 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:24","out_time":"18:29","duration":"9:5","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:24:in(USB) 13:45:out(USB) 14:11:in(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-22','9:24','18:29','9:5','00:00','0:1','09:24:in(USB) 13:45:out(USB) 14:11:in(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-23 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-23' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 9:25 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 18:28 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:25","out_time":"18:28","duration":"9:3","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"09:25:in(USB) 09:25:(USB) 09:59:out(USB) 14:07:in(USB) 18:28:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-23','9:25','18:28','9:3','00:00','0:2','09:25:in(USB) 09:25:(USB) 09:59:out(USB) 14:07:in(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-24 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-24' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 9:19 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 18:28 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:19","out_time":"18:28","duration":"9:9","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"09:19:in(USB) 09:55:out(USB) 18:28:in(USB) ","overtime":"9:09","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-24','9:19','18:28','9:9','00:00','0:2','09:19:in(USB) 09:55:out(USB) 18:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-25 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-25' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:53:21+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:53:21+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-26 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-26' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:14","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"09:14:in(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-26','9:14','','0:00','0:00','0:00','09:14:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-27 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-27' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 9:12 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 9:38 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:12","out_time":"9:38","duration":"0:26","late_by":"00:00","early_by":"8:52","status":2,"punch_records":"09:12:in(USB) 09:38:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-27','9:12','9:38','0:26','00:00','8:52','09:12:in(USB) 09:38:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-28 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-28' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 9:24 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 18:30 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:24","out_time":"18:30","duration":"9:6","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:24:in(USB) 09:24:(USB) 09:50:out(USB) 14:03:in(USB) 18:30:out(USB) 18:30:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":null} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-28','9:24','18:30','9:6','00:00','00:00','09:24:in(USB) 09:24:(USB) 09:50:out(USB) 14:03:in(USB) 18:30:out(USB) 18:30:(USB) ',2,'') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-29 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-29' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 13:42 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 18:28 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:42","out_time":"18:28","duration":"4:46","late_by":"3:12","early_by":"0:2","status":2,"punch_records":"13:42:in(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-29','13:42','18:28','4:46','3:12','0:2','13:42:in(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:53:21+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:53:21+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:53:21+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-30 

2025-07-14T12:53:21+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-30' 

2025-07-14T12:53:21+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:53:21+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , in_time => 9:29 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 , out_time => 18:27 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:53:21+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:53:21+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:53:21+02:00 :: requested param :: user_id => 23 

2025-07-14T12:53:21+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:53:21+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:53:21+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:29","out_time":"18:27","duration":"8:58","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"09:29:in(USB) 09:43:out(USB) 13:53:in(USB) 13:53:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:53:21+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-30','9:29','18:27','8:58','00:00','0:3','09:29:in(USB) 09:43:out(USB) 13:53:in(USB) 13:53:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:53:21+02:00 :: Insert into attendance successful 

2025-07-14T12:53:21+02:00 :: Attendance Inserted 

 ============ End Of Script ================== 

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceData 

2025-07-14T12:55:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:55:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:55:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:55:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-01 

2025-07-14T12:55:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-01' 

2025-07-14T12:55:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:55:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , in_time => 09:39 , organization_id => 1 , date => 2025-05-01  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , out_time => 17:22 , organization_id => 1 , date => 2025-05-01  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-01' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:55:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-01","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"09:39","out_time":"17:22","duration":"7:43","late_by":"00:00","early_by":"1:8","status":2,"punch_records":"09:39:in(USB) 09:39:(USB) 14:58:out(USB) 17:22:in(USB) 17:22:(USB) ","overtime":"00:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:55:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-01','09:39','17:22','7:43','00:00','1:8','09:39:in(USB) 09:39:(USB) 14:58:out(USB) 17:22:in(USB) 17:22:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:55:26+02:00 :: Insert into attendance successful 

2025-07-14T12:55:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:55:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:55:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:55:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-02 

2025-07-14T12:55:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-02' 

2025-07-14T12:55:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:55:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , in_time => 10:57 , organization_id => 1 , date => 2025-05-02  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-02' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , out_time => 18:20 , organization_id => 1 , date => 2025-05-02  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-02' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:55:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-02","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:57","out_time":"18:20","duration":"7:23","late_by":"0:27","early_by":"0:10","status":2,"punch_records":"10:57:in(USB) 10:57:(USB) 18:20:out(USB) ","overtime":"00:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:55:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-02','10:57','18:20','7:23','0:27','0:10','10:57:in(USB) 10:57:(USB) 18:20:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:55:26+02:00 :: Insert into attendance successful 

2025-07-14T12:55:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:55:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:55:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:55:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-03 

2025-07-14T12:55:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-03' 

2025-07-14T12:55:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:55:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , in_time => 10:22 , organization_id => 1 , date => 2025-05-03  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , out_time => 17:56 , organization_id => 1 , date => 2025-05-03  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-03' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:55:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-03","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:22","out_time":"17:56","duration":"7:34","late_by":"00:00","early_by":"0:34","status":2,"punch_records":"10:22:in(USB) 10:22:(USB) 17:56:out(USB) 17:56:(USB) ","overtime":"07:34","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:55:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-03','10:22','17:56','7:34','00:00','0:34','10:22:in(USB) 10:22:(USB) 17:56:out(USB) 17:56:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:55:26+02:00 :: Insert into attendance successful 

2025-07-14T12:55:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:55:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:55:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:55:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-04 

2025-07-14T12:55:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-04' 

2025-07-14T12:55:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:55:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:55:26+02:00 :: requested param :: date => 2025-05-04 , organization_id => 1 

2025-07-14T12:55:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:55:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-04","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"00:00","late_by":"00:00","early_by":"00:00","status":5,"punch_records":"","overtime":"00:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T12:55:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-04','','','00:00','00:00','00:00','',5,'Weekly Off') 

2025-07-14T12:55:26+02:00 :: Insert into attendance successful 

2025-07-14T12:55:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:55:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:55:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:55:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-05 

2025-07-14T12:55:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-05' 

2025-07-14T12:55:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:55:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , in_time => 10:31 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , out_time => 17:43 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:55:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:31","out_time":"17:43","duration":"7:12","late_by":"0:1","early_by":"0:47","status":2,"punch_records":"10:31:in(USB) 10:31:(USB) 17:43:out(USB) 17:43:(USB) ","overtime":"00:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:55:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-05','10:31','17:43','7:12','0:1','0:47','10:31:in(USB) 10:31:(USB) 17:43:out(USB) 17:43:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:55:26+02:00 :: Insert into attendance successful 

2025-07-14T12:55:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:55:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:55:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:55:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-06 

2025-07-14T12:55:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-06' 

2025-07-14T12:55:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:55:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , in_time => 10:25 , organization_id => 1 , date => 2025-05-06  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , out_time => 18:18 , organization_id => 1 , date => 2025-05-06  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-06' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:55:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-06","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:25","out_time":"18:18","duration":"7:53","late_by":"00:00","early_by":"0:12","status":2,"punch_records":"10:25:in(USB) 14:08:out(USB) 18:18:in(USB) ","overtime":"00:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:55:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-06','10:25','18:18','7:53','00:00','0:12','10:25:in(USB) 14:08:out(USB) 18:18:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:55:26+02:00 :: Insert into attendance successful 

2025-07-14T12:55:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:55:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:55:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:55:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-07 

2025-07-14T12:55:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-07' 

2025-07-14T12:55:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:55:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:55:26+02:00 :: requested param :: date => 2025-05-07 , organization_id => 1 

2025-07-14T12:55:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:55:26+02:00 :: requested param :: date => 2025-05-07 , organization => 1 

2025-07-14T12:55:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-07')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-07') IS NOT NULL 

2025-07-14T12:55:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:55:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-07' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:55:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-07","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"00:00","late_by":"00:00","early_by":"00:00","status":1,"punch_records":"","overtime":"00:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:55:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-07','','','00:00','00:00','00:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:55:26+02:00 :: Insert into attendance successful 

2025-07-14T12:55:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:55:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:55:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:55:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-08 

2025-07-14T12:55:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-08' 

2025-07-14T12:55:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:55:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , in_time => 10:47 , organization_id => 1 , date => 2025-05-08  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-08' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , out_time => 17:45 , organization_id => 1 , date => 2025-05-08  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-08' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:55:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-08","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:47","out_time":"17:45","duration":"6:58","late_by":"0:17","early_by":"0:45","status":2,"punch_records":"10:47:in(USB) 10:47:(USB) 13:51:out(USB) 13:51:(USB) 14:55:in(USB) 14:55:(USB) 17:45:out(USB) ","overtime":"00:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:55:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-08','10:47','17:45','6:58','0:17','0:45','10:47:in(USB) 10:47:(USB) 13:51:out(USB) 13:51:(USB) 14:55:in(USB) 14:55:(USB) 17:45:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:55:26+02:00 :: Insert into attendance successful 

2025-07-14T12:55:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:55:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:55:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:55:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-09 

2025-07-14T12:55:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-09' 

2025-07-14T12:55:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:55:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , in_time => 10:35 , organization_id => 1 , date => 2025-05-09  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-09' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , out_time => 17:49 , organization_id => 1 , date => 2025-05-09  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-09' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:55:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-09","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:35","out_time":"17:49","duration":"7:14","late_by":"0:5","early_by":"0:41","status":2,"punch_records":"10:35:in(USB) 10:35:(USB) 14:29:out(USB) 17:49:in(USB) 17:49:(USB) ","overtime":"00:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:55:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-09','10:35','17:49','7:14','0:5','0:41','10:35:in(USB) 10:35:(USB) 14:29:out(USB) 17:49:in(USB) 17:49:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:55:26+02:00 :: Insert into attendance successful 

2025-07-14T12:55:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:55:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:55:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:55:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-10 

2025-07-14T12:55:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-10' 

2025-07-14T12:55:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:55:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , in_time => 11:11 , organization_id => 1 , date => 2025-05-10  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-10' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , out_time => 16:15 , organization_id => 1 , date => 2025-05-10  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-10' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:55:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-10","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:11","out_time":"16:15","duration":"5:4","late_by":"0:41","early_by":"2:15","status":2,"punch_records":"11:11:in(USB) 11:56:out(USB) 13:14:in(USB) 13:14:(USB) 13:23:out(USB) 14:24:in(USB) 16:15:out(USB) ","overtime":"05:04","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:55:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-10','11:11','16:15','5:4','0:41','2:15','11:11:in(USB) 11:56:out(USB) 13:14:in(USB) 13:14:(USB) 13:23:out(USB) 14:24:in(USB) 16:15:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:55:26+02:00 :: Insert into attendance successful 

2025-07-14T12:55:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:55:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:55:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:55:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-11 

2025-07-14T12:55:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-11' 

2025-07-14T12:55:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:55:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:55:26+02:00 :: requested param :: date => 2025-05-11 , organization_id => 1 

2025-07-14T12:55:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:55:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-11","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"00:00","late_by":"00:00","early_by":"00:00","status":5,"punch_records":"","overtime":"00:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T12:55:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-11','','','00:00','00:00','00:00','',5,'Weekly Off') 

2025-07-14T12:55:26+02:00 :: Insert into attendance successful 

2025-07-14T12:55:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:55:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:55:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:55:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-12 

2025-07-14T12:55:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-12' 

2025-07-14T12:55:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:55:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , in_time => 10:30 , organization_id => 1 , date => 2025-05-12  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , out_time => 18:07 , organization_id => 1 , date => 2025-05-12  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-12' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:55:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-12","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:30","out_time":"18:07","duration":"7:37","late_by":"00:00","early_by":"0:23","status":2,"punch_records":"10:30:in(USB) 18:04:out(USB) 18:06:(USB) 18:07:(USB) ","overtime":"00:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:55:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-12','10:30','18:07','7:37','00:00','0:23','10:30:in(USB) 18:04:out(USB) 18:06:(USB) 18:07:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:55:26+02:00 :: Insert into attendance successful 

2025-07-14T12:55:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:55:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:55:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:55:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-13 

2025-07-14T12:55:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-13' 

2025-07-14T12:55:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:55:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , in_time => 10:30 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , out_time => 17:44 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:55:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:30","out_time":"17:44","duration":"7:14","late_by":"00:00","early_by":"0:46","status":2,"punch_records":"10:30:in(USB) 17:44:out(USB) 17:44:(USB) ","overtime":"00:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:55:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-13','10:30','17:44','7:14','00:00','0:46','10:30:in(USB) 17:44:out(USB) 17:44:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:55:26+02:00 :: Insert into attendance successful 

2025-07-14T12:55:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:55:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:55:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:55:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-14 

2025-07-14T12:55:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-14' 

2025-07-14T12:55:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:55:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , in_time => 10:21 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , out_time => 17:56 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:55:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:21","out_time":"17:56","duration":"7:35","late_by":"00:00","early_by":"0:34","status":2,"punch_records":"10:21:in(USB) 10:21:(USB) 17:56:out(USB) ","overtime":"00:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:55:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-14','10:21','17:56','7:35','00:00','0:34','10:21:in(USB) 10:21:(USB) 17:56:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:55:26+02:00 :: Insert into attendance successful 

2025-07-14T12:55:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:55:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:55:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:55:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-15 

2025-07-14T12:55:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-15' 

2025-07-14T12:55:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:55:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , in_time => 10:15 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , out_time => 18:00 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:55:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:15","out_time":"18:00","duration":"7:45","late_by":"00:00","early_by":"0:30","status":2,"punch_records":"10:15:in(USB) 10:15:(USB) 18:00:out(USB) ","overtime":"00:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:55:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-15','10:15','18:00','7:45','00:00','0:30','10:15:in(USB) 10:15:(USB) 18:00:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:55:26+02:00 :: Insert into attendance successful 

2025-07-14T12:55:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:55:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:55:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:55:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-16 

2025-07-14T12:55:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-16' 

2025-07-14T12:55:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:55:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , in_time => 10:28 , organization_id => 1 , date => 2025-05-16  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , out_time => 17:02 , organization_id => 1 , date => 2025-05-16  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:55:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:28","out_time":"17:02","duration":"6:34","late_by":"00:00","early_by":"1:28","status":2,"punch_records":"10:28:in(USB) 11:20:out(USB) 11:21:(USB) 14:57:in(USB) 17:02:out(USB) 17:02:(USB) ","overtime":"00:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:55:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-16','10:28','17:02','6:34','00:00','1:28','10:28:in(USB) 11:20:out(USB) 11:21:(USB) 14:57:in(USB) 17:02:out(USB) 17:02:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:55:26+02:00 :: Insert into attendance successful 

2025-07-14T12:55:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:55:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:55:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:55:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-17 

2025-07-14T12:55:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-17' 

2025-07-14T12:55:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:55:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , in_time => 10:30 , organization_id => 1 , date => 2025-05-17  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 , out_time => 17:49 , organization_id => 1 , date => 2025-05-17  

2025-07-14T12:55:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:55:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:55:26+02:00 :: requested param :: user_id => 2 

2025-07-14T12:55:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-17' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:55:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:55:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:30","out_time":"17:49","duration":"7:19","late_by":"00:00","early_by":"0:41","status":2,"punch_records":"10:30:in(USB) 10:30:(USB) 10:30:(USB) 17:49:out(USB) ","overtime":"07:19","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:55:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-17','10:30','17:49','7:19','00:00','0:41','10:30:in(USB) 10:30:(USB) 10:30:(USB) 17:49:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:55:26+02:00 :: Insert into attendance successful 

2025-07-14T12:55:26+02:00 :: Attendance Inserted 

 ============ End Of Script ================== 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceData 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-01-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-01-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 9:39 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 17:22 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:39","out_time":"17:22","duration":"7:43","late_by":"00:00","early_by":"1:8","status":2,"punch_records":"09:39:in(USB) 09:39:(USB) 14:58:out(USB) 17:22:in(USB) 17:22:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-01-05','9:39','17:22','7:43','00:00','1:8','09:39:in(USB) 09:39:(USB) 14:58:out(USB) 17:22:in(USB) 17:22:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-02-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-02-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 10:57 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 18:20 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:57","out_time":"18:20","duration":"7:23","late_by":"0:27","early_by":"0:10","status":2,"punch_records":"10:57:in(USB) 10:57:(USB) 18:20:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-02-05','10:57','18:20','7:23','0:27','0:10','10:57:in(USB) 10:57:(USB) 18:20:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-03-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-03-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 10:22 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 17:56 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:22","out_time":"17:56","duration":"7:34","late_by":"00:00","early_by":"0:34","status":2,"punch_records":"10:22:in(USB) 10:22:(USB) 17:56:out(USB) 17:56:(USB) ","overtime":"7:34","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-03-05','10:22','17:56','7:34','00:00','0:34','10:22:in(USB) 10:22:(USB) 17:56:out(USB) 17:56:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-04-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-04-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-05' 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-06-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-06-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 10:25 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 18:18 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:25","out_time":"18:18","duration":"7:53","late_by":"00:00","early_by":"0:12","status":2,"punch_records":"10:25:in(USB) 14:08:out(USB) 18:18:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-06-05','10:25','18:18','7:53','00:00','0:12','10:25:in(USB) 14:08:out(USB) 18:18:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-07-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-07-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-07-05 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-07-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-08-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-08-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 10:47 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 17:45 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:47","out_time":"17:45","duration":"6:58","late_by":"0:17","early_by":"0:45","status":2,"punch_records":"10:47:in(USB) 10:47:(USB) 13:51:out(USB) 13:51:(USB) 14:55:in(USB) 14:55:(USB) 17:45:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-08-05','10:47','17:45','6:58','0:17','0:45','10:47:in(USB) 10:47:(USB) 13:51:out(USB) 13:51:(USB) 14:55:in(USB) 14:55:(USB) 17:45:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-09-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-09-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 10:35 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 17:49 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:35","out_time":"17:49","duration":"7:14","late_by":"0:5","early_by":"0:41","status":2,"punch_records":"10:35:in(USB) 10:35:(USB) 14:29:out(USB) 17:49:in(USB) 17:49:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-09-05','10:35','17:49','7:14','0:5','0:41','10:35:in(USB) 10:35:(USB) 14:29:out(USB) 17:49:in(USB) 17:49:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-10-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-10-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 11:11 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 16:15 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:11","out_time":"16:15","duration":"5:4","late_by":"0:41","early_by":"2:15","status":2,"punch_records":"11:11:in(USB) 11:56:out(USB) 13:14:in(USB) 13:14:(USB) 13:23:out(USB) 14:24:in(USB) 16:15:out(USB) ","overtime":"5:04","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-10-05','11:11','16:15','5:4','0:41','2:15','11:11:in(USB) 11:56:out(USB) 13:14:in(USB) 13:14:(USB) 13:23:out(USB) 14:24:in(USB) 16:15:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-11-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-11-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:56:22+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-12-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-12-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 10:30 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 18:07 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:30","out_time":"18:07","duration":"7:37","late_by":"00:00","early_by":"0:23","status":2,"punch_records":"10:30:in(USB) 18:04:out(USB) 18:06:(USB) 18:07:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-12-05','10:30','18:07','7:37','00:00','0:23','10:30:in(USB) 18:04:out(USB) 18:06:(USB) 18:07:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-13 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-13' 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-14 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-14' 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-15 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-15' 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-16 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-16' 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-17 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-17' 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":400,"message":"Attendance already uploaded"}

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-18 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-18' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-19 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-19' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 11:15 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 18:06 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:15","out_time":"18:06","duration":"6:51","late_by":"0:45","early_by":"0:24","status":2,"punch_records":"11:15:in(USB) 13:49:out(USB) 13:56:in(USB) 18:06:out(USB) 18:06:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-19','11:15','18:06','6:51','0:45','0:24','11:15:in(USB) 13:49:out(USB) 13:56:in(USB) 18:06:out(USB) 18:06:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-20 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-20' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 10:28 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 17:57 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:28","out_time":"17:57","duration":"7:29","late_by":"00:00","early_by":"0:33","status":2,"punch_records":"10:28:in(USB) 17:56:out(USB) 17:57:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-20','10:28','17:57','7:29','00:00','0:33','10:28:in(USB) 17:56:out(USB) 17:57:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-21 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-21' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 10:24 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 17:47 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:24","out_time":"17:47","duration":"7:23","late_by":"00:00","early_by":"0:43","status":2,"punch_records":"10:24:in(USB) 10:24:(USB) 17:47:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-21','10:24','17:47','7:23','00:00','0:43','10:24:in(USB) 10:24:(USB) 17:47:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-22 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-22' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 11:07 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 19:52 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:07","out_time":"19:52","duration":"8:45","late_by":"0:37","early_by":"00:00","status":2,"punch_records":"11:07:in(USB) 11:07:(USB) 11:07:(USB) 19:52:out(USB) 19:52:(USB) ","overtime":"1:22","user_id":"2","user_biometric_id":"1","organization":"1","description":""} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-22','11:07','19:52','8:45','0:37','00:00','11:07:in(USB) 11:07:(USB) 11:07:(USB) 19:52:out(USB) 19:52:(USB) ',2,'') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-23 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-23' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 10:49 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 18:33 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:49","out_time":"18:33","duration":"7:44","late_by":"0:19","early_by":"00:00","status":2,"punch_records":"10:49:in(USB) 10:49:(USB) 10:49:(USB) 10:49:(USB) 18:33:out(USB) 18:33:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":""} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-23','10:49','18:33','7:44','0:19','00:00','10:49:in(USB) 10:49:(USB) 10:49:(USB) 10:49:(USB) 18:33:out(USB) 18:33:(USB) ',2,'') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-24 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-24' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 10:32 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 18:28 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:32","out_time":"18:28","duration":"7:56","late_by":"0:2","early_by":"0:2","status":2,"punch_records":"10:32:in(USB) 10:32:(USB) 18:28:out(USB) ","overtime":"7:56","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-24','10:32','18:28','7:56','0:2','0:2','10:32:in(USB) 10:32:(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-25 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-25' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-26 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-26' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 10:40 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 16:27 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:40","out_time":"16:27","duration":"5:47","late_by":"0:10","early_by":"2:3","status":2,"punch_records":"10:40:in(USB) 10:40:(USB) 16:27:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-26','10:40','16:27','5:47','0:10','2:3','10:40:in(USB) 10:40:(USB) 16:27:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-27 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-27' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 10:33 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 17:48 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:33","out_time":"17:48","duration":"7:15","late_by":"0:3","early_by":"0:42","status":2,"punch_records":"10:33:in(USB) 14:17:out(USB) 17:48:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-27','10:33','17:48','7:15','0:3','0:42','10:33:in(USB) 14:17:out(USB) 17:48:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-28 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-28' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 11:02 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 17:54 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:02","out_time":"17:54","duration":"6:52","late_by":"0:32","early_by":"0:36","status":2,"punch_records":"11:02:in(USB) 11:02:(USB) 12:43:out(USB) 17:54:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-28','11:02','17:54','6:52','0:32','0:36','11:02:in(USB) 11:02:(USB) 12:43:out(USB) 17:54:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-29 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-29' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 10:32 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 17:32 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:32","out_time":"17:32","duration":"7:0","late_by":"0:2","early_by":"0:58","status":2,"punch_records":"10:32:in(USB) 10:32:(USB) 14:19:out(USB) 17:32:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-29','10:32','17:32','7:0','0:2','0:58','10:32:in(USB) 10:32:(USB) 14:19:out(USB) 17:32:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-30 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-30' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , in_time => 11:01 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 , out_time => 17:48 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 2 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:01","out_time":"17:48","duration":"6:47","late_by":"0:31","early_by":"0:42","status":2,"punch_records":"11:01:in(USB) 17:48:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-30','11:01','17:48','6:47','0:31','0:42','11:01:in(USB) 17:48:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-01-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-01-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , in_time => 10:35 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , out_time => 16:10 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:35","out_time":"16:10","duration":"5:35","late_by":"0:5","early_by":"2:20","status":2,"punch_records":"10:35:in(USB) 10:51:out(USB) 11:25:in(USB) 14:00:out(USB) 14:56:in(USB) 16:10:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-01-05','10:35','16:10','5:35','0:5','2:20','10:35:in(USB) 10:51:out(USB) 11:25:in(USB) 14:00:out(USB) 14:56:in(USB) 16:10:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-02-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-02-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , in_time => 11:28 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , out_time => 16:13 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:28","out_time":"16:13","duration":"4:45","late_by":"0:58","early_by":"2:17","status":2,"punch_records":"11:28:in(USB) 11:37:out(USB) 11:56:in(USB) 13:22:out(USB) 14:53:in(USB) 16:13:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-02-05','11:28','16:13','4:45','0:58','2:17','11:28:in(USB) 11:37:out(USB) 11:56:in(USB) 13:22:out(USB) 14:53:in(USB) 16:13:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-03-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-03-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , in_time => 15:10 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , out_time => 17:39 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"15:10","out_time":"17:39","duration":"2:29","late_by":"4:40","early_by":"0:51","status":2,"punch_records":"15:10:in(USB) 15:29:out(USB) 16:10:in(USB) 16:42:out(USB) 17:05:in(USB) 17:05:(USB) 17:24:out(USB) 17:24:(USB) 17:39:in(USB) ","overtime":"2:29","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-03-05','15:10','17:39','2:29','4:40','0:51','15:10:in(USB) 15:29:out(USB) 16:10:in(USB) 16:42:out(USB) 17:05:in(USB) 17:05:(USB) 17:24:out(USB) 17:24:(USB) 17:39:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-04-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-04-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-05 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-05 , organization => 1 

2025-07-14T12:56:22+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-05') IS NOT NULL 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-06-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-06-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-06-05 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-06-05 , organization => 1 

2025-07-14T12:56:22+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-06-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-06-05') IS NOT NULL 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-06-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-07-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-07-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-07-05 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-07-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-08-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-08-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-08-05 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-08-05 , organization => 1 

2025-07-14T12:56:22+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-08-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-08-05') IS NOT NULL 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-08-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-09-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-09-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , in_time => 11:11 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , out_time => 15:03 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:11","out_time":"15:03","duration":"3:52","late_by":"0:41","early_by":"3:27","status":2,"punch_records":"11:11:in(USB) 11:16:(USB) 11:57:out(USB) 14:26:in(USB) 15:03:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-09-05','11:11','15:03','3:52','0:41','3:27','11:11:in(USB) 11:16:(USB) 11:57:out(USB) 14:26:in(USB) 15:03:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-10-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-10-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , in_time => 16:37 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , out_time => 16:47 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"16:37","out_time":"16:47","duration":"0:10","late_by":"6:7","early_by":"1:43","status":2,"punch_records":"16:37:in(USB) 16:47:out(USB) ","overtime":"0:10","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-10-05','16:37','16:47','0:10','6:7','1:43','16:37:in(USB) 16:47:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-11-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-11-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:56:22+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-12-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-12-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , in_time => 11:28 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , out_time => 17:17 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:28","out_time":"17:17","duration":"5:49","late_by":"0:58","early_by":"1:13","status":2,"punch_records":"11:28:in(USB) 11:33:out(USB) 15:47:in(USB) 16:57:out(USB) 16:57:(USB) 17:17:in(USB) 17:17:(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-12-05','11:28','17:17','5:49','0:58','1:13','11:28:in(USB) 11:33:out(USB) 15:47:in(USB) 16:57:out(USB) 16:57:(USB) 17:17:in(USB) 17:17:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-13 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-13' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , in_time => 11:27 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , out_time => 16:32 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:27","out_time":"16:32","duration":"5:5","late_by":"0:57","early_by":"1:58","status":2,"punch_records":"11:27:in(USB) 14:05:out(USB) 16:32:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-13','11:27','16:32','5:5','0:57','1:58','11:27:in(USB) 14:05:out(USB) 16:32:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-14 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-14' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , in_time => 15:15 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , out_time => 17:00 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"15:15","out_time":"17:00","duration":"1:45","late_by":"4:45","early_by":"1:30","status":2,"punch_records":"15:15:in(USB) 17:00:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-14','15:15','17:00','1:45','4:45','1:30','15:15:in(USB) 17:00:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-15 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-15' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , in_time => 13:25 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , out_time => 16:37 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:25","out_time":"16:37","duration":"3:12","late_by":"2:55","early_by":"1:53","status":2,"punch_records":"13:25:in(USB) 13:25:(USB) 14:26:out(USB) 16:30:in(USB) 16:30:(USB) 16:30:(USB) 16:37:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-15','13:25','16:37','3:12','2:55','1:53','13:25:in(USB) 13:25:(USB) 14:26:out(USB) 16:30:in(USB) 16:30:(USB) 16:30:(USB) 16:37:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-16 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-16' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T12:56:22+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-16','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-17 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-17' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-18 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-18' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-19 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-19' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"16:01","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"16:01:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-19','16:01','','0:00','0:00','0:00','16:01:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-20 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-20' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-20 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-20 , organization => 1 

2025-07-14T12:56:22+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-20')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-20') IS NOT NULL 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-20','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-21 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-21' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , in_time => 11:11 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , out_time => 14:12 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:11","out_time":"14:12","duration":"3:1","late_by":"0:41","early_by":"4:18","status":2,"punch_records":"11:11:in(USB) 11:53:out(USB) 11:53:(USB) 14:12:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-21','11:11','14:12','3:1','0:41','4:18','11:11:in(USB) 11:53:out(USB) 11:53:(USB) 14:12:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-22 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-22' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , in_time => 13:44 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , out_time => 17:21 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:44","out_time":"17:21","duration":"3:37","late_by":"3:14","early_by":"1:9","status":2,"punch_records":"13:44:in(USB) 15:00:out(USB) 17:21:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-22','13:44','17:21','3:37','3:14','1:9','13:44:in(USB) 15:00:out(USB) 17:21:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-23 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-23' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , in_time => 12:08 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , out_time => 16:17 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:08","out_time":"16:17","duration":"4:9","late_by":"1:38","early_by":"2:13","status":2,"punch_records":"12:08:in(USB) 16:17:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-23','12:08','16:17','4:9','1:38','2:13','12:08:in(USB) 16:17:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-24 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-24' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-25 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-25' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-26 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-26' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , in_time => 12:01 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , out_time => 14:20 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:01","out_time":"14:20","duration":"2:19","late_by":"1:31","early_by":"4:10","status":2,"punch_records":"12:01:in(USB) 12:01:(USB) 12:45:out(USB) 13:58:in(USB) 14:20:out(USB) 14:20:(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-26','12:01','14:20','2:19','1:31','4:10','12:01:in(USB) 12:01:(USB) 12:45:out(USB) 13:58:in(USB) 14:20:out(USB) 14:20:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-27 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-27' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , in_time => 11:13 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , out_time => 15:29 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:13","out_time":"15:29","duration":"4:16","late_by":"0:43","early_by":"3:1","status":2,"punch_records":"11:13:in(USB) 11:19:out(USB) 12:27:in(USB) 14:42:out(USB) 15:29:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-27','11:13','15:29','4:16','0:43','3:1','11:13:in(USB) 11:19:out(USB) 12:27:in(USB) 14:42:out(USB) 15:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-28 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-28' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , in_time => 10:59 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , out_time => 17:07 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:59","out_time":"17:07","duration":"6:8","late_by":"0:29","early_by":"1:23","status":2,"punch_records":"10:59:in(USB) 11:03:(USB) 11:08:out(USB) 14:54:in(USB) 17:07:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-28','10:59','17:07','6:8','0:29','1:23','10:59:in(USB) 11:03:(USB) 11:08:out(USB) 14:54:in(USB) 17:07:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-29 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-29' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"14:40","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"14:40:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-29','14:40','','0:00','0:00','0:00','14:40:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-30 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-30' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , in_time => 11:27 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 , out_time => 13:26 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 71 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:27","out_time":"13:26","duration":"1:59","late_by":"0:57","early_by":"5:4","status":2,"punch_records":"11:27:in(USB) 11:31:(USB) 12:18:out(USB) 13:26:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-30','11:27','13:26','1:59','0:57','5:4','11:27:in(USB) 11:31:(USB) 12:18:out(USB) 13:26:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-01-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-01-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-01-05 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-01-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-02-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-02-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-02-05 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-02-05 , organization => 1 

2025-07-14T12:56:22+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-02-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-02-05') IS NOT NULL 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-02-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-03-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-03-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-03-05 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-03-05 , organization => 1 

2025-07-14T12:56:22+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-03-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-03-05') IS NOT NULL 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-03-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-04-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-04-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-05 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-05 , organization => 1 

2025-07-14T12:56:22+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-05') IS NOT NULL 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-06-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-06-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , in_time => 12:30 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , out_time => 15:17 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:30","out_time":"15:17","duration":"2:47","late_by":"2:0","early_by":"3:13","status":2,"punch_records":"12:30:in(USB) 15:17:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-06-05','12:30','15:17','2:47','2:0','3:13','12:30:in(USB) 15:17:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-07-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-07-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , in_time => 11:31 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , out_time => 16:37 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:31","out_time":"16:37","duration":"5:6","late_by":"1:1","early_by":"1:53","status":2,"punch_records":"11:31:in(USB) 11:31:(USB) 14:07:out(USB) 14:07:(USB) 16:37:in(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-07-05','11:31','16:37','5:6','1:1','1:53','11:31:in(USB) 11:31:(USB) 14:07:out(USB) 14:07:(USB) 16:37:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-08-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-08-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , in_time => 11:22 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , out_time => 13:47 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:22","out_time":"13:47","duration":"2:25","late_by":"0:52","early_by":"4:43","status":2,"punch_records":"11:22:in(USB) 11:22:(USB) 13:47:out(USB) 13:47:(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-08-05','11:22','13:47','2:25','0:52','4:43','11:22:in(USB) 11:22:(USB) 13:47:out(USB) 13:47:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-09-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-09-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , in_time => 11:53 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , out_time => 15:10 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:53","out_time":"15:10","duration":"3:17","late_by":"1:23","early_by":"3:20","status":2,"punch_records":"11:53:in(USB) 11:53:(USB) 14:27:out(USB) 14:27:(USB) 14:52:in(USB) 15:10:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-09-05','11:53','15:10','3:17','1:23','3:20','11:53:in(USB) 11:53:(USB) 14:27:out(USB) 14:27:(USB) 14:52:in(USB) 15:10:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-10-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-10-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , in_time => 14:04 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , out_time => 16:39 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"14:04","out_time":"16:39","duration":"2:35","late_by":"3:34","early_by":"1:51","status":2,"punch_records":"14:04:in(USB) 14:04:(USB) 16:39:out(USB) 16:39:(USB) ","overtime":"2:35","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-10-05','14:04','16:39','2:35','3:34','1:51','14:04:in(USB) 14:04:(USB) 16:39:out(USB) 16:39:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-11-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-11-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:56:22+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-12-05 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-12-05' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , in_time => 11:33 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , out_time => 15:25 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:33","out_time":"15:25","duration":"3:52","late_by":"1:3","early_by":"3:5","status":2,"punch_records":"11:33:in(USB) 14:41:out(USB) 14:41:(USB) 14:49:in(USB) 14:49:(USB) 15:25:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-12-05','11:33','15:25','3:52','1:3','3:5','11:33:in(USB) 14:41:out(USB) 14:41:(USB) 14:49:in(USB) 14:49:(USB) 15:25:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-13 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-13' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , in_time => 11:27 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , out_time => 14:02 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:27","out_time":"14:02","duration":"2:35","late_by":"0:57","early_by":"4:28","status":2,"punch_records":"11:27:in(USB) 11:27:(USB) 13:17:out(USB) 14:02:in(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-13','11:27','14:02','2:35','0:57','4:28','11:27:in(USB) 11:27:(USB) 13:17:out(USB) 14:02:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-14 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-14' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-14 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-14 , organization => 1 

2025-07-14T12:56:22+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-14')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-14') IS NOT NULL 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-14','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-15 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-15' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , in_time => 11:01 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , out_time => 14:15 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:56:22+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:01","out_time":"14:15","duration":"3:14","late_by":"0:31","early_by":"4:15","status":2,"punch_records":"11:01:in(USB) 14:15:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-15','11:01','14:15','3:14','0:31','4:15','11:01:in(USB) 14:15:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:22+02:00 :: Insert into attendance successful 

2025-07-14T12:56:22+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:22+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:22+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:22+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-16 

2025-07-14T12:56:22+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-16' 

2025-07-14T12:56:22+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:22+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T12:56:22+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:22+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:22+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T12:56:22+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T12:56:22+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:22+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:22+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:22+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:22+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:22+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:22+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:22+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-16','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-17 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-17' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-18 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-18' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-19 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-19' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-19 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-19 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-19')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-19') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-19','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-20 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-20' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-20 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-20 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-20')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-20') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-20','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-21 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-21' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-21 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-21 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-21')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-21') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-21','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-22 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-22' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-22 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-22 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-22')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-22') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-22','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-23 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-23' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-23 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-23 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-23')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-23') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-23','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-24 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-24' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-25 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-25' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-26 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-26' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , in_time => 12:38 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , out_time => 13:55 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:38","out_time":"13:55","duration":"1:17","late_by":"2:8","early_by":"4:35","status":2,"punch_records":"12:38:in(USB) 12:38:(USB) 13:55:out(USB) 13:55:(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-26','12:38','13:55','1:17','2:8','4:35','12:38:in(USB) 12:38:(USB) 13:55:out(USB) 13:55:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-27 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-27' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , in_time => 11:43 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , out_time => 14:51 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:43","out_time":"14:51","duration":"3:8","late_by":"1:13","early_by":"3:39","status":2,"punch_records":"11:43:in(USB) 11:43:(USB) 14:51:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-27','11:43','14:51','3:8','1:13','3:39','11:43:in(USB) 11:43:(USB) 14:51:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-28 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-28' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , in_time => 12:34 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , out_time => 14:50 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:34","out_time":"14:50","duration":"2:16","late_by":"2:4","early_by":"3:40","status":2,"punch_records":"12:34:in(USB) 14:50:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-28','12:34','14:50','2:16','2:4','3:40','12:34:in(USB) 14:50:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-29 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-29' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-29 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-29 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-29')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-29') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-29','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-30 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-30' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-30 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-30 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-30')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-30') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 72 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-30','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-01-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-01-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:38 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 17:09 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:38","out_time":"17:09","duration":"6:31","late_by":"0:8","early_by":"1:21","status":2,"punch_records":"10:38:in(USB) 13:19:out(USB) 13:58:in(USB) 13:58:(USB) 16:20:out(USB) 17:09:in(USB) 17:09:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-01-05','10:38','17:09','6:31','0:8','1:21','10:38:in(USB) 13:19:out(USB) 13:58:in(USB) 13:58:(USB) 16:20:out(USB) 17:09:in(USB) 17:09:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-02-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-02-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:44 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:33 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:44","out_time":"18:33","duration":"7:49","late_by":"0:14","early_by":"00:00","status":2,"punch_records":"10:44:in(USB) 10:44:(USB) 13:00:out(USB) 13:00:(USB) 13:59:in(USB) 13:59:(USB) 13:59:(USB) 14:11:out(USB) 14:11:(USB) 18:33:in(USB) 18:33:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-02-05','10:44','18:33','7:49','0:14','00:00','10:44:in(USB) 10:44:(USB) 13:00:out(USB) 13:00:(USB) 13:59:in(USB) 13:59:(USB) 13:59:(USB) 14:11:out(USB) 14:11:(USB) 18:33:in(USB) 18:33:(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-03-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-03-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:41 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:25 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:41","out_time":"18:25","duration":"7:44","late_by":"0:11","early_by":"0:5","status":2,"punch_records":"10:41:in(USB) 11:12:out(USB) 13:19:in(USB) 18:25:out(USB) ","overtime":"7:44","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-03-05','10:41','18:25','7:44','0:11','0:5','10:41:in(USB) 11:12:out(USB) 13:19:in(USB) 18:25:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-04-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-04-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:37 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 17:47 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:37","out_time":"17:47","duration":"7:10","late_by":"0:7","early_by":"0:43","status":2,"punch_records":"10:37:in(USB) 11:25:out(USB) 13:11:in(USB) 16:56:out(USB) 16:56:(USB) 17:47:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-05','10:37','17:47','7:10','0:7','0:43','10:37:in(USB) 11:25:out(USB) 13:11:in(USB) 16:56:out(USB) 16:56:(USB) 17:47:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-06-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-06-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:17 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:30 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:17","out_time":"18:30","duration":"8:13","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:17:in(USB) 12:27:out(USB) 13:16:in(USB) 13:28:out(USB) 14:05:in(USB) 15:07:out(USB) 15:07:(USB) 16:59:in(USB) 18:10:out(USB) 18:30:in(USB) 18:30:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-06-05','10:17','18:30','8:13','00:00','00:00','10:17:in(USB) 12:27:out(USB) 13:16:in(USB) 13:28:out(USB) 14:05:in(USB) 15:07:out(USB) 15:07:(USB) 16:59:in(USB) 18:10:out(USB) 18:30:in(USB) 18:30:(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-07-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-07-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:08 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 14:55 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:08","out_time":"14:55","duration":"4:47","late_by":"00:00","early_by":"3:35","status":2,"punch_records":"10:08:in(USB) 10:08:(USB) 14:55:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-07-05','10:08','14:55','4:47','00:00','3:35','10:08:in(USB) 10:08:(USB) 14:55:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-08-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-08-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:27 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:27","out_time":"18:32","duration":"8:5","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:27:in(USB) 18:32:out(USB) 18:32:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-08-05','10:27','18:32','8:5','00:00','00:00','10:27:in(USB) 18:32:out(USB) 18:32:(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-09-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-09-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 11:07 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:07","out_time":"18:32","duration":"7:25","late_by":"0:37","early_by":"00:00","status":2,"punch_records":"11:07:in(USB) 13:52:out(USB) 13:52:(USB) 18:32:in(USB) 18:32:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-09-05','11:07','18:32','7:25','0:37','00:00','11:07:in(USB) 13:52:out(USB) 13:52:(USB) 18:32:in(USB) 18:32:(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-10-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-10-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:09 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:13 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:09","out_time":"18:13","duration":"8:4","late_by":"00:00","early_by":"0:17","status":2,"punch_records":"10:09:in(USB) 10:09:(USB) 11:24:out(USB) 12:29:in(USB) 12:29:(USB) 12:55:out(USB) 13:05:in(USB) 14:12:out(USB) 14:12:(USB) 15:32:in(USB) 15:32:(USB) 16:32:out(USB) 18:13:in(USB) 18:13:(USB) ","overtime":"8:04","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-10-05','10:09','18:13','8:4','00:00','0:17','10:09:in(USB) 10:09:(USB) 11:24:out(USB) 12:29:in(USB) 12:29:(USB) 12:55:out(USB) 13:05:in(USB) 14:12:out(USB) 14:12:(USB) 15:32:in(USB) 15:32:(USB) 16:32:out(USB) 18:13:in(USB) 18:13:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-11-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-11-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-12-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-12-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:13 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:24 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:13","out_time":"18:24","duration":"8:11","late_by":"00:00","early_by":"0:6","status":2,"punch_records":"10:13:in(USB) 10:21:out(USB) 10:21:(USB) 10:39:in(USB) 10:47:out(USB) 10:47:(USB) 11:01:in(USB) 15:10:out(USB) 16:31:in(USB) 18:24:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-12-05','10:13','18:24','8:11','00:00','0:6','10:13:in(USB) 10:21:out(USB) 10:21:(USB) 10:39:in(USB) 10:47:out(USB) 10:47:(USB) 11:01:in(USB) 15:10:out(USB) 16:31:in(USB) 18:24:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-13 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-13' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:29 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:00 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:29","out_time":"18:00","duration":"7:31","late_by":"00:00","early_by":"0:30","status":2,"punch_records":"10:29:in(USB) 13:23:out(USB) 13:23:(USB) 13:44:in(USB) 13:44:(USB) 16:30:out(USB) 16:30:(USB) 18:00:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-13','10:29','18:00','7:31','00:00','0:30','10:29:in(USB) 13:23:out(USB) 13:23:(USB) 13:44:in(USB) 13:44:(USB) 16:30:out(USB) 16:30:(USB) 18:00:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-14 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-14' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:46 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:46","duration":"8:12","late_by":"0:4","early_by":"00:00","status":2,"punch_records":"10:34:in(USB) 10:57:out(USB) 10:57:(USB) 11:28:in(USB) 11:34:out(USB) 11:34:(USB) 13:20:in(USB) 13:20:(USB) 14:57:out(USB) 16:43:in(USB) 16:43:(USB) 17:46:out(USB) 18:46:in(USB) 18:46:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-14','10:34','18:46','8:12','0:4','00:00','10:34:in(USB) 10:57:out(USB) 10:57:(USB) 11:28:in(USB) 11:34:out(USB) 11:34:(USB) 13:20:in(USB) 13:20:(USB) 14:57:out(USB) 16:43:in(USB) 16:43:(USB) 17:46:out(USB) 18:46:in(USB) 18:46:(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-15 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-15' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:37 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:20 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:37","out_time":"18:20","duration":"7:43","late_by":"0:7","early_by":"0:10","status":2,"punch_records":"10:37:in(USB) 10:37:(USB) 11:17:out(USB) 11:17:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:19:(USB) 11:20:(USB) 12:46:in(USB) 14:16:out(USB) 14:16:(USB) 16:57:in(USB) 16:57:(USB) 18:17:out(USB) 18:20:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-15','10:37','18:20','7:43','0:7','0:10','10:37:in(USB) 10:37:(USB) 11:17:out(USB) 11:17:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:19:(USB) 11:20:(USB) 12:46:in(USB) 14:16:out(USB) 14:16:(USB) 16:57:in(USB) 16:57:(USB) 18:17:out(USB) 18:20:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-16 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-16' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:51 , organization_id => 1 , date => 2025-05-16  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 15:54 , organization_id => 1 , date => 2025-05-16  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:51","out_time":"15:54","duration":"5:3","late_by":"0:21","early_by":"2:36","status":2,"punch_records":"10:51:in(USB) 11:05:out(USB) 11:05:(USB) 11:12:in(USB) 11:12:(USB) 13:11:out(USB) 14:22:in(USB) 14:22:(USB) 14:34:out(USB) 15:54:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-16','10:51','15:54','5:3','0:21','2:36','10:51:in(USB) 11:05:out(USB) 11:05:(USB) 11:12:in(USB) 11:12:(USB) 13:11:out(USB) 14:22:in(USB) 14:22:(USB) 14:34:out(USB) 15:54:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-17 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-17' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:32 , organization_id => 1 , date => 2025-05-17  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-17' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:38 , organization_id => 1 , date => 2025-05-17  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:32","out_time":"18:38","duration":"8:6","late_by":"0:2","early_by":"00:00","status":2,"punch_records":"10:32:in(USB) 10:32:(USB) 11:29:out(USB) 13:15:in(USB) 15:08:out(USB) 18:18:in(USB) 18:38:out(USB) ","overtime":"8:06","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-17','10:32','18:38','8:6','0:2','00:00','10:32:in(USB) 10:32:(USB) 11:29:out(USB) 13:15:in(USB) 15:08:out(USB) 18:18:in(USB) 18:38:out(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-18 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-18' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-19 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-19' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:32","duration":"7:58","late_by":"0:4","early_by":"00:00","status":2,"punch_records":"10:34:in(USB) 10:34:(USB) 10:34:(USB) 10:40:out(USB) 10:56:in(USB) 12:06:out(USB) 12:20:in(USB) 12:32:out(USB) 16:57:in(USB) 17:07:out(USB) 18:32:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-19','10:34','18:32','7:58','0:4','00:00','10:34:in(USB) 10:34:(USB) 10:34:(USB) 10:40:out(USB) 10:56:in(USB) 12:06:out(USB) 12:20:in(USB) 12:32:out(USB) 16:57:in(USB) 17:07:out(USB) 18:32:in(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-20 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-20' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:44 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 17:11 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:44","out_time":"17:11","duration":"6:27","late_by":"0:14","early_by":"1:19","status":2,"punch_records":"10:44:in(USB) 11:08:out(USB) 12:16:in(USB) 13:41:out(USB) 16:15:in(USB) 16:15:(USB) 17:11:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-20','10:44','17:11','6:27','0:14','1:19','10:44:in(USB) 11:08:out(USB) 12:16:in(USB) 13:41:out(USB) 16:15:in(USB) 16:15:(USB) 17:11:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-21 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-21' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:28","duration":"7:54","late_by":"0:4","early_by":"0:2","status":2,"punch_records":"10:34:in(TD) 10:47:out(USB) 10:47:(USB) 13:39:in(USB) 16:12:out(USB) 16:50:in(USB) 18:28:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-21','10:34','18:28','7:54','0:4','0:2','10:34:in(TD) 10:47:out(USB) 10:47:(USB) 13:39:in(USB) 16:12:out(USB) 16:50:in(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-22 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-22' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:28","duration":"7:54","late_by":"0:4","early_by":"0:2","status":2,"punch_records":"10:34:in(USB) 10:34:(USB) 15:48:out(USB) 18:24:in(USB) 18:24:(USB) 18:28:(USB) 18:28:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-22','10:34','18:28','7:54','0:4','0:2','10:34:in(USB) 10:34:(USB) 15:48:out(USB) 18:24:in(USB) 18:24:(USB) 18:28:(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-23 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-23' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:29 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:29","out_time":"18:28","duration":"7:59","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:29:in(USB) 10:36:out(USB) 10:36:(USB) 12:21:in(USB) 13:21:out(USB) 13:50:in(USB) 14:11:out(USB) 16:26:in(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-23','10:29','18:28','7:59','00:00','0:2','10:29:in(USB) 10:36:out(USB) 10:36:(USB) 12:21:in(USB) 13:21:out(USB) 13:50:in(USB) 14:11:out(USB) 16:26:in(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-24 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-24' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:14 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:29 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:14","out_time":"18:29","duration":"8:15","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:14:in(USB) 10:22:out(USB) 13:42:in(USB) 16:29:out(USB) 17:51:in(USB) 18:14:out(USB) 18:29:in(USB) ","overtime":"8:15","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-24','10:14','18:29','8:15','00:00','0:1','10:14:in(USB) 10:22:out(USB) 13:42:in(USB) 16:29:out(USB) 17:51:in(USB) 18:14:out(USB) 18:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-25 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-25' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-26 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-26' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:26 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:26","out_time":"18:32","duration":"8:6","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:26:in(USB) 10:35:out(USB) 10:35:(USB) 10:40:(USB) 10:43:in(USB) 13:41:out(USB) 13:58:in(USB) 14:20:out(USB) 15:11:in(USB) 17:01:out(USB) 17:39:in(USB) 17:52:out(USB) 17:52:(USB) 18:29:in(USB) 18:32:(USB) 18:32:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-26','10:26','18:32','8:6','00:00','00:00','10:26:in(USB) 10:35:out(USB) 10:35:(USB) 10:40:(USB) 10:43:in(USB) 13:41:out(USB) 13:58:in(USB) 14:20:out(USB) 15:11:in(USB) 17:01:out(USB) 17:39:in(USB) 17:52:out(USB) 17:52:(USB) 18:29:in(USB) 18:32:(USB) 18:32:(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-27 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-27' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:27 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 14:28 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:27","out_time":"14:28","duration":"4:1","late_by":"00:00","early_by":"4:2","status":2,"punch_records":"10:27:in(USB) 13:26:out(USB) 14:28:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-27','10:27','14:28','4:1','00:00','4:2','10:27:in(USB) 13:26:out(USB) 14:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-28 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-28' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:34 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:34","duration":"8:0","late_by":"0:4","early_by":"00:00","status":2,"punch_records":"10:34:in(USB) 11:56:out(USB) 15:00:in(USB) 15:01:(USB) 16:26:out(USB) 17:34:in(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-28','10:34','18:34','8:0','0:4','00:00','10:34:in(USB) 11:56:out(USB) 15:00:in(USB) 15:01:(USB) 16:26:out(USB) 17:34:in(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-29 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-29' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:29 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 14:19 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:29","out_time":"14:19","duration":"3:50","late_by":"00:00","early_by":"4:11","status":2,"punch_records":"10:29:in(USB) 10:29:(USB) 11:35:out(USB) 11:41:in(USB) 11:41:(USB) 11:41:(USB) 11:41:(USB) 11:43:(USB) 11:43:(USB) 11:44:(USB) 11:44:(USB) 11:50:out(USB) 11:51:(USB) 13:45:in(USB) 13:54:out(USB) 14:16:in(USB) 14:19:(USB) 14:19:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-29','10:29','14:19','3:50','00:00','4:11','10:29:in(USB) 10:29:(USB) 11:35:out(USB) 11:41:in(USB) 11:41:(USB) 11:41:(USB) 11:41:(USB) 11:43:(USB) 11:43:(USB) 11:44:(USB) 11:44:(USB) 11:50:out(USB) 11:51:(USB) 13:45:in(USB) 13:54:out(USB) 14:16:in(USB) 14:19:(USB) 14:19:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-30 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-30' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , in_time => 10:26 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 40 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:26","out_time":"18:28","duration":"8:2","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:26:in(USB) 12:06:out(USB) 12:06:(USB) 12:59:in(USB) 14:21:out(USB) 18:28:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-30','10:26','18:28','8:2','00:00','0:2','10:26:in(USB) 12:06:out(USB) 12:06:(USB) 12:59:in(USB) 14:21:out(USB) 18:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-01-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-01-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:54","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"09:54:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-01-05','9:54','','0:00','0:00','0:00','09:54:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-02-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-02-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"18:28","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"18:28:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-02-05','18:28','','0:00','0:00','0:00','18:28:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-03-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-03-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , in_time => 10:07 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , out_time => 13:51 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:07","out_time":"13:51","duration":"3:44","late_by":"00:00","early_by":"4:39","status":2,"punch_records":"10:07:in(USB) 13:51:out(USB) 13:51:(USB) ","overtime":"3:44","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-03-05','10:07','13:51','3:44','00:00','4:39','10:07:in(USB) 13:51:out(USB) 13:51:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-04-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-04-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , in_time => 10:09 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , out_time => 18:29 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:09","out_time":"18:29","duration":"8:20","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:09:in(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-05','10:09','18:29','8:20','00:00','0:1','10:09:in(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-06-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-06-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , in_time => 9:40 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , out_time => 18:29 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:40","out_time":"18:29","duration":"8:49","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:40:in(USB) 09:40:(USB) 18:29:out(USB) 18:29:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-06-05','9:40','18:29','8:49','00:00','0:1','09:40:in(USB) 09:40:(USB) 18:29:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-07-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-07-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , in_time => 9:53 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , out_time => 14:22 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:53","out_time":"14:22","duration":"4:29","late_by":"00:00","early_by":"4:8","status":2,"punch_records":"09:53:in(USB) 09:53:(USB) 14:22:out(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-07-05','9:53','14:22','4:29','00:00','4:8','09:53:in(USB) 09:53:(USB) 14:22:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-08-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-08-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , in_time => 10:13 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , out_time => 18:27 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:13","out_time":"18:27","duration":"8:14","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:13:in(USB) 10:13:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-08-05','10:13','18:27','8:14','00:00','0:3','10:13:in(USB) 10:13:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-09-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-09-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , in_time => 10:02 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , out_time => 18:27 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:02","out_time":"18:27","duration":"8:25","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:02:in(USB) 10:02:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-09-05','10:02','18:27','8:25','00:00','0:3','10:02:in(USB) 10:02:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-10-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-10-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , in_time => 10:14 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , out_time => 16:15 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:14","out_time":"16:15","duration":"6:1","late_by":"00:00","early_by":"2:15","status":2,"punch_records":"10:14:in(USB) 10:14:(USB) 13:53:out(USB) 13:53:(USB) 16:15:in(USB) ","overtime":"6:01","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-10-05','10:14','16:15','6:1','00:00','2:15','10:14:in(USB) 10:14:(USB) 13:53:out(USB) 13:53:(USB) 16:15:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-11-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-11-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-12-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-12-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , in_time => 10:28 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , out_time => 18:28 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:28","out_time":"18:28","duration":"8:0","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:28:in(USB) 10:28:(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-12-05','10:28','18:28','8:0','00:00','0:2','10:28:in(USB) 10:28:(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-13 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-13' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , in_time => 10:02 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , out_time => 18:27 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:02","out_time":"18:27","duration":"8:25","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:02:in(USB) 10:02:(USB) 16:44:out(USB) 18:27:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-13','10:02','18:27','8:25','00:00','0:3','10:02:in(USB) 10:02:(USB) 16:44:out(USB) 18:27:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-14 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-14' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , in_time => 10:18 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , out_time => 18:32 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:18","out_time":"18:32","duration":"8:14","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:18:in(USB) 10:18:(USB) 13:44:out(USB) 13:44:(USB) 18:32:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-14','10:18','18:32','8:14','00:00','00:00','10:18:in(USB) 10:18:(USB) 13:44:out(USB) 13:44:(USB) 18:32:in(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-15 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-15' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:37","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"10:37:in(USB) 10:37:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-15','10:37','','0:00','0:00','0:00','10:37:in(USB) 10:37:(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-16 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-16' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-16','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-17 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-17' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-18 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-18' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-19 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-19' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , in_time => 10:04 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , out_time => 18:29 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:04","out_time":"18:29","duration":"8:25","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:04:in(USB) 11:44:out(USB) 18:29:in(USB) 18:29:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-19','10:04','18:29','8:25','00:00','0:1','10:04:in(USB) 11:44:out(USB) 18:29:in(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-20 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-20' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:53","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"09:53:in(USB) 09:54:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-20','9:53','','0:00','0:00','0:00','09:53:in(USB) 09:54:(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-21 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-21' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-21 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-21 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-21')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-21') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-21','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-22 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-22' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-22 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-22 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-22')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-22') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-22','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-23 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-23' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , in_time => 9:59 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , out_time => 18:26 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:59","out_time":"18:26","duration":"8:27","late_by":"00:00","early_by":"0:4","status":2,"punch_records":"09:59:in(USB) 18:26:out(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-23','9:59','18:26','8:27','00:00','0:4','09:59:in(USB) 18:26:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-24 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-24' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-25 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-25' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-26 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-26' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-26 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-26 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-26')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-26') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-26','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-27 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-27' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-27 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-27 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-27')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-27') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-27','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-28 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-28' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-28 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-28 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-28')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-28') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-28','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-29 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-29' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-29 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-29 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-29')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-29') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-29','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-30 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-30' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-30 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-30 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-30')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-30') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 42 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-30','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-01-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-01-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , in_time => 10:16 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , out_time => 17:30 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:16","out_time":"17:30","duration":"7:14","late_by":"00:00","early_by":"1:0","status":2,"punch_records":"10:16:in(USB) 13:50:out(USB) 13:50:(USB) 17:30:in(USB) 17:30:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-01-05','10:16','17:30','7:14','00:00','1:0','10:16:in(USB) 13:50:out(USB) 13:50:(USB) 17:30:in(USB) 17:30:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-02-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-02-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"18:31","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"18:31:in(USB) 18:31:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-02-05','18:31','','0:00','0:00','0:00','18:31:in(USB) 18:31:(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-03-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-03-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , in_time => 13:04 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , out_time => 18:27 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:04","out_time":"18:27","duration":"5:23","late_by":"2:34","early_by":"0:3","status":2,"punch_records":"13:04:in(USB) 13:04:(USB) 14:45:out(USB) 14:45:(USB) 18:27:in(USB) 18:27:(USB) ","overtime":"5:23","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-03-05','13:04','18:27','5:23','2:34','0:3','13:04:in(USB) 13:04:(USB) 14:45:out(USB) 14:45:(USB) 18:27:in(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-04-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-04-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-05 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-05 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-05') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-06-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-06-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , in_time => 10:09 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:09","out_time":"18:29","duration":"8:20","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:09:in(USB) 18:29:out(USB) 18:29:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-06-05','10:09','18:29','8:20','00:00','0:1','10:09:in(USB) 18:29:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-07-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-07-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , in_time => 10:03 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , out_time => 18:52 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:03","out_time":"18:52","duration":"8:49","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:03:in(USB) 10:03:(USB) 18:52:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-07-05','10:03','18:52','8:49','00:00','00:00','10:03:in(USB) 10:03:(USB) 18:52:out(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-08-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-08-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , in_time => 10:02 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , out_time => 18:30 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:02","out_time":"18:30","duration":"8:28","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:02:in(USB) 14:08:out(USB) 18:30:in(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-08-05','10:02','18:30','8:28','00:00','00:00','10:02:in(USB) 14:08:out(USB) 18:30:in(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-09-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-09-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , in_time => 10:08 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , out_time => 18:28 , organization_id => 1 , date => 2025-09-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:08","out_time":"18:28","duration":"8:20","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:08:in(USB) 18:28:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-09-05','10:08','18:28','8:20','00:00','0:2','10:08:in(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-10-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-10-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , in_time => 10:16 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , out_time => 18:28 , organization_id => 1 , date => 2025-10-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:16","out_time":"18:28","duration":"8:12","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:16:in(USB) 10:16:(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"8:12","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-10-05','10:16','18:28','8:12','00:00','0:2','10:16:in(USB) 10:16:(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-11-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-11-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-12-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-12-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , in_time => 10:04 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , out_time => 18:27 , organization_id => 1 , date => 2025-12-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:04","out_time":"18:27","duration":"8:23","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:04:in(USB) 18:27:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-12-05','10:04','18:27','8:23','00:00','0:3','10:04:in(USB) 18:27:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-13 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-13' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , in_time => 10:08 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-05-13  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:08","out_time":"18:29","duration":"8:21","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:08:in(USB) 10:09:(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-13','10:08','18:29','8:21','00:00','0:1','10:08:in(USB) 10:09:(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-14 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-14' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , in_time => 10:03 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , out_time => 18:35 , organization_id => 1 , date => 2025-05-14  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:03","out_time":"18:35","duration":"8:32","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:03:in(USB) 10:03:(USB) 18:35:out(USB) 18:35:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-14','10:03','18:35','8:32','00:00','00:00','10:03:in(USB) 10:03:(USB) 18:35:out(USB) 18:35:(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-15 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-15' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , in_time => 10:21 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , out_time => 18:30 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:21","out_time":"18:30","duration":"8:9","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:21:in(USB) 10:21:(USB) 18:30:out(USB) 18:30:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-15','10:21','18:30','8:9','00:00','00:00','10:21:in(USB) 10:21:(USB) 18:30:out(USB) 18:30:(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-16 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-16' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-16','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-17 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-17' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-18 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-18' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-19 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-19' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-19 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-19 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-19')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-19') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-19','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-20 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-20' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-20 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-20 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-20')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-20') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-20','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-21 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-21' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-21 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-21 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-21')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-21') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-21','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-22 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-22' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-22 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-22 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-22')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-22') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-22','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-23 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-23' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-23 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-23 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-23')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-23') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-23','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-24 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-24' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-25 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-25' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-26 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-26' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , in_time => 10:33 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-05-26  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:33","out_time":"18:29","duration":"7:56","late_by":"0:3","early_by":"0:1","status":2,"punch_records":"10:33:in(USB) 18:29:out(USB) 18:29:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-26','10:33','18:29','7:56','0:3','0:1','10:33:in(USB) 18:29:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-27 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-27' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , in_time => 10:04 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , out_time => 18:28 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:04","out_time":"18:28","duration":"8:24","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:04:in(USB) 13:54:out(USB) 13:54:(USB) 18:28:in(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-27','10:04','18:28','8:24','00:00','0:2','10:04:in(USB) 13:54:out(USB) 13:54:(USB) 18:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-28 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-28' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , in_time => 10:06 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , out_time => 18:30 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:06","out_time":"18:30","duration":"8:24","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:06:in(USB) 10:07:(USB) 18:30:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-28','10:06','18:30','8:24','00:00','00:00','10:06:in(USB) 10:07:(USB) 18:30:out(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-29 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-29' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , in_time => 10:00 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:00","out_time":"18:29","duration":"8:29","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:00:in(USB) 10:01:(USB) 14:02:out(USB) 18:29:in(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-29','10:00','18:29','8:29','00:00','0:1','10:00:in(USB) 10:01:(USB) 14:02:out(USB) 18:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-30 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-30' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , in_time => 10:12 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 , out_time => 18:27 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 27 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:12","out_time":"18:27","duration":"8:15","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:12:in(USB) 10:12:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-30','10:12','18:27','8:15','00:00','0:3','10:12:in(USB) 10:12:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-01-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-01-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 9:22 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 17:29 , organization_id => 1 , date => 2025-01-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:22","out_time":"17:29","duration":"8:7","late_by":"00:00","early_by":"1:1","status":2,"punch_records":"09:22:in(USB) 17:29:out(USB) 17:29:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-01-05','9:22','17:29','8:7','00:00','1:1','09:22:in(USB) 17:29:out(USB) 17:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-02-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-02-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 9:34 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 18:32 , organization_id => 1 , date => 2025-02-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:34","out_time":"18:32","duration":"8:58","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:34:in(USB) 18:32:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-02-05','9:34','18:32','8:58','00:00','00:00','09:34:in(USB) 18:32:out(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-03-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-03-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 9:27 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 18:27 , organization_id => 1 , date => 2025-03-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:27","out_time":"18:27","duration":"9:0","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"09:27:in(USB) 18:26:out(USB) 18:27:(USB) ","overtime":"8:59","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-03-05','9:27','18:27','9:0','00:00','0:3','09:27:in(USB) 18:26:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-04-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-04-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 8:57 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 18:30 , organization_id => 1 , date => 2025-05-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"8:57","out_time":"18:30","duration":"9:33","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"08:57:in(USB) 09:27:out(USB) 09:56:in(USB) 17:14:out(USB) 17:14:(USB) 18:30:in(USB) 18:30:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-05','8:57','18:30','9:33','00:00','00:00','08:57:in(USB) 09:27:out(USB) 09:56:in(USB) 17:14:out(USB) 17:14:(USB) 18:30:in(USB) 18:30:(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-06-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-06-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 9:20 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-06-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:20","out_time":"18:29","duration":"9:9","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:20:in(USB) 09:20:(USB) 09:50:out(USB) 18:29:in(USB) 18:29:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-06-05','9:20','18:29','9:9','00:00','0:1','09:20:in(USB) 09:20:(USB) 09:50:out(USB) 18:29:in(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-07-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-07-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 9:21 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 18:51 , organization_id => 1 , date => 2025-07-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:21","out_time":"18:51","duration":"9:30","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:21:in(USB) 09:21:(USB) 09:54:out(USB) 13:54:in(USB) 18:51:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-07-05','9:21','18:51','9:30','00:00','00:00','09:21:in(USB) 09:21:(USB) 09:54:out(USB) 13:54:in(USB) 18:51:out(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-08-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-08-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 9:26 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-08-05  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:26","out_time":"18:29","duration":"9:3","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:26:in(USB) 09:57:out(USB) 16:47:in(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-08-05','9:26','18:29','9:3','00:00','0:1','09:26:in(USB) 09:57:out(USB) 16:47:in(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-09-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-09-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-09-05 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-09-05 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-09-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-09-05') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-09-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-10-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-10-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-10-05 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-10-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-11-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-11-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-12-05 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-12-05' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-12-05 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-12-05 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-12-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-12-05') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-12-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-13 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-13' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-13 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-13 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-13')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-13') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-13','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-14 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-14' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-14 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-14 , organization => 1 

2025-07-14T12:56:23+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-14')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-14') IS NOT NULL 

2025-07-14T12:56:23+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-14','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-15 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-15' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 9:12 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 18:30 , organization_id => 1 , date => 2025-05-15  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:12","out_time":"18:30","duration":"9:18","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:12:in(USB) 09:50:out(USB) 18:30:in(USB) 18:30:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-15','9:12','18:30','9:18','00:00','00:00','09:12:in(USB) 09:50:out(USB) 18:30:in(USB) 18:30:(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-16 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-16' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 9:16 , organization_id => 1 , date => 2025-05-16  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 18:34 , organization_id => 1 , date => 2025-05-16  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:16","out_time":"18:34","duration":"9:18","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:16:in(USB) 09:16:(USB) 09:56:out(USB) 09:56:(USB) 16:32:in(USB) 16:32:(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-16','9:16','18:34','9:18','00:00','00:00','09:16:in(USB) 09:16:(USB) 09:56:out(USB) 09:56:(USB) 16:32:in(USB) 16:32:(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-17 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-17' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 9:17 , organization_id => 1 , date => 2025-05-17  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-05-17  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-17' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:17","out_time":"18:29","duration":"9:12","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:17:in(USB) 18:28:out(USB) 18:29:(USB) ","overtime":"9:11","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-17','9:17','18:29','9:12','00:00','0:1','09:17:in(USB) 18:28:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-18 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-18' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-19 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-19' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 8:58 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 18:58 , organization_id => 1 , date => 2025-05-19  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"8:58","out_time":"18:58","duration":"10:0","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"08:58:in(USB) 08:58:(USB) 09:32:out(USB) 09:32:(USB) 18:58:in(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-19','8:58','18:58','10:0','00:00','00:00','08:58:in(USB) 08:58:(USB) 09:32:out(USB) 09:32:(USB) 18:58:in(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-20 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-20' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 9:17 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-05-20  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:17","out_time":"18:29","duration":"9:12","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:17:in(USB) 09:50:out(USB) 18:29:in(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-20','9:17','18:29','9:12','00:00','0:1','09:17:in(USB) 09:50:out(USB) 18:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-21 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-21' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 9:12 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 9:42 , organization_id => 1 , date => 2025-05-21  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:12","out_time":"9:42","duration":"0:30","late_by":"00:00","early_by":"8:48","status":2,"punch_records":"09:12:in(USB) 09:42:out(USB) 09:42:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-21','9:12','9:42','0:30','00:00','8:48','09:12:in(USB) 09:42:out(USB) 09:42:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-22 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-22' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 9:24 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-05-22  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:24","out_time":"18:29","duration":"9:5","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:24:in(USB) 13:45:out(USB) 14:11:in(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-22','9:24','18:29','9:5','00:00','0:1','09:24:in(USB) 13:45:out(USB) 14:11:in(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-23 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-23' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 9:25 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 18:28 , organization_id => 1 , date => 2025-05-23  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:25","out_time":"18:28","duration":"9:3","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"09:25:in(USB) 09:25:(USB) 09:59:out(USB) 14:07:in(USB) 18:28:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-23','9:25','18:28','9:3','00:00','0:2','09:25:in(USB) 09:25:(USB) 09:59:out(USB) 14:07:in(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-24 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-24' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 9:19 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 18:28 , organization_id => 1 , date => 2025-05-24  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:19","out_time":"18:28","duration":"9:9","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"09:19:in(USB) 09:55:out(USB) 18:28:in(USB) ","overtime":"9:09","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-24','9:19','18:28','9:9','00:00','0:2','09:19:in(USB) 09:55:out(USB) 18:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-25 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-25' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T12:56:23+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T12:56:23+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-26 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-26' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:14","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"09:14:in(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-26','9:14','','0:00','0:00','0:00','09:14:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-27 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-27' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 9:12 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 9:38 , organization_id => 1 , date => 2025-05-27  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:12","out_time":"9:38","duration":"0:26","late_by":"00:00","early_by":"8:52","status":2,"punch_records":"09:12:in(USB) 09:38:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-27','9:12','9:38','0:26','00:00','8:52','09:12:in(USB) 09:38:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-28 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-28' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 9:24 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 18:30 , organization_id => 1 , date => 2025-05-28  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:24","out_time":"18:30","duration":"9:6","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:24:in(USB) 09:24:(USB) 09:50:out(USB) 14:03:in(USB) 18:30:out(USB) 18:30:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-28','9:24','18:30','9:6','00:00','00:00','09:24:in(USB) 09:24:(USB) 09:50:out(USB) 14:03:in(USB) 18:30:out(USB) 18:30:(USB) ',2,'') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-29 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-29' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 13:42 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 18:28 , organization_id => 1 , date => 2025-05-29  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:42","out_time":"18:28","duration":"4:46","late_by":"3:12","early_by":"0:2","status":2,"punch_records":"13:42:in(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-29','13:42','18:28','4:46','3:12','0:2','13:42:in(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T12:56:23+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T12:56:23+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T12:56:23+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-30 

2025-07-14T12:56:23+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-30' 

2025-07-14T12:56:23+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T12:56:23+02:00 :: mehod inside checkInTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , in_time => 9:29 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 , out_time => 18:27 , organization_id => 1 , date => 2025-05-30  

2025-07-14T12:56:23+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T12:56:23+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T12:56:23+02:00 :: requested param :: user_id => 23 

2025-07-14T12:56:23+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T12:56:23+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T12:56:23+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:29","out_time":"18:27","duration":"8:58","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"09:29:in(USB) 09:43:out(USB) 13:53:in(USB) 13:53:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T12:56:23+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-30','9:29','18:27','8:58','00:00','0:3','09:29:in(USB) 09:43:out(USB) 13:53:in(USB) 13:53:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T12:56:23+02:00 :: Insert into attendance successful 

2025-07-14T12:56:23+02:00 :: Attendance Inserted 

 ============ End Of Script ================== 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceData 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-01-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-01-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 9:39 , organization_id => 1 , date => 2025-01-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 17:22 , organization_id => 1 , date => 2025-01-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:39","out_time":"17:22","duration":"7:43","late_by":"00:00","early_by":"1:8","status":2,"punch_records":"09:39:in(USB) 09:39:(USB) 14:58:out(USB) 17:22:in(USB) 17:22:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-01-05','9:39','17:22','7:43','00:00','1:8','09:39:in(USB) 09:39:(USB) 14:58:out(USB) 17:22:in(USB) 17:22:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-02-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-02-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:57 , organization_id => 1 , date => 2025-02-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 18:20 , organization_id => 1 , date => 2025-02-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:57","out_time":"18:20","duration":"7:23","late_by":"0:27","early_by":"0:10","status":2,"punch_records":"10:57:in(USB) 10:57:(USB) 18:20:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-02-05','10:57','18:20','7:23','0:27','0:10','10:57:in(USB) 10:57:(USB) 18:20:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-03-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-03-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:22 , organization_id => 1 , date => 2025-03-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 17:56 , organization_id => 1 , date => 2025-03-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:22","out_time":"17:56","duration":"7:34","late_by":"00:00","early_by":"0:34","status":2,"punch_records":"10:22:in(USB) 10:22:(USB) 17:56:out(USB) 17:56:(USB) ","overtime":"7:34","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-03-05','10:22','17:56','7:34','00:00','0:34','10:22:in(USB) 10:22:(USB) 17:56:out(USB) 17:56:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-04-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-04-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:31 , organization_id => 1 , date => 2025-05-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 17:43 , organization_id => 1 , date => 2025-05-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:31","out_time":"17:43","duration":"7:12","late_by":"0:1","early_by":"0:47","status":2,"punch_records":"10:31:in(USB) 10:31:(USB) 17:43:out(USB) 17:43:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-05','10:31','17:43','7:12','0:1','0:47','10:31:in(USB) 10:31:(USB) 17:43:out(USB) 17:43:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-06-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-06-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:25 , organization_id => 1 , date => 2025-06-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 18:18 , organization_id => 1 , date => 2025-06-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:25","out_time":"18:18","duration":"7:53","late_by":"00:00","early_by":"0:12","status":2,"punch_records":"10:25:in(USB) 14:08:out(USB) 18:18:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-06-05','10:25','18:18','7:53','00:00','0:12','10:25:in(USB) 14:08:out(USB) 18:18:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-07-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-07-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-07-05 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-07-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-08-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-08-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:47 , organization_id => 1 , date => 2025-08-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 17:45 , organization_id => 1 , date => 2025-08-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:47","out_time":"17:45","duration":"6:58","late_by":"0:17","early_by":"0:45","status":2,"punch_records":"10:47:in(USB) 10:47:(USB) 13:51:out(USB) 13:51:(USB) 14:55:in(USB) 14:55:(USB) 17:45:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-08-05','10:47','17:45','6:58','0:17','0:45','10:47:in(USB) 10:47:(USB) 13:51:out(USB) 13:51:(USB) 14:55:in(USB) 14:55:(USB) 17:45:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-09-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-09-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:35 , organization_id => 1 , date => 2025-09-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 17:49 , organization_id => 1 , date => 2025-09-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:35","out_time":"17:49","duration":"7:14","late_by":"0:5","early_by":"0:41","status":2,"punch_records":"10:35:in(USB) 10:35:(USB) 14:29:out(USB) 17:49:in(USB) 17:49:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-09-05','10:35','17:49','7:14','0:5','0:41','10:35:in(USB) 10:35:(USB) 14:29:out(USB) 17:49:in(USB) 17:49:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-10-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-10-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 11:11 , organization_id => 1 , date => 2025-10-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 16:15 , organization_id => 1 , date => 2025-10-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:11","out_time":"16:15","duration":"5:4","late_by":"0:41","early_by":"2:15","status":2,"punch_records":"11:11:in(USB) 11:56:out(USB) 13:14:in(USB) 13:14:(USB) 13:23:out(USB) 14:24:in(USB) 16:15:out(USB) ","overtime":"5:04","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-10-05','11:11','16:15','5:4','0:41','2:15','11:11:in(USB) 11:56:out(USB) 13:14:in(USB) 13:14:(USB) 13:23:out(USB) 14:24:in(USB) 16:15:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-11-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-11-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T13:28:30+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T13:28:30+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-12-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-12-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:30 , organization_id => 1 , date => 2025-12-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 18:07 , organization_id => 1 , date => 2025-12-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:30","out_time":"18:07","duration":"7:37","late_by":"00:00","early_by":"0:23","status":2,"punch_records":"10:30:in(USB) 18:04:out(USB) 18:06:(USB) 18:07:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-12-05','10:30','18:07','7:37','00:00','0:23','10:30:in(USB) 18:04:out(USB) 18:06:(USB) 18:07:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-13 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-13' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:30 , organization_id => 1 , date => 2025-05-13  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 17:44 , organization_id => 1 , date => 2025-05-13  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:30","out_time":"17:44","duration":"7:14","late_by":"00:00","early_by":"0:46","status":2,"punch_records":"10:30:in(USB) 17:44:out(USB) 17:44:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-13','10:30','17:44','7:14','00:00','0:46','10:30:in(USB) 17:44:out(USB) 17:44:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-14 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-14' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:21 , organization_id => 1 , date => 2025-05-14  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 17:56 , organization_id => 1 , date => 2025-05-14  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:21","out_time":"17:56","duration":"7:35","late_by":"00:00","early_by":"0:34","status":2,"punch_records":"10:21:in(USB) 10:21:(USB) 17:56:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-14','10:21','17:56','7:35','00:00','0:34','10:21:in(USB) 10:21:(USB) 17:56:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-15 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-15' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:15 , organization_id => 1 , date => 2025-05-15  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 18:00 , organization_id => 1 , date => 2025-05-15  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:15","out_time":"18:00","duration":"7:45","late_by":"00:00","early_by":"0:30","status":2,"punch_records":"10:15:in(USB) 10:15:(USB) 18:00:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-15','10:15','18:00','7:45','00:00','0:30','10:15:in(USB) 10:15:(USB) 18:00:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-16 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-16' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:28 , organization_id => 1 , date => 2025-05-16  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 17:02 , organization_id => 1 , date => 2025-05-16  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:28","out_time":"17:02","duration":"6:34","late_by":"00:00","early_by":"1:28","status":2,"punch_records":"10:28:in(USB) 11:20:out(USB) 11:21:(USB) 14:57:in(USB) 17:02:out(USB) 17:02:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-16','10:28','17:02','6:34','00:00','1:28','10:28:in(USB) 11:20:out(USB) 11:21:(USB) 14:57:in(USB) 17:02:out(USB) 17:02:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-17 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-17' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:30 , organization_id => 1 , date => 2025-05-17  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 17:49 , organization_id => 1 , date => 2025-05-17  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-17' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:30","out_time":"17:49","duration":"7:19","late_by":"00:00","early_by":"0:41","status":2,"punch_records":"10:30:in(USB) 10:30:(USB) 10:30:(USB) 17:49:out(USB) ","overtime":"7:19","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-17','10:30','17:49','7:19','00:00','0:41','10:30:in(USB) 10:30:(USB) 10:30:(USB) 17:49:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-18 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-18' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-19 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-19' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 11:15 , organization_id => 1 , date => 2025-05-19  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 18:06 , organization_id => 1 , date => 2025-05-19  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:15","out_time":"18:06","duration":"6:51","late_by":"0:45","early_by":"0:24","status":2,"punch_records":"11:15:in(USB) 13:49:out(USB) 13:56:in(USB) 18:06:out(USB) 18:06:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-19','11:15','18:06','6:51','0:45','0:24','11:15:in(USB) 13:49:out(USB) 13:56:in(USB) 18:06:out(USB) 18:06:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-20 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-20' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:28 , organization_id => 1 , date => 2025-05-20  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 17:57 , organization_id => 1 , date => 2025-05-20  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:28","out_time":"17:57","duration":"7:29","late_by":"00:00","early_by":"0:33","status":2,"punch_records":"10:28:in(USB) 17:56:out(USB) 17:57:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-20','10:28','17:57','7:29','00:00','0:33','10:28:in(USB) 17:56:out(USB) 17:57:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-21 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-21' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:24 , organization_id => 1 , date => 2025-05-21  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 17:47 , organization_id => 1 , date => 2025-05-21  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:24","out_time":"17:47","duration":"7:23","late_by":"00:00","early_by":"0:43","status":2,"punch_records":"10:24:in(USB) 10:24:(USB) 17:47:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-21','10:24','17:47','7:23','00:00','0:43','10:24:in(USB) 10:24:(USB) 17:47:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-22 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-22' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 11:07 , organization_id => 1 , date => 2025-05-22  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 19:52 , organization_id => 1 , date => 2025-05-22  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:07","out_time":"19:52","duration":"8:45","late_by":"0:37","early_by":"00:00","status":2,"punch_records":"11:07:in(USB) 11:07:(USB) 11:07:(USB) 19:52:out(USB) 19:52:(USB) ","overtime":"1:22","user_id":"2","user_biometric_id":"1","organization":"1","description":""} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-22','11:07','19:52','8:45','0:37','00:00','11:07:in(USB) 11:07:(USB) 11:07:(USB) 19:52:out(USB) 19:52:(USB) ',2,'') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-23 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-23' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:49 , organization_id => 1 , date => 2025-05-23  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 18:33 , organization_id => 1 , date => 2025-05-23  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:49","out_time":"18:33","duration":"7:44","late_by":"0:19","early_by":"00:00","status":2,"punch_records":"10:49:in(USB) 10:49:(USB) 10:49:(USB) 10:49:(USB) 18:33:out(USB) 18:33:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":""} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-23','10:49','18:33','7:44','0:19','00:00','10:49:in(USB) 10:49:(USB) 10:49:(USB) 10:49:(USB) 18:33:out(USB) 18:33:(USB) ',2,'') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-24 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-24' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:32 , organization_id => 1 , date => 2025-05-24  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 18:28 , organization_id => 1 , date => 2025-05-24  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:32","out_time":"18:28","duration":"7:56","late_by":"0:2","early_by":"0:2","status":2,"punch_records":"10:32:in(USB) 10:32:(USB) 18:28:out(USB) ","overtime":"7:56","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-24','10:32','18:28','7:56','0:2','0:2','10:32:in(USB) 10:32:(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-25 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-25' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-26 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-26' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:40 , organization_id => 1 , date => 2025-05-26  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 16:27 , organization_id => 1 , date => 2025-05-26  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:40","out_time":"16:27","duration":"5:47","late_by":"0:10","early_by":"2:3","status":2,"punch_records":"10:40:in(USB) 10:40:(USB) 16:27:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-26','10:40','16:27','5:47','0:10','2:3','10:40:in(USB) 10:40:(USB) 16:27:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-27 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-27' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:33 , organization_id => 1 , date => 2025-05-27  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 17:48 , organization_id => 1 , date => 2025-05-27  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:33","out_time":"17:48","duration":"7:15","late_by":"0:3","early_by":"0:42","status":2,"punch_records":"10:33:in(USB) 14:17:out(USB) 17:48:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-27','10:33','17:48','7:15','0:3','0:42','10:33:in(USB) 14:17:out(USB) 17:48:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-28 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-28' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 11:02 , organization_id => 1 , date => 2025-05-28  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 17:54 , organization_id => 1 , date => 2025-05-28  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:02","out_time":"17:54","duration":"6:52","late_by":"0:32","early_by":"0:36","status":2,"punch_records":"11:02:in(USB) 11:02:(USB) 12:43:out(USB) 17:54:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-28','11:02','17:54','6:52','0:32','0:36','11:02:in(USB) 11:02:(USB) 12:43:out(USB) 17:54:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-29 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-29' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 10:32 , organization_id => 1 , date => 2025-05-29  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 17:32 , organization_id => 1 , date => 2025-05-29  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:32","out_time":"17:32","duration":"7:0","late_by":"0:2","early_by":"0:58","status":2,"punch_records":"10:32:in(USB) 10:32:(USB) 14:19:out(USB) 17:32:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-29','10:32','17:32','7:0','0:2','0:58','10:32:in(USB) 10:32:(USB) 14:19:out(USB) 17:32:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-30 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-30' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , in_time => 11:01 , organization_id => 1 , date => 2025-05-30  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 , out_time => 17:48 , organization_id => 1 , date => 2025-05-30  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 2 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:01","out_time":"17:48","duration":"6:47","late_by":"0:31","early_by":"0:42","status":2,"punch_records":"11:01:in(USB) 17:48:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-30','11:01','17:48','6:47','0:31','0:42','11:01:in(USB) 17:48:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-01-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-01-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , in_time => 10:35 , organization_id => 1 , date => 2025-01-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , out_time => 16:10 , organization_id => 1 , date => 2025-01-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:35","out_time":"16:10","duration":"5:35","late_by":"0:5","early_by":"2:20","status":2,"punch_records":"10:35:in(USB) 10:51:out(USB) 11:25:in(USB) 14:00:out(USB) 14:56:in(USB) 16:10:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-01-05','10:35','16:10','5:35','0:5','2:20','10:35:in(USB) 10:51:out(USB) 11:25:in(USB) 14:00:out(USB) 14:56:in(USB) 16:10:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-02-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-02-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , in_time => 11:28 , organization_id => 1 , date => 2025-02-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , out_time => 16:13 , organization_id => 1 , date => 2025-02-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:28","out_time":"16:13","duration":"4:45","late_by":"0:58","early_by":"2:17","status":2,"punch_records":"11:28:in(USB) 11:37:out(USB) 11:56:in(USB) 13:22:out(USB) 14:53:in(USB) 16:13:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-02-05','11:28','16:13','4:45','0:58','2:17','11:28:in(USB) 11:37:out(USB) 11:56:in(USB) 13:22:out(USB) 14:53:in(USB) 16:13:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-03-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-03-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , in_time => 15:10 , organization_id => 1 , date => 2025-03-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , out_time => 17:39 , organization_id => 1 , date => 2025-03-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"15:10","out_time":"17:39","duration":"2:29","late_by":"4:40","early_by":"0:51","status":2,"punch_records":"15:10:in(USB) 15:29:out(USB) 16:10:in(USB) 16:42:out(USB) 17:05:in(USB) 17:05:(USB) 17:24:out(USB) 17:24:(USB) 17:39:in(USB) ","overtime":"2:29","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-03-05','15:10','17:39','2:29','4:40','0:51','15:10:in(USB) 15:29:out(USB) 16:10:in(USB) 16:42:out(USB) 17:05:in(USB) 17:05:(USB) 17:24:out(USB) 17:24:(USB) 17:39:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-04-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-04-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-05-05 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-05-05 , organization => 1 

2025-07-14T13:28:30+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-05') IS NOT NULL 

2025-07-14T13:28:30+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-06-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-06-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-06-05 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-06-05 , organization => 1 

2025-07-14T13:28:30+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-06-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-06-05') IS NOT NULL 

2025-07-14T13:28:30+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-06-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-07-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-07-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-07-05 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-07-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-08-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-08-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-08-05 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-08-05 , organization => 1 

2025-07-14T13:28:30+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-08-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-08-05') IS NOT NULL 

2025-07-14T13:28:30+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-08-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-09-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-09-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , in_time => 11:11 , organization_id => 1 , date => 2025-09-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , out_time => 15:03 , organization_id => 1 , date => 2025-09-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:11","out_time":"15:03","duration":"3:52","late_by":"0:41","early_by":"3:27","status":2,"punch_records":"11:11:in(USB) 11:16:(USB) 11:57:out(USB) 14:26:in(USB) 15:03:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-09-05','11:11','15:03','3:52','0:41','3:27','11:11:in(USB) 11:16:(USB) 11:57:out(USB) 14:26:in(USB) 15:03:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-10-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-10-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , in_time => 16:37 , organization_id => 1 , date => 2025-10-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , out_time => 16:47 , organization_id => 1 , date => 2025-10-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"16:37","out_time":"16:47","duration":"0:10","late_by":"6:7","early_by":"1:43","status":2,"punch_records":"16:37:in(USB) 16:47:out(USB) ","overtime":"0:10","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-10-05','16:37','16:47','0:10','6:7','1:43','16:37:in(USB) 16:47:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-11-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-11-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T13:28:30+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T13:28:30+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-12-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-12-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , in_time => 11:28 , organization_id => 1 , date => 2025-12-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , out_time => 17:17 , organization_id => 1 , date => 2025-12-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:28","out_time":"17:17","duration":"5:49","late_by":"0:58","early_by":"1:13","status":2,"punch_records":"11:28:in(USB) 11:33:out(USB) 15:47:in(USB) 16:57:out(USB) 16:57:(USB) 17:17:in(USB) 17:17:(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-12-05','11:28','17:17','5:49','0:58','1:13','11:28:in(USB) 11:33:out(USB) 15:47:in(USB) 16:57:out(USB) 16:57:(USB) 17:17:in(USB) 17:17:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-13 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-13' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , in_time => 11:27 , organization_id => 1 , date => 2025-05-13  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , out_time => 16:32 , organization_id => 1 , date => 2025-05-13  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:27","out_time":"16:32","duration":"5:5","late_by":"0:57","early_by":"1:58","status":2,"punch_records":"11:27:in(USB) 14:05:out(USB) 16:32:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-13','11:27','16:32','5:5','0:57','1:58','11:27:in(USB) 14:05:out(USB) 16:32:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-14 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-14' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , in_time => 15:15 , organization_id => 1 , date => 2025-05-14  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , out_time => 17:00 , organization_id => 1 , date => 2025-05-14  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"15:15","out_time":"17:00","duration":"1:45","late_by":"4:45","early_by":"1:30","status":2,"punch_records":"15:15:in(USB) 17:00:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-14','15:15','17:00','1:45','4:45','1:30','15:15:in(USB) 17:00:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-15 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-15' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , in_time => 13:25 , organization_id => 1 , date => 2025-05-15  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , out_time => 16:37 , organization_id => 1 , date => 2025-05-15  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:25","out_time":"16:37","duration":"3:12","late_by":"2:55","early_by":"1:53","status":2,"punch_records":"13:25:in(USB) 13:25:(USB) 14:26:out(USB) 16:30:in(USB) 16:30:(USB) 16:30:(USB) 16:37:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-15','13:25','16:37','3:12','2:55','1:53','13:25:in(USB) 13:25:(USB) 14:26:out(USB) 16:30:in(USB) 16:30:(USB) 16:30:(USB) 16:37:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-16 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-16' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T13:28:30+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T13:28:30+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-16','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-17 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-17' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-18 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-18' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-19 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-19' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"16:01","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"16:01:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-19','16:01','','0:00','0:00','0:00','16:01:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-20 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-20' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-05-20 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-05-20 , organization => 1 

2025-07-14T13:28:30+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-20')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-20') IS NOT NULL 

2025-07-14T13:28:30+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-20','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-21 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-21' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , in_time => 11:11 , organization_id => 1 , date => 2025-05-21  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , out_time => 14:12 , organization_id => 1 , date => 2025-05-21  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:11","out_time":"14:12","duration":"3:1","late_by":"0:41","early_by":"4:18","status":2,"punch_records":"11:11:in(USB) 11:53:out(USB) 11:53:(USB) 14:12:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-21','11:11','14:12','3:1','0:41','4:18','11:11:in(USB) 11:53:out(USB) 11:53:(USB) 14:12:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-22 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-22' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , in_time => 13:44 , organization_id => 1 , date => 2025-05-22  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , out_time => 17:21 , organization_id => 1 , date => 2025-05-22  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:44","out_time":"17:21","duration":"3:37","late_by":"3:14","early_by":"1:9","status":2,"punch_records":"13:44:in(USB) 15:00:out(USB) 17:21:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-22','13:44','17:21','3:37','3:14','1:9','13:44:in(USB) 15:00:out(USB) 17:21:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-23 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-23' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , in_time => 12:08 , organization_id => 1 , date => 2025-05-23  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , out_time => 16:17 , organization_id => 1 , date => 2025-05-23  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:08","out_time":"16:17","duration":"4:9","late_by":"1:38","early_by":"2:13","status":2,"punch_records":"12:08:in(USB) 16:17:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-23','12:08','16:17','4:9','1:38','2:13','12:08:in(USB) 16:17:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-24 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-24' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-25 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-25' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-26 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-26' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , in_time => 12:01 , organization_id => 1 , date => 2025-05-26  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , out_time => 14:20 , organization_id => 1 , date => 2025-05-26  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:01","out_time":"14:20","duration":"2:19","late_by":"1:31","early_by":"4:10","status":2,"punch_records":"12:01:in(USB) 12:01:(USB) 12:45:out(USB) 13:58:in(USB) 14:20:out(USB) 14:20:(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-26','12:01','14:20','2:19','1:31','4:10','12:01:in(USB) 12:01:(USB) 12:45:out(USB) 13:58:in(USB) 14:20:out(USB) 14:20:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-27 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-27' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , in_time => 11:13 , organization_id => 1 , date => 2025-05-27  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , out_time => 15:29 , organization_id => 1 , date => 2025-05-27  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:13","out_time":"15:29","duration":"4:16","late_by":"0:43","early_by":"3:1","status":2,"punch_records":"11:13:in(USB) 11:19:out(USB) 12:27:in(USB) 14:42:out(USB) 15:29:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-27','11:13','15:29','4:16','0:43','3:1','11:13:in(USB) 11:19:out(USB) 12:27:in(USB) 14:42:out(USB) 15:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-28 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-28' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , in_time => 10:59 , organization_id => 1 , date => 2025-05-28  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , out_time => 17:07 , organization_id => 1 , date => 2025-05-28  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:59","out_time":"17:07","duration":"6:8","late_by":"0:29","early_by":"1:23","status":2,"punch_records":"10:59:in(USB) 11:03:(USB) 11:08:out(USB) 14:54:in(USB) 17:07:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-28','10:59','17:07','6:8','0:29','1:23','10:59:in(USB) 11:03:(USB) 11:08:out(USB) 14:54:in(USB) 17:07:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-29 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-29' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"14:40","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"14:40:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-29','14:40','','0:00','0:00','0:00','14:40:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-30 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-30' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , in_time => 11:27 , organization_id => 1 , date => 2025-05-30  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 , out_time => 13:26 , organization_id => 1 , date => 2025-05-30  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 71 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:27","out_time":"13:26","duration":"1:59","late_by":"0:57","early_by":"5:4","status":2,"punch_records":"11:27:in(USB) 11:31:(USB) 12:18:out(USB) 13:26:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-30','11:27','13:26','1:59','0:57','5:4','11:27:in(USB) 11:31:(USB) 12:18:out(USB) 13:26:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-01-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-01-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-01-05 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-01-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-02-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-02-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-02-05 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-02-05 , organization => 1 

2025-07-14T13:28:30+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-02-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-02-05') IS NOT NULL 

2025-07-14T13:28:30+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-02-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-03-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-03-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-03-05 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-03-05 , organization => 1 

2025-07-14T13:28:30+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-03-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-03-05') IS NOT NULL 

2025-07-14T13:28:30+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-03-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-04-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-04-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-05-05 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-05-05 , organization => 1 

2025-07-14T13:28:30+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-05') IS NOT NULL 

2025-07-14T13:28:30+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-06-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-06-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , in_time => 12:30 , organization_id => 1 , date => 2025-06-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , out_time => 15:17 , organization_id => 1 , date => 2025-06-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:30","out_time":"15:17","duration":"2:47","late_by":"2:0","early_by":"3:13","status":2,"punch_records":"12:30:in(USB) 15:17:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-06-05','12:30','15:17','2:47','2:0','3:13','12:30:in(USB) 15:17:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-07-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-07-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , in_time => 11:31 , organization_id => 1 , date => 2025-07-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , out_time => 16:37 , organization_id => 1 , date => 2025-07-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:31","out_time":"16:37","duration":"5:6","late_by":"1:1","early_by":"1:53","status":2,"punch_records":"11:31:in(USB) 11:31:(USB) 14:07:out(USB) 14:07:(USB) 16:37:in(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-07-05','11:31','16:37','5:6','1:1','1:53','11:31:in(USB) 11:31:(USB) 14:07:out(USB) 14:07:(USB) 16:37:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-08-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-08-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , in_time => 11:22 , organization_id => 1 , date => 2025-08-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , out_time => 13:47 , organization_id => 1 , date => 2025-08-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:22","out_time":"13:47","duration":"2:25","late_by":"0:52","early_by":"4:43","status":2,"punch_records":"11:22:in(USB) 11:22:(USB) 13:47:out(USB) 13:47:(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-08-05','11:22','13:47','2:25','0:52','4:43','11:22:in(USB) 11:22:(USB) 13:47:out(USB) 13:47:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-09-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-09-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , in_time => 11:53 , organization_id => 1 , date => 2025-09-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , out_time => 15:10 , organization_id => 1 , date => 2025-09-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:53","out_time":"15:10","duration":"3:17","late_by":"1:23","early_by":"3:20","status":2,"punch_records":"11:53:in(USB) 11:53:(USB) 14:27:out(USB) 14:27:(USB) 14:52:in(USB) 15:10:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-09-05','11:53','15:10','3:17','1:23','3:20','11:53:in(USB) 11:53:(USB) 14:27:out(USB) 14:27:(USB) 14:52:in(USB) 15:10:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-10-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-10-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , in_time => 14:04 , organization_id => 1 , date => 2025-10-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , out_time => 16:39 , organization_id => 1 , date => 2025-10-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"14:04","out_time":"16:39","duration":"2:35","late_by":"3:34","early_by":"1:51","status":2,"punch_records":"14:04:in(USB) 14:04:(USB) 16:39:out(USB) 16:39:(USB) ","overtime":"2:35","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-10-05','14:04','16:39','2:35','3:34','1:51','14:04:in(USB) 14:04:(USB) 16:39:out(USB) 16:39:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-11-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-11-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T13:28:30+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T13:28:30+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-12-05 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-12-05' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , in_time => 11:33 , organization_id => 1 , date => 2025-12-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , out_time => 15:25 , organization_id => 1 , date => 2025-12-05  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:33","out_time":"15:25","duration":"3:52","late_by":"1:3","early_by":"3:5","status":2,"punch_records":"11:33:in(USB) 14:41:out(USB) 14:41:(USB) 14:49:in(USB) 14:49:(USB) 15:25:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-12-05','11:33','15:25','3:52','1:3','3:5','11:33:in(USB) 14:41:out(USB) 14:41:(USB) 14:49:in(USB) 14:49:(USB) 15:25:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-13 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-13' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , in_time => 11:27 , organization_id => 1 , date => 2025-05-13  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , out_time => 14:02 , organization_id => 1 , date => 2025-05-13  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:27","out_time":"14:02","duration":"2:35","late_by":"0:57","early_by":"4:28","status":2,"punch_records":"11:27:in(USB) 11:27:(USB) 13:17:out(USB) 14:02:in(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-13','11:27','14:02','2:35','0:57','4:28','11:27:in(USB) 11:27:(USB) 13:17:out(USB) 14:02:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-14 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-14' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-05-14 , organization_id => 1 

2025-07-14T13:28:30+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:30+02:00 :: requested param :: date => 2025-05-14 , organization => 1 

2025-07-14T13:28:30+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-14')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-14') IS NOT NULL 

2025-07-14T13:28:30+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-14','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:30+02:00 :: Insert into attendance successful 

2025-07-14T13:28:30+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:30+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:30+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:30+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-15 

2025-07-14T13:28:30+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-15' 

2025-07-14T13:28:30+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:30+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , in_time => 11:01 , organization_id => 1 , date => 2025-05-15  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 , out_time => 14:15 , organization_id => 1 , date => 2025-05-15  

2025-07-14T13:28:30+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:30+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:30+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:30+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:30+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:30+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:01","out_time":"14:15","duration":"3:14","late_by":"0:31","early_by":"4:15","status":2,"punch_records":"11:01:in(USB) 14:15:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:30+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-15','11:01','14:15','3:14','0:31','4:15','11:01:in(USB) 14:15:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-16 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-16' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-16','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-17 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-17' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-18 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-18' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-19 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-19' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-19 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-19 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-19')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-19') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-19','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-20 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-20' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-20 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-20 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-20')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-20') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-20','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-21 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-21' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-21 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-21 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-21')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-21') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-21','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-22 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-22' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-22 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-22 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-22')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-22') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-22','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-23 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-23' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-23 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-23 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-23')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-23') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-23','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-24 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-24' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-25 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-25' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-26 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-26' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , in_time => 12:38 , organization_id => 1 , date => 2025-05-26  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , out_time => 13:55 , organization_id => 1 , date => 2025-05-26  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:38","out_time":"13:55","duration":"1:17","late_by":"2:8","early_by":"4:35","status":2,"punch_records":"12:38:in(USB) 12:38:(USB) 13:55:out(USB) 13:55:(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-26','12:38','13:55','1:17','2:8','4:35','12:38:in(USB) 12:38:(USB) 13:55:out(USB) 13:55:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-27 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-27' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , in_time => 11:43 , organization_id => 1 , date => 2025-05-27  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , out_time => 14:51 , organization_id => 1 , date => 2025-05-27  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:43","out_time":"14:51","duration":"3:8","late_by":"1:13","early_by":"3:39","status":2,"punch_records":"11:43:in(USB) 11:43:(USB) 14:51:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-27','11:43','14:51','3:8','1:13','3:39','11:43:in(USB) 11:43:(USB) 14:51:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-28 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-28' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , in_time => 12:34 , organization_id => 1 , date => 2025-05-28  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , out_time => 14:50 , organization_id => 1 , date => 2025-05-28  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:34","out_time":"14:50","duration":"2:16","late_by":"2:4","early_by":"3:40","status":2,"punch_records":"12:34:in(USB) 14:50:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-28','12:34','14:50','2:16','2:4','3:40','12:34:in(USB) 14:50:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-29 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-29' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-29 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-29 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-29')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-29') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-29','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-30 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-30' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-30 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-30 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-30')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-30') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 72 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-30','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-01-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-01-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:38 , organization_id => 1 , date => 2025-01-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 17:09 , organization_id => 1 , date => 2025-01-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:38","out_time":"17:09","duration":"6:31","late_by":"0:8","early_by":"1:21","status":2,"punch_records":"10:38:in(USB) 13:19:out(USB) 13:58:in(USB) 13:58:(USB) 16:20:out(USB) 17:09:in(USB) 17:09:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-01-05','10:38','17:09','6:31','0:8','1:21','10:38:in(USB) 13:19:out(USB) 13:58:in(USB) 13:58:(USB) 16:20:out(USB) 17:09:in(USB) 17:09:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-02-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-02-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:44 , organization_id => 1 , date => 2025-02-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:33 , organization_id => 1 , date => 2025-02-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:44","out_time":"18:33","duration":"7:49","late_by":"0:14","early_by":"00:00","status":2,"punch_records":"10:44:in(USB) 10:44:(USB) 13:00:out(USB) 13:00:(USB) 13:59:in(USB) 13:59:(USB) 13:59:(USB) 14:11:out(USB) 14:11:(USB) 18:33:in(USB) 18:33:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-02-05','10:44','18:33','7:49','0:14','00:00','10:44:in(USB) 10:44:(USB) 13:00:out(USB) 13:00:(USB) 13:59:in(USB) 13:59:(USB) 13:59:(USB) 14:11:out(USB) 14:11:(USB) 18:33:in(USB) 18:33:(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-03-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-03-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:41 , organization_id => 1 , date => 2025-03-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:25 , organization_id => 1 , date => 2025-03-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:41","out_time":"18:25","duration":"7:44","late_by":"0:11","early_by":"0:5","status":2,"punch_records":"10:41:in(USB) 11:12:out(USB) 13:19:in(USB) 18:25:out(USB) ","overtime":"7:44","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-03-05','10:41','18:25','7:44','0:11','0:5','10:41:in(USB) 11:12:out(USB) 13:19:in(USB) 18:25:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-04-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-04-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:37 , organization_id => 1 , date => 2025-05-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 17:47 , organization_id => 1 , date => 2025-05-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:37","out_time":"17:47","duration":"7:10","late_by":"0:7","early_by":"0:43","status":2,"punch_records":"10:37:in(USB) 11:25:out(USB) 13:11:in(USB) 16:56:out(USB) 16:56:(USB) 17:47:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-05','10:37','17:47','7:10','0:7','0:43','10:37:in(USB) 11:25:out(USB) 13:11:in(USB) 16:56:out(USB) 16:56:(USB) 17:47:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-06-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-06-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:17 , organization_id => 1 , date => 2025-06-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:30 , organization_id => 1 , date => 2025-06-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:17","out_time":"18:30","duration":"8:13","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:17:in(USB) 12:27:out(USB) 13:16:in(USB) 13:28:out(USB) 14:05:in(USB) 15:07:out(USB) 15:07:(USB) 16:59:in(USB) 18:10:out(USB) 18:30:in(USB) 18:30:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-06-05','10:17','18:30','8:13','00:00','00:00','10:17:in(USB) 12:27:out(USB) 13:16:in(USB) 13:28:out(USB) 14:05:in(USB) 15:07:out(USB) 15:07:(USB) 16:59:in(USB) 18:10:out(USB) 18:30:in(USB) 18:30:(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-07-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-07-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:08 , organization_id => 1 , date => 2025-07-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 14:55 , organization_id => 1 , date => 2025-07-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:08","out_time":"14:55","duration":"4:47","late_by":"00:00","early_by":"3:35","status":2,"punch_records":"10:08:in(USB) 10:08:(USB) 14:55:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-07-05','10:08','14:55','4:47','00:00','3:35','10:08:in(USB) 10:08:(USB) 14:55:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-08-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-08-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:27 , organization_id => 1 , date => 2025-08-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-08-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:27","out_time":"18:32","duration":"8:5","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:27:in(USB) 18:32:out(USB) 18:32:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-08-05','10:27','18:32','8:5','00:00','00:00','10:27:in(USB) 18:32:out(USB) 18:32:(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-09-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-09-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 11:07 , organization_id => 1 , date => 2025-09-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-09-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:07","out_time":"18:32","duration":"7:25","late_by":"0:37","early_by":"00:00","status":2,"punch_records":"11:07:in(USB) 13:52:out(USB) 13:52:(USB) 18:32:in(USB) 18:32:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-09-05','11:07','18:32','7:25','0:37','00:00','11:07:in(USB) 13:52:out(USB) 13:52:(USB) 18:32:in(USB) 18:32:(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-10-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-10-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:09 , organization_id => 1 , date => 2025-10-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:13 , organization_id => 1 , date => 2025-10-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:09","out_time":"18:13","duration":"8:4","late_by":"00:00","early_by":"0:17","status":2,"punch_records":"10:09:in(USB) 10:09:(USB) 11:24:out(USB) 12:29:in(USB) 12:29:(USB) 12:55:out(USB) 13:05:in(USB) 14:12:out(USB) 14:12:(USB) 15:32:in(USB) 15:32:(USB) 16:32:out(USB) 18:13:in(USB) 18:13:(USB) ","overtime":"8:04","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-10-05','10:09','18:13','8:4','00:00','0:17','10:09:in(USB) 10:09:(USB) 11:24:out(USB) 12:29:in(USB) 12:29:(USB) 12:55:out(USB) 13:05:in(USB) 14:12:out(USB) 14:12:(USB) 15:32:in(USB) 15:32:(USB) 16:32:out(USB) 18:13:in(USB) 18:13:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-11-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-11-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-12-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-12-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:13 , organization_id => 1 , date => 2025-12-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:24 , organization_id => 1 , date => 2025-12-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:13","out_time":"18:24","duration":"8:11","late_by":"00:00","early_by":"0:6","status":2,"punch_records":"10:13:in(USB) 10:21:out(USB) 10:21:(USB) 10:39:in(USB) 10:47:out(USB) 10:47:(USB) 11:01:in(USB) 15:10:out(USB) 16:31:in(USB) 18:24:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-12-05','10:13','18:24','8:11','00:00','0:6','10:13:in(USB) 10:21:out(USB) 10:21:(USB) 10:39:in(USB) 10:47:out(USB) 10:47:(USB) 11:01:in(USB) 15:10:out(USB) 16:31:in(USB) 18:24:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-13 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-13' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:29 , organization_id => 1 , date => 2025-05-13  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:00 , organization_id => 1 , date => 2025-05-13  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:29","out_time":"18:00","duration":"7:31","late_by":"00:00","early_by":"0:30","status":2,"punch_records":"10:29:in(USB) 13:23:out(USB) 13:23:(USB) 13:44:in(USB) 13:44:(USB) 16:30:out(USB) 16:30:(USB) 18:00:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-13','10:29','18:00','7:31','00:00','0:30','10:29:in(USB) 13:23:out(USB) 13:23:(USB) 13:44:in(USB) 13:44:(USB) 16:30:out(USB) 16:30:(USB) 18:00:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-14 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-14' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-14  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:46 , organization_id => 1 , date => 2025-05-14  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:46","duration":"8:12","late_by":"0:4","early_by":"00:00","status":2,"punch_records":"10:34:in(USB) 10:57:out(USB) 10:57:(USB) 11:28:in(USB) 11:34:out(USB) 11:34:(USB) 13:20:in(USB) 13:20:(USB) 14:57:out(USB) 16:43:in(USB) 16:43:(USB) 17:46:out(USB) 18:46:in(USB) 18:46:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-14','10:34','18:46','8:12','0:4','00:00','10:34:in(USB) 10:57:out(USB) 10:57:(USB) 11:28:in(USB) 11:34:out(USB) 11:34:(USB) 13:20:in(USB) 13:20:(USB) 14:57:out(USB) 16:43:in(USB) 16:43:(USB) 17:46:out(USB) 18:46:in(USB) 18:46:(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-15 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-15' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:37 , organization_id => 1 , date => 2025-05-15  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:20 , organization_id => 1 , date => 2025-05-15  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:37","out_time":"18:20","duration":"7:43","late_by":"0:7","early_by":"0:10","status":2,"punch_records":"10:37:in(USB) 10:37:(USB) 11:17:out(USB) 11:17:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:19:(USB) 11:20:(USB) 12:46:in(USB) 14:16:out(USB) 14:16:(USB) 16:57:in(USB) 16:57:(USB) 18:17:out(USB) 18:20:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-15','10:37','18:20','7:43','0:7','0:10','10:37:in(USB) 10:37:(USB) 11:17:out(USB) 11:17:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:19:(USB) 11:20:(USB) 12:46:in(USB) 14:16:out(USB) 14:16:(USB) 16:57:in(USB) 16:57:(USB) 18:17:out(USB) 18:20:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-16 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-16' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:51 , organization_id => 1 , date => 2025-05-16  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 15:54 , organization_id => 1 , date => 2025-05-16  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:51","out_time":"15:54","duration":"5:3","late_by":"0:21","early_by":"2:36","status":2,"punch_records":"10:51:in(USB) 11:05:out(USB) 11:05:(USB) 11:12:in(USB) 11:12:(USB) 13:11:out(USB) 14:22:in(USB) 14:22:(USB) 14:34:out(USB) 15:54:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-16','10:51','15:54','5:3','0:21','2:36','10:51:in(USB) 11:05:out(USB) 11:05:(USB) 11:12:in(USB) 11:12:(USB) 13:11:out(USB) 14:22:in(USB) 14:22:(USB) 14:34:out(USB) 15:54:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-17 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-17' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:32 , organization_id => 1 , date => 2025-05-17  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-17' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:38 , organization_id => 1 , date => 2025-05-17  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:32","out_time":"18:38","duration":"8:6","late_by":"0:2","early_by":"00:00","status":2,"punch_records":"10:32:in(USB) 10:32:(USB) 11:29:out(USB) 13:15:in(USB) 15:08:out(USB) 18:18:in(USB) 18:38:out(USB) ","overtime":"8:06","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-17','10:32','18:38','8:6','0:2','00:00','10:32:in(USB) 10:32:(USB) 11:29:out(USB) 13:15:in(USB) 15:08:out(USB) 18:18:in(USB) 18:38:out(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-18 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-18' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-19 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-19' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-19  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-05-19  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:32","duration":"7:58","late_by":"0:4","early_by":"00:00","status":2,"punch_records":"10:34:in(USB) 10:34:(USB) 10:34:(USB) 10:40:out(USB) 10:56:in(USB) 12:06:out(USB) 12:20:in(USB) 12:32:out(USB) 16:57:in(USB) 17:07:out(USB) 18:32:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-19','10:34','18:32','7:58','0:4','00:00','10:34:in(USB) 10:34:(USB) 10:34:(USB) 10:40:out(USB) 10:56:in(USB) 12:06:out(USB) 12:20:in(USB) 12:32:out(USB) 16:57:in(USB) 17:07:out(USB) 18:32:in(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-20 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-20' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:44 , organization_id => 1 , date => 2025-05-20  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 17:11 , organization_id => 1 , date => 2025-05-20  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:44","out_time":"17:11","duration":"6:27","late_by":"0:14","early_by":"1:19","status":2,"punch_records":"10:44:in(USB) 11:08:out(USB) 12:16:in(USB) 13:41:out(USB) 16:15:in(USB) 16:15:(USB) 17:11:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-20','10:44','17:11','6:27','0:14','1:19','10:44:in(USB) 11:08:out(USB) 12:16:in(USB) 13:41:out(USB) 16:15:in(USB) 16:15:(USB) 17:11:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-21 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-21' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-21  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-21  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:28","duration":"7:54","late_by":"0:4","early_by":"0:2","status":2,"punch_records":"10:34:in(TD) 10:47:out(USB) 10:47:(USB) 13:39:in(USB) 16:12:out(USB) 16:50:in(USB) 18:28:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-21','10:34','18:28','7:54','0:4','0:2','10:34:in(TD) 10:47:out(USB) 10:47:(USB) 13:39:in(USB) 16:12:out(USB) 16:50:in(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-22 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-22' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-22  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-22  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:28","duration":"7:54","late_by":"0:4","early_by":"0:2","status":2,"punch_records":"10:34:in(USB) 10:34:(USB) 15:48:out(USB) 18:24:in(USB) 18:24:(USB) 18:28:(USB) 18:28:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-22','10:34','18:28','7:54','0:4','0:2','10:34:in(USB) 10:34:(USB) 15:48:out(USB) 18:24:in(USB) 18:24:(USB) 18:28:(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-23 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-23' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:29 , organization_id => 1 , date => 2025-05-23  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-23  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:29","out_time":"18:28","duration":"7:59","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:29:in(USB) 10:36:out(USB) 10:36:(USB) 12:21:in(USB) 13:21:out(USB) 13:50:in(USB) 14:11:out(USB) 16:26:in(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-23','10:29','18:28','7:59','00:00','0:2','10:29:in(USB) 10:36:out(USB) 10:36:(USB) 12:21:in(USB) 13:21:out(USB) 13:50:in(USB) 14:11:out(USB) 16:26:in(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-24 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-24' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:14 , organization_id => 1 , date => 2025-05-24  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:29 , organization_id => 1 , date => 2025-05-24  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:14","out_time":"18:29","duration":"8:15","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:14:in(USB) 10:22:out(USB) 13:42:in(USB) 16:29:out(USB) 17:51:in(USB) 18:14:out(USB) 18:29:in(USB) ","overtime":"8:15","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-24','10:14','18:29','8:15','00:00','0:1','10:14:in(USB) 10:22:out(USB) 13:42:in(USB) 16:29:out(USB) 17:51:in(USB) 18:14:out(USB) 18:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-25 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-25' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-26 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-26' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:26 , organization_id => 1 , date => 2025-05-26  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-05-26  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:26","out_time":"18:32","duration":"8:6","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:26:in(USB) 10:35:out(USB) 10:35:(USB) 10:40:(USB) 10:43:in(USB) 13:41:out(USB) 13:58:in(USB) 14:20:out(USB) 15:11:in(USB) 17:01:out(USB) 17:39:in(USB) 17:52:out(USB) 17:52:(USB) 18:29:in(USB) 18:32:(USB) 18:32:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-26','10:26','18:32','8:6','00:00','00:00','10:26:in(USB) 10:35:out(USB) 10:35:(USB) 10:40:(USB) 10:43:in(USB) 13:41:out(USB) 13:58:in(USB) 14:20:out(USB) 15:11:in(USB) 17:01:out(USB) 17:39:in(USB) 17:52:out(USB) 17:52:(USB) 18:29:in(USB) 18:32:(USB) 18:32:(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-27 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-27' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:27 , organization_id => 1 , date => 2025-05-27  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 14:28 , organization_id => 1 , date => 2025-05-27  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:27","out_time":"14:28","duration":"4:1","late_by":"00:00","early_by":"4:2","status":2,"punch_records":"10:27:in(USB) 13:26:out(USB) 14:28:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-27','10:27','14:28','4:1','00:00','4:2','10:27:in(USB) 13:26:out(USB) 14:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-28 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-28' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-28  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:34 , organization_id => 1 , date => 2025-05-28  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:34","duration":"8:0","late_by":"0:4","early_by":"00:00","status":2,"punch_records":"10:34:in(USB) 11:56:out(USB) 15:00:in(USB) 15:01:(USB) 16:26:out(USB) 17:34:in(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-28','10:34','18:34','8:0','0:4','00:00','10:34:in(USB) 11:56:out(USB) 15:00:in(USB) 15:01:(USB) 16:26:out(USB) 17:34:in(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-29 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-29' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:29 , organization_id => 1 , date => 2025-05-29  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 14:19 , organization_id => 1 , date => 2025-05-29  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:29","out_time":"14:19","duration":"3:50","late_by":"00:00","early_by":"4:11","status":2,"punch_records":"10:29:in(USB) 10:29:(USB) 11:35:out(USB) 11:41:in(USB) 11:41:(USB) 11:41:(USB) 11:41:(USB) 11:43:(USB) 11:43:(USB) 11:44:(USB) 11:44:(USB) 11:50:out(USB) 11:51:(USB) 13:45:in(USB) 13:54:out(USB) 14:16:in(USB) 14:19:(USB) 14:19:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-29','10:29','14:19','3:50','00:00','4:11','10:29:in(USB) 10:29:(USB) 11:35:out(USB) 11:41:in(USB) 11:41:(USB) 11:41:(USB) 11:41:(USB) 11:43:(USB) 11:43:(USB) 11:44:(USB) 11:44:(USB) 11:50:out(USB) 11:51:(USB) 13:45:in(USB) 13:54:out(USB) 14:16:in(USB) 14:19:(USB) 14:19:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-30 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-30' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , in_time => 10:26 , organization_id => 1 , date => 2025-05-30  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-30  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 40 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:26","out_time":"18:28","duration":"8:2","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:26:in(USB) 12:06:out(USB) 12:06:(USB) 12:59:in(USB) 14:21:out(USB) 18:28:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-30','10:26','18:28','8:2','00:00','0:2','10:26:in(USB) 12:06:out(USB) 12:06:(USB) 12:59:in(USB) 14:21:out(USB) 18:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-01-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-01-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:54","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"09:54:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-01-05','9:54','','0:00','0:00','0:00','09:54:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-02-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-02-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"18:28","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"18:28:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-02-05','18:28','','0:00','0:00','0:00','18:28:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-03-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-03-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , in_time => 10:07 , organization_id => 1 , date => 2025-03-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , out_time => 13:51 , organization_id => 1 , date => 2025-03-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:07","out_time":"13:51","duration":"3:44","late_by":"00:00","early_by":"4:39","status":2,"punch_records":"10:07:in(USB) 13:51:out(USB) 13:51:(USB) ","overtime":"3:44","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-03-05','10:07','13:51','3:44','00:00','4:39','10:07:in(USB) 13:51:out(USB) 13:51:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-04-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-04-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , in_time => 10:09 , organization_id => 1 , date => 2025-05-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , out_time => 18:29 , organization_id => 1 , date => 2025-05-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:09","out_time":"18:29","duration":"8:20","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:09:in(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-05','10:09','18:29','8:20','00:00','0:1','10:09:in(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-06-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-06-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , in_time => 9:40 , organization_id => 1 , date => 2025-06-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , out_time => 18:29 , organization_id => 1 , date => 2025-06-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:40","out_time":"18:29","duration":"8:49","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:40:in(USB) 09:40:(USB) 18:29:out(USB) 18:29:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-06-05','9:40','18:29','8:49','00:00','0:1','09:40:in(USB) 09:40:(USB) 18:29:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-07-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-07-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , in_time => 9:53 , organization_id => 1 , date => 2025-07-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , out_time => 14:22 , organization_id => 1 , date => 2025-07-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:53","out_time":"14:22","duration":"4:29","late_by":"00:00","early_by":"4:8","status":2,"punch_records":"09:53:in(USB) 09:53:(USB) 14:22:out(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-07-05','9:53','14:22','4:29','00:00','4:8','09:53:in(USB) 09:53:(USB) 14:22:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-08-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-08-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , in_time => 10:13 , organization_id => 1 , date => 2025-08-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , out_time => 18:27 , organization_id => 1 , date => 2025-08-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:13","out_time":"18:27","duration":"8:14","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:13:in(USB) 10:13:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-08-05','10:13','18:27','8:14','00:00','0:3','10:13:in(USB) 10:13:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-09-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-09-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , in_time => 10:02 , organization_id => 1 , date => 2025-09-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , out_time => 18:27 , organization_id => 1 , date => 2025-09-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:02","out_time":"18:27","duration":"8:25","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:02:in(USB) 10:02:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-09-05','10:02','18:27','8:25','00:00','0:3','10:02:in(USB) 10:02:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-10-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-10-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , in_time => 10:14 , organization_id => 1 , date => 2025-10-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , out_time => 16:15 , organization_id => 1 , date => 2025-10-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:14","out_time":"16:15","duration":"6:1","late_by":"00:00","early_by":"2:15","status":2,"punch_records":"10:14:in(USB) 10:14:(USB) 13:53:out(USB) 13:53:(USB) 16:15:in(USB) ","overtime":"6:01","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-10-05','10:14','16:15','6:1','00:00','2:15','10:14:in(USB) 10:14:(USB) 13:53:out(USB) 13:53:(USB) 16:15:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-11-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-11-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-12-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-12-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , in_time => 10:28 , organization_id => 1 , date => 2025-12-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , out_time => 18:28 , organization_id => 1 , date => 2025-12-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:28","out_time":"18:28","duration":"8:0","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:28:in(USB) 10:28:(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-12-05','10:28','18:28','8:0','00:00','0:2','10:28:in(USB) 10:28:(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-13 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-13' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , in_time => 10:02 , organization_id => 1 , date => 2025-05-13  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , out_time => 18:27 , organization_id => 1 , date => 2025-05-13  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:02","out_time":"18:27","duration":"8:25","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:02:in(USB) 10:02:(USB) 16:44:out(USB) 18:27:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-13','10:02','18:27','8:25','00:00','0:3','10:02:in(USB) 10:02:(USB) 16:44:out(USB) 18:27:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-14 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-14' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , in_time => 10:18 , organization_id => 1 , date => 2025-05-14  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , out_time => 18:32 , organization_id => 1 , date => 2025-05-14  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:18","out_time":"18:32","duration":"8:14","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:18:in(USB) 10:18:(USB) 13:44:out(USB) 13:44:(USB) 18:32:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-14','10:18','18:32','8:14','00:00','00:00','10:18:in(USB) 10:18:(USB) 13:44:out(USB) 13:44:(USB) 18:32:in(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-15 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-15' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:37","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"10:37:in(USB) 10:37:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-15','10:37','','0:00','0:00','0:00','10:37:in(USB) 10:37:(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-16 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-16' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-16','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-17 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-17' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-18 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-18' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-19 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-19' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , in_time => 10:04 , organization_id => 1 , date => 2025-05-19  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , out_time => 18:29 , organization_id => 1 , date => 2025-05-19  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:04","out_time":"18:29","duration":"8:25","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:04:in(USB) 11:44:out(USB) 18:29:in(USB) 18:29:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-19','10:04','18:29','8:25','00:00','0:1','10:04:in(USB) 11:44:out(USB) 18:29:in(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-20 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-20' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:53","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"09:53:in(USB) 09:54:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-20','9:53','','0:00','0:00','0:00','09:53:in(USB) 09:54:(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-21 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-21' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-21 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-21 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-21')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-21') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-21','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-22 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-22' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-22 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-22 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-22')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-22') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-22','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-23 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-23' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , in_time => 9:59 , organization_id => 1 , date => 2025-05-23  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , out_time => 18:26 , organization_id => 1 , date => 2025-05-23  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:59","out_time":"18:26","duration":"8:27","late_by":"00:00","early_by":"0:4","status":2,"punch_records":"09:59:in(USB) 18:26:out(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-23','9:59','18:26','8:27','00:00','0:4','09:59:in(USB) 18:26:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-24 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-24' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-25 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-25' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-26 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-26' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-26 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-26 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-26')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-26') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-26','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-27 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-27' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-27 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-27 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-27')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-27') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-27','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-28 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-28' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-28 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-28 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-28')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-28') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-28','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-29 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-29' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-29 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-29 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-29')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-29') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-29','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-30 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-30' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-30 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-30 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-30')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-30') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 42 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-30','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-01-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-01-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , in_time => 10:16 , organization_id => 1 , date => 2025-01-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , out_time => 17:30 , organization_id => 1 , date => 2025-01-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:16","out_time":"17:30","duration":"7:14","late_by":"00:00","early_by":"1:0","status":2,"punch_records":"10:16:in(USB) 13:50:out(USB) 13:50:(USB) 17:30:in(USB) 17:30:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-01-05','10:16','17:30','7:14','00:00','1:0','10:16:in(USB) 13:50:out(USB) 13:50:(USB) 17:30:in(USB) 17:30:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-02-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-02-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"18:31","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"18:31:in(USB) 18:31:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-02-05','18:31','','0:00','0:00','0:00','18:31:in(USB) 18:31:(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-03-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-03-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , in_time => 13:04 , organization_id => 1 , date => 2025-03-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , out_time => 18:27 , organization_id => 1 , date => 2025-03-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:04","out_time":"18:27","duration":"5:23","late_by":"2:34","early_by":"0:3","status":2,"punch_records":"13:04:in(USB) 13:04:(USB) 14:45:out(USB) 14:45:(USB) 18:27:in(USB) 18:27:(USB) ","overtime":"5:23","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-03-05','13:04','18:27','5:23','2:34','0:3','13:04:in(USB) 13:04:(USB) 14:45:out(USB) 14:45:(USB) 18:27:in(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-04-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-04-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-05 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-05 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-05') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-06-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-06-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , in_time => 10:09 , organization_id => 1 , date => 2025-06-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-06-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:09","out_time":"18:29","duration":"8:20","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:09:in(USB) 18:29:out(USB) 18:29:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-06-05','10:09','18:29','8:20','00:00','0:1','10:09:in(USB) 18:29:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-07-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-07-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , in_time => 10:03 , organization_id => 1 , date => 2025-07-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , out_time => 18:52 , organization_id => 1 , date => 2025-07-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:03","out_time":"18:52","duration":"8:49","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:03:in(USB) 10:03:(USB) 18:52:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-07-05','10:03','18:52','8:49','00:00','00:00','10:03:in(USB) 10:03:(USB) 18:52:out(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-08-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-08-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , in_time => 10:02 , organization_id => 1 , date => 2025-08-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , out_time => 18:30 , organization_id => 1 , date => 2025-08-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:02","out_time":"18:30","duration":"8:28","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:02:in(USB) 14:08:out(USB) 18:30:in(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-08-05','10:02','18:30','8:28','00:00','00:00','10:02:in(USB) 14:08:out(USB) 18:30:in(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-09-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-09-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , in_time => 10:08 , organization_id => 1 , date => 2025-09-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , out_time => 18:28 , organization_id => 1 , date => 2025-09-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:08","out_time":"18:28","duration":"8:20","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:08:in(USB) 18:28:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-09-05','10:08','18:28','8:20','00:00','0:2','10:08:in(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-10-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-10-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , in_time => 10:16 , organization_id => 1 , date => 2025-10-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , out_time => 18:28 , organization_id => 1 , date => 2025-10-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:16","out_time":"18:28","duration":"8:12","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:16:in(USB) 10:16:(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"8:12","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-10-05','10:16','18:28','8:12','00:00','0:2','10:16:in(USB) 10:16:(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-11-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-11-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-12-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-12-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , in_time => 10:04 , organization_id => 1 , date => 2025-12-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , out_time => 18:27 , organization_id => 1 , date => 2025-12-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:04","out_time":"18:27","duration":"8:23","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:04:in(USB) 18:27:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-12-05','10:04','18:27','8:23','00:00','0:3','10:04:in(USB) 18:27:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-13 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-13' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , in_time => 10:08 , organization_id => 1 , date => 2025-05-13  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-05-13  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:08","out_time":"18:29","duration":"8:21","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:08:in(USB) 10:09:(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-13','10:08','18:29','8:21','00:00','0:1','10:08:in(USB) 10:09:(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-14 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-14' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , in_time => 10:03 , organization_id => 1 , date => 2025-05-14  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , out_time => 18:35 , organization_id => 1 , date => 2025-05-14  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:03","out_time":"18:35","duration":"8:32","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:03:in(USB) 10:03:(USB) 18:35:out(USB) 18:35:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-14','10:03','18:35','8:32','00:00','00:00','10:03:in(USB) 10:03:(USB) 18:35:out(USB) 18:35:(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-15 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-15' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , in_time => 10:21 , organization_id => 1 , date => 2025-05-15  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , out_time => 18:30 , organization_id => 1 , date => 2025-05-15  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:21","out_time":"18:30","duration":"8:9","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:21:in(USB) 10:21:(USB) 18:30:out(USB) 18:30:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-15','10:21','18:30','8:9','00:00','00:00','10:21:in(USB) 10:21:(USB) 18:30:out(USB) 18:30:(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-16 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-16' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-16','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-17 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-17' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-18 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-18' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-19 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-19' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-19 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-19 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-19')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-19') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-19','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-20 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-20' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-20 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-20 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-20')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-20') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-20','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-21 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-21' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-21 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-21 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-21')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-21') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-21','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-22 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-22' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-22 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-22 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-22')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-22') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-22','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-23 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-23' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-23 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-23 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-23')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-23') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-23','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-24 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-24' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-25 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-25' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-26 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-26' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , in_time => 10:33 , organization_id => 1 , date => 2025-05-26  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-05-26  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:33","out_time":"18:29","duration":"7:56","late_by":"0:3","early_by":"0:1","status":2,"punch_records":"10:33:in(USB) 18:29:out(USB) 18:29:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-26','10:33','18:29','7:56','0:3','0:1','10:33:in(USB) 18:29:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-27 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-27' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , in_time => 10:04 , organization_id => 1 , date => 2025-05-27  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , out_time => 18:28 , organization_id => 1 , date => 2025-05-27  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:04","out_time":"18:28","duration":"8:24","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:04:in(USB) 13:54:out(USB) 13:54:(USB) 18:28:in(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-27','10:04','18:28','8:24','00:00','0:2','10:04:in(USB) 13:54:out(USB) 13:54:(USB) 18:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-28 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-28' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , in_time => 10:06 , organization_id => 1 , date => 2025-05-28  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , out_time => 18:30 , organization_id => 1 , date => 2025-05-28  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:06","out_time":"18:30","duration":"8:24","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:06:in(USB) 10:07:(USB) 18:30:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-28','10:06','18:30','8:24','00:00','00:00','10:06:in(USB) 10:07:(USB) 18:30:out(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-29 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-29' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , in_time => 10:00 , organization_id => 1 , date => 2025-05-29  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-05-29  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:00","out_time":"18:29","duration":"8:29","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:00:in(USB) 10:01:(USB) 14:02:out(USB) 18:29:in(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-29','10:00','18:29','8:29','00:00','0:1','10:00:in(USB) 10:01:(USB) 14:02:out(USB) 18:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-30 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-30' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , in_time => 10:12 , organization_id => 1 , date => 2025-05-30  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 , out_time => 18:27 , organization_id => 1 , date => 2025-05-30  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 27 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:12","out_time":"18:27","duration":"8:15","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:12:in(USB) 10:12:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-30','10:12','18:27','8:15','00:00','0:3','10:12:in(USB) 10:12:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-01-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-01-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 9:22 , organization_id => 1 , date => 2025-01-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 17:29 , organization_id => 1 , date => 2025-01-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:22","out_time":"17:29","duration":"8:7","late_by":"00:00","early_by":"1:1","status":2,"punch_records":"09:22:in(USB) 17:29:out(USB) 17:29:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-01-05','9:22','17:29','8:7','00:00','1:1','09:22:in(USB) 17:29:out(USB) 17:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-02-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-02-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 9:34 , organization_id => 1 , date => 2025-02-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 18:32 , organization_id => 1 , date => 2025-02-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:34","out_time":"18:32","duration":"8:58","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:34:in(USB) 18:32:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-02-05','9:34','18:32','8:58','00:00','00:00','09:34:in(USB) 18:32:out(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-03-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-03-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 9:27 , organization_id => 1 , date => 2025-03-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 18:27 , organization_id => 1 , date => 2025-03-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:27","out_time":"18:27","duration":"9:0","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"09:27:in(USB) 18:26:out(USB) 18:27:(USB) ","overtime":"8:59","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-03-05','9:27','18:27','9:0','00:00','0:3','09:27:in(USB) 18:26:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-04-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-04-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 8:57 , organization_id => 1 , date => 2025-05-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 18:30 , organization_id => 1 , date => 2025-05-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"8:57","out_time":"18:30","duration":"9:33","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"08:57:in(USB) 09:27:out(USB) 09:56:in(USB) 17:14:out(USB) 17:14:(USB) 18:30:in(USB) 18:30:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-05','8:57','18:30','9:33','00:00','00:00','08:57:in(USB) 09:27:out(USB) 09:56:in(USB) 17:14:out(USB) 17:14:(USB) 18:30:in(USB) 18:30:(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-06-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-06-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 9:20 , organization_id => 1 , date => 2025-06-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-06-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:20","out_time":"18:29","duration":"9:9","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:20:in(USB) 09:20:(USB) 09:50:out(USB) 18:29:in(USB) 18:29:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-06-05','9:20','18:29','9:9','00:00','0:1','09:20:in(USB) 09:20:(USB) 09:50:out(USB) 18:29:in(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-07-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-07-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 9:21 , organization_id => 1 , date => 2025-07-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 18:51 , organization_id => 1 , date => 2025-07-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:21","out_time":"18:51","duration":"9:30","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:21:in(USB) 09:21:(USB) 09:54:out(USB) 13:54:in(USB) 18:51:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-07-05','9:21','18:51','9:30','00:00','00:00','09:21:in(USB) 09:21:(USB) 09:54:out(USB) 13:54:in(USB) 18:51:out(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-08-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-08-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 9:26 , organization_id => 1 , date => 2025-08-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-08-05  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:26","out_time":"18:29","duration":"9:3","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:26:in(USB) 09:57:out(USB) 16:47:in(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-08-05','9:26','18:29','9:3','00:00','0:1','09:26:in(USB) 09:57:out(USB) 16:47:in(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-09-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-09-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-09-05 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-09-05 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-09-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-09-05') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-09-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-10-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-10-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-10-05 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-10-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-11-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-11-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-12-05 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-12-05' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-12-05 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-12-05 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-12-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-12-05') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-12-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-13 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-13' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-13 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-13 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-13')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-13') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-13','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-14 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-14' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-14 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-14 , organization => 1 

2025-07-14T13:28:31+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-14')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-14') IS NOT NULL 

2025-07-14T13:28:31+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-14','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-15 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-15' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 9:12 , organization_id => 1 , date => 2025-05-15  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 18:30 , organization_id => 1 , date => 2025-05-15  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:12","out_time":"18:30","duration":"9:18","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:12:in(USB) 09:50:out(USB) 18:30:in(USB) 18:30:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-15','9:12','18:30','9:18','00:00','00:00','09:12:in(USB) 09:50:out(USB) 18:30:in(USB) 18:30:(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-16 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-16' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 9:16 , organization_id => 1 , date => 2025-05-16  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 18:34 , organization_id => 1 , date => 2025-05-16  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:16","out_time":"18:34","duration":"9:18","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:16:in(USB) 09:16:(USB) 09:56:out(USB) 09:56:(USB) 16:32:in(USB) 16:32:(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-16','9:16','18:34','9:18','00:00','00:00','09:16:in(USB) 09:16:(USB) 09:56:out(USB) 09:56:(USB) 16:32:in(USB) 16:32:(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-17 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-17' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 9:17 , organization_id => 1 , date => 2025-05-17  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-05-17  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-17' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:17","out_time":"18:29","duration":"9:12","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:17:in(USB) 18:28:out(USB) 18:29:(USB) ","overtime":"9:11","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-17','9:17','18:29','9:12','00:00','0:1','09:17:in(USB) 18:28:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-18 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-18' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-19 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-19' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 8:58 , organization_id => 1 , date => 2025-05-19  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 18:58 , organization_id => 1 , date => 2025-05-19  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"8:58","out_time":"18:58","duration":"10:0","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"08:58:in(USB) 08:58:(USB) 09:32:out(USB) 09:32:(USB) 18:58:in(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-19','8:58','18:58','10:0','00:00','00:00','08:58:in(USB) 08:58:(USB) 09:32:out(USB) 09:32:(USB) 18:58:in(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-20 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-20' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 9:17 , organization_id => 1 , date => 2025-05-20  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-05-20  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:17","out_time":"18:29","duration":"9:12","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:17:in(USB) 09:50:out(USB) 18:29:in(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-20','9:17','18:29','9:12','00:00','0:1','09:17:in(USB) 09:50:out(USB) 18:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-21 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-21' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 9:12 , organization_id => 1 , date => 2025-05-21  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 9:42 , organization_id => 1 , date => 2025-05-21  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:12","out_time":"9:42","duration":"0:30","late_by":"00:00","early_by":"8:48","status":2,"punch_records":"09:12:in(USB) 09:42:out(USB) 09:42:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-21','9:12','9:42','0:30','00:00','8:48','09:12:in(USB) 09:42:out(USB) 09:42:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-22 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-22' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 9:24 , organization_id => 1 , date => 2025-05-22  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-05-22  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:24","out_time":"18:29","duration":"9:5","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:24:in(USB) 13:45:out(USB) 14:11:in(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-22','9:24','18:29','9:5','00:00','0:1','09:24:in(USB) 13:45:out(USB) 14:11:in(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-23 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-23' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 9:25 , organization_id => 1 , date => 2025-05-23  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 18:28 , organization_id => 1 , date => 2025-05-23  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:25","out_time":"18:28","duration":"9:3","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"09:25:in(USB) 09:25:(USB) 09:59:out(USB) 14:07:in(USB) 18:28:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-23','9:25','18:28','9:3','00:00','0:2','09:25:in(USB) 09:25:(USB) 09:59:out(USB) 14:07:in(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-24 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-24' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 9:19 , organization_id => 1 , date => 2025-05-24  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 18:28 , organization_id => 1 , date => 2025-05-24  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:19","out_time":"18:28","duration":"9:9","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"09:19:in(USB) 09:55:out(USB) 18:28:in(USB) ","overtime":"9:09","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-24','9:19','18:28','9:9','00:00','0:2','09:19:in(USB) 09:55:out(USB) 18:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-25 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-25' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T13:28:31+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T13:28:31+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-26 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-26' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:14","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"09:14:in(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-26','9:14','','0:00','0:00','0:00','09:14:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-27 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-27' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 9:12 , organization_id => 1 , date => 2025-05-27  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 9:38 , organization_id => 1 , date => 2025-05-27  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:12","out_time":"9:38","duration":"0:26","late_by":"00:00","early_by":"8:52","status":2,"punch_records":"09:12:in(USB) 09:38:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-27','9:12','9:38','0:26','00:00','8:52','09:12:in(USB) 09:38:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-28 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-28' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 9:24 , organization_id => 1 , date => 2025-05-28  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 18:30 , organization_id => 1 , date => 2025-05-28  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:24","out_time":"18:30","duration":"9:6","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:24:in(USB) 09:24:(USB) 09:50:out(USB) 14:03:in(USB) 18:30:out(USB) 18:30:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-28','9:24','18:30','9:6','00:00','00:00','09:24:in(USB) 09:24:(USB) 09:50:out(USB) 14:03:in(USB) 18:30:out(USB) 18:30:(USB) ',2,'') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-29 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-29' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 13:42 , organization_id => 1 , date => 2025-05-29  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 18:28 , organization_id => 1 , date => 2025-05-29  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:42","out_time":"18:28","duration":"4:46","late_by":"3:12","early_by":"0:2","status":2,"punch_records":"13:42:in(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-29','13:42','18:28','4:46','3:12','0:2','13:42:in(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T13:28:31+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T13:28:31+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T13:28:31+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-30 

2025-07-14T13:28:31+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-30' 

2025-07-14T13:28:31+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T13:28:31+02:00 :: mehod inside checkInTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , in_time => 9:29 , organization_id => 1 , date => 2025-05-30  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 , out_time => 18:27 , organization_id => 1 , date => 2025-05-30  

2025-07-14T13:28:31+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T13:28:31+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T13:28:31+02:00 :: requested param :: user_id => 23 

2025-07-14T13:28:31+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T13:28:31+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T13:28:31+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:29","out_time":"18:27","duration":"8:58","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"09:29:in(USB) 09:43:out(USB) 13:53:in(USB) 13:53:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T13:28:31+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-30','9:29','18:27','8:58','00:00','0:3','09:29:in(USB) 09:43:out(USB) 13:53:in(USB) 13:53:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T13:28:31+02:00 :: Insert into attendance successful 

2025-07-14T13:28:31+02:00 :: Attendance Inserted 

 ============ End Of Script ================== 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceData 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-01-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-01-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 9:39 , organization_id => 1 , date => 2025-01-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 17:22 , organization_id => 1 , date => 2025-01-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:39","out_time":"17:22","duration":"7:43","late_by":"00:00","early_by":"1:8","status":2,"punch_records":"09:39:in(USB) 09:39:(USB) 14:58:out(USB) 17:22:in(USB) 17:22:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-01-05','9:39','17:22','7:43','00:00','1:8','09:39:in(USB) 09:39:(USB) 14:58:out(USB) 17:22:in(USB) 17:22:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-02-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-02-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:57 , organization_id => 1 , date => 2025-02-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 18:20 , organization_id => 1 , date => 2025-02-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:57","out_time":"18:20","duration":"7:23","late_by":"0:27","early_by":"0:10","status":2,"punch_records":"10:57:in(USB) 10:57:(USB) 18:20:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-02-05','10:57','18:20','7:23','0:27','0:10','10:57:in(USB) 10:57:(USB) 18:20:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-03-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-03-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:22 , organization_id => 1 , date => 2025-03-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 17:56 , organization_id => 1 , date => 2025-03-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:22","out_time":"17:56","duration":"7:34","late_by":"00:00","early_by":"0:34","status":2,"punch_records":"10:22:in(USB) 10:22:(USB) 17:56:out(USB) 17:56:(USB) ","overtime":"7:34","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-03-05','10:22','17:56','7:34','00:00','0:34','10:22:in(USB) 10:22:(USB) 17:56:out(USB) 17:56:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-04-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-04-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:31 , organization_id => 1 , date => 2025-05-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 17:43 , organization_id => 1 , date => 2025-05-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:31","out_time":"17:43","duration":"7:12","late_by":"0:1","early_by":"0:47","status":2,"punch_records":"10:31:in(USB) 10:31:(USB) 17:43:out(USB) 17:43:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-05','10:31','17:43','7:12','0:1','0:47','10:31:in(USB) 10:31:(USB) 17:43:out(USB) 17:43:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-06-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-06-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:25 , organization_id => 1 , date => 2025-06-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 18:18 , organization_id => 1 , date => 2025-06-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:25","out_time":"18:18","duration":"7:53","late_by":"00:00","early_by":"0:12","status":2,"punch_records":"10:25:in(USB) 14:08:out(USB) 18:18:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-06-05','10:25','18:18','7:53','00:00','0:12','10:25:in(USB) 14:08:out(USB) 18:18:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-07-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-07-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-07-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-07-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-08-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-08-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:47 , organization_id => 1 , date => 2025-08-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 17:45 , organization_id => 1 , date => 2025-08-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:47","out_time":"17:45","duration":"6:58","late_by":"0:17","early_by":"0:45","status":2,"punch_records":"10:47:in(USB) 10:47:(USB) 13:51:out(USB) 13:51:(USB) 14:55:in(USB) 14:55:(USB) 17:45:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-08-05','10:47','17:45','6:58','0:17','0:45','10:47:in(USB) 10:47:(USB) 13:51:out(USB) 13:51:(USB) 14:55:in(USB) 14:55:(USB) 17:45:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-09-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-09-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:35 , organization_id => 1 , date => 2025-09-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 17:49 , organization_id => 1 , date => 2025-09-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:35","out_time":"17:49","duration":"7:14","late_by":"0:5","early_by":"0:41","status":2,"punch_records":"10:35:in(USB) 10:35:(USB) 14:29:out(USB) 17:49:in(USB) 17:49:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-09-05','10:35','17:49','7:14','0:5','0:41','10:35:in(USB) 10:35:(USB) 14:29:out(USB) 17:49:in(USB) 17:49:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-10-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-10-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 11:11 , organization_id => 1 , date => 2025-10-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 16:15 , organization_id => 1 , date => 2025-10-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:11","out_time":"16:15","duration":"5:4","late_by":"0:41","early_by":"2:15","status":2,"punch_records":"11:11:in(USB) 11:56:out(USB) 13:14:in(USB) 13:14:(USB) 13:23:out(USB) 14:24:in(USB) 16:15:out(USB) ","overtime":"5:04","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-10-05','11:11','16:15','5:4','0:41','2:15','11:11:in(USB) 11:56:out(USB) 13:14:in(USB) 13:14:(USB) 13:23:out(USB) 14:24:in(USB) 16:15:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-11-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-11-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-12-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-12-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:30 , organization_id => 1 , date => 2025-12-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 18:07 , organization_id => 1 , date => 2025-12-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:30","out_time":"18:07","duration":"7:37","late_by":"00:00","early_by":"0:23","status":2,"punch_records":"10:30:in(USB) 18:04:out(USB) 18:06:(USB) 18:07:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-12-05','10:30','18:07','7:37','00:00','0:23','10:30:in(USB) 18:04:out(USB) 18:06:(USB) 18:07:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-13 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-13' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:30 , organization_id => 1 , date => 2025-05-13  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 17:44 , organization_id => 1 , date => 2025-05-13  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:30","out_time":"17:44","duration":"7:14","late_by":"00:00","early_by":"0:46","status":2,"punch_records":"10:30:in(USB) 17:44:out(USB) 17:44:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-13','10:30','17:44','7:14','00:00','0:46','10:30:in(USB) 17:44:out(USB) 17:44:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-14 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-14' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:21 , organization_id => 1 , date => 2025-05-14  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 17:56 , organization_id => 1 , date => 2025-05-14  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:21","out_time":"17:56","duration":"7:35","late_by":"00:00","early_by":"0:34","status":2,"punch_records":"10:21:in(USB) 10:21:(USB) 17:56:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-14','10:21','17:56','7:35','00:00','0:34','10:21:in(USB) 10:21:(USB) 17:56:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-15 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-15' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:15 , organization_id => 1 , date => 2025-05-15  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 18:00 , organization_id => 1 , date => 2025-05-15  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:15","out_time":"18:00","duration":"7:45","late_by":"00:00","early_by":"0:30","status":2,"punch_records":"10:15:in(USB) 10:15:(USB) 18:00:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-15','10:15','18:00','7:45','00:00','0:30','10:15:in(USB) 10:15:(USB) 18:00:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-16 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-16' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:28 , organization_id => 1 , date => 2025-05-16  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 17:02 , organization_id => 1 , date => 2025-05-16  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:28","out_time":"17:02","duration":"6:34","late_by":"00:00","early_by":"1:28","status":2,"punch_records":"10:28:in(USB) 11:20:out(USB) 11:21:(USB) 14:57:in(USB) 17:02:out(USB) 17:02:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-16','10:28','17:02','6:34','00:00','1:28','10:28:in(USB) 11:20:out(USB) 11:21:(USB) 14:57:in(USB) 17:02:out(USB) 17:02:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-17 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-17' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:30 , organization_id => 1 , date => 2025-05-17  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 17:49 , organization_id => 1 , date => 2025-05-17  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-17' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:30","out_time":"17:49","duration":"7:19","late_by":"00:00","early_by":"0:41","status":2,"punch_records":"10:30:in(USB) 10:30:(USB) 10:30:(USB) 17:49:out(USB) ","overtime":"7:19","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-17','10:30','17:49','7:19','00:00','0:41','10:30:in(USB) 10:30:(USB) 10:30:(USB) 17:49:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-18 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-18' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-19 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-19' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 11:15 , organization_id => 1 , date => 2025-05-19  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 18:06 , organization_id => 1 , date => 2025-05-19  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:15","out_time":"18:06","duration":"6:51","late_by":"0:45","early_by":"0:24","status":2,"punch_records":"11:15:in(USB) 13:49:out(USB) 13:56:in(USB) 18:06:out(USB) 18:06:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-19','11:15','18:06','6:51','0:45','0:24','11:15:in(USB) 13:49:out(USB) 13:56:in(USB) 18:06:out(USB) 18:06:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-20 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-20' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:28 , organization_id => 1 , date => 2025-05-20  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 17:57 , organization_id => 1 , date => 2025-05-20  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:28","out_time":"17:57","duration":"7:29","late_by":"00:00","early_by":"0:33","status":2,"punch_records":"10:28:in(USB) 17:56:out(USB) 17:57:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-20','10:28','17:57','7:29','00:00','0:33','10:28:in(USB) 17:56:out(USB) 17:57:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-21 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-21' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:24 , organization_id => 1 , date => 2025-05-21  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 17:47 , organization_id => 1 , date => 2025-05-21  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:24","out_time":"17:47","duration":"7:23","late_by":"00:00","early_by":"0:43","status":2,"punch_records":"10:24:in(USB) 10:24:(USB) 17:47:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-21','10:24','17:47','7:23','00:00','0:43','10:24:in(USB) 10:24:(USB) 17:47:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-22 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-22' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 11:07 , organization_id => 1 , date => 2025-05-22  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 19:52 , organization_id => 1 , date => 2025-05-22  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:07","out_time":"19:52","duration":"8:45","late_by":"0:37","early_by":"00:00","status":2,"punch_records":"11:07:in(USB) 11:07:(USB) 11:07:(USB) 19:52:out(USB) 19:52:(USB) ","overtime":"1:22","user_id":"2","user_biometric_id":"1","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-22','11:07','19:52','8:45','0:37','00:00','11:07:in(USB) 11:07:(USB) 11:07:(USB) 19:52:out(USB) 19:52:(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-23 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-23' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:49 , organization_id => 1 , date => 2025-05-23  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 18:33 , organization_id => 1 , date => 2025-05-23  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:49","out_time":"18:33","duration":"7:44","late_by":"0:19","early_by":"00:00","status":2,"punch_records":"10:49:in(USB) 10:49:(USB) 10:49:(USB) 10:49:(USB) 18:33:out(USB) 18:33:(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-23','10:49','18:33','7:44','0:19','00:00','10:49:in(USB) 10:49:(USB) 10:49:(USB) 10:49:(USB) 18:33:out(USB) 18:33:(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-24 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-24' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:32 , organization_id => 1 , date => 2025-05-24  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 18:28 , organization_id => 1 , date => 2025-05-24  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:32","out_time":"18:28","duration":"7:56","late_by":"0:2","early_by":"0:2","status":2,"punch_records":"10:32:in(USB) 10:32:(USB) 18:28:out(USB) ","overtime":"7:56","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-24','10:32','18:28','7:56','0:2','0:2','10:32:in(USB) 10:32:(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-25 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-25' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-26 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-26' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:40 , organization_id => 1 , date => 2025-05-26  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 16:27 , organization_id => 1 , date => 2025-05-26  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:40","out_time":"16:27","duration":"5:47","late_by":"0:10","early_by":"2:3","status":2,"punch_records":"10:40:in(USB) 10:40:(USB) 16:27:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-26','10:40','16:27','5:47','0:10','2:3','10:40:in(USB) 10:40:(USB) 16:27:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-27 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-27' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:33 , organization_id => 1 , date => 2025-05-27  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 17:48 , organization_id => 1 , date => 2025-05-27  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:33","out_time":"17:48","duration":"7:15","late_by":"0:3","early_by":"0:42","status":2,"punch_records":"10:33:in(USB) 14:17:out(USB) 17:48:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-27','10:33','17:48','7:15','0:3','0:42','10:33:in(USB) 14:17:out(USB) 17:48:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-28 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-28' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 11:02 , organization_id => 1 , date => 2025-05-28  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 17:54 , organization_id => 1 , date => 2025-05-28  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:02","out_time":"17:54","duration":"6:52","late_by":"0:32","early_by":"0:36","status":2,"punch_records":"11:02:in(USB) 11:02:(USB) 12:43:out(USB) 17:54:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-28','11:02','17:54','6:52','0:32','0:36','11:02:in(USB) 11:02:(USB) 12:43:out(USB) 17:54:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-29 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-29' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 10:32 , organization_id => 1 , date => 2025-05-29  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 17:32 , organization_id => 1 , date => 2025-05-29  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:32","out_time":"17:32","duration":"7:0","late_by":"0:2","early_by":"0:58","status":2,"punch_records":"10:32:in(USB) 10:32:(USB) 14:19:out(USB) 17:32:in(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-29','10:32','17:32','7:0','0:2','0:58','10:32:in(USB) 10:32:(USB) 14:19:out(USB) 17:32:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '1' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"2","user_biometric_id":"1","emp_name":"Shilpa","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , biometric_id => 1 , date => 2025-05-30 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '2' AND `user_biometric_id` = '1' AND attendance_date = '2025-05-30' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , in_time => 11:01 , organization_id => 1 , date => 2025-05-30  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 , out_time => 17:48 , organization_id => 1 , date => 2025-05-30  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 2 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '2' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"1","employee_name":"Shilpa","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:01","out_time":"17:48","duration":"6:47","late_by":"0:31","early_by":"0:42","status":2,"punch_records":"11:01:in(USB) 17:48:out(USB) ","overtime":"0:00","user_id":"2","user_biometric_id":"1","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (2,1,'2025-05-30','11:01','17:48','6:47','0:31','0:42','11:01:in(USB) 17:48:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-01-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-01-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , in_time => 10:35 , organization_id => 1 , date => 2025-01-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , out_time => 16:10 , organization_id => 1 , date => 2025-01-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:35","out_time":"16:10","duration":"5:35","late_by":"0:5","early_by":"2:20","status":2,"punch_records":"10:35:in(USB) 10:51:out(USB) 11:25:in(USB) 14:00:out(USB) 14:56:in(USB) 16:10:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-01-05','10:35','16:10','5:35','0:5','2:20','10:35:in(USB) 10:51:out(USB) 11:25:in(USB) 14:00:out(USB) 14:56:in(USB) 16:10:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-02-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-02-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , in_time => 11:28 , organization_id => 1 , date => 2025-02-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , out_time => 16:13 , organization_id => 1 , date => 2025-02-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:28","out_time":"16:13","duration":"4:45","late_by":"0:58","early_by":"2:17","status":2,"punch_records":"11:28:in(USB) 11:37:out(USB) 11:56:in(USB) 13:22:out(USB) 14:53:in(USB) 16:13:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-02-05','11:28','16:13','4:45','0:58','2:17','11:28:in(USB) 11:37:out(USB) 11:56:in(USB) 13:22:out(USB) 14:53:in(USB) 16:13:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-03-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-03-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , in_time => 15:10 , organization_id => 1 , date => 2025-03-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , out_time => 17:39 , organization_id => 1 , date => 2025-03-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"15:10","out_time":"17:39","duration":"2:29","late_by":"4:40","early_by":"0:51","status":2,"punch_records":"15:10:in(USB) 15:29:out(USB) 16:10:in(USB) 16:42:out(USB) 17:05:in(USB) 17:05:(USB) 17:24:out(USB) 17:24:(USB) 17:39:in(USB) ","overtime":"2:29","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-03-05','15:10','17:39','2:29','4:40','0:51','15:10:in(USB) 15:29:out(USB) 16:10:in(USB) 16:42:out(USB) 17:05:in(USB) 17:05:(USB) 17:24:out(USB) 17:24:(USB) 17:39:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-04-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-04-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-05 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-05') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-06-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-06-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-06-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-06-05 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-06-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-06-05') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-06-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-07-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-07-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-07-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-07-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-08-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-08-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-08-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-08-05 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-08-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-08-05') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-08-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-09-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-09-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , in_time => 11:11 , organization_id => 1 , date => 2025-09-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , out_time => 15:03 , organization_id => 1 , date => 2025-09-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:11","out_time":"15:03","duration":"3:52","late_by":"0:41","early_by":"3:27","status":2,"punch_records":"11:11:in(USB) 11:16:(USB) 11:57:out(USB) 14:26:in(USB) 15:03:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-09-05','11:11','15:03','3:52','0:41','3:27','11:11:in(USB) 11:16:(USB) 11:57:out(USB) 14:26:in(USB) 15:03:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-10-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-10-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , in_time => 16:37 , organization_id => 1 , date => 2025-10-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , out_time => 16:47 , organization_id => 1 , date => 2025-10-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"16:37","out_time":"16:47","duration":"0:10","late_by":"6:7","early_by":"1:43","status":2,"punch_records":"16:37:in(USB) 16:47:out(USB) ","overtime":"0:10","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-10-05','16:37','16:47','0:10','6:7','1:43','16:37:in(USB) 16:47:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-11-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-11-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-12-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-12-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , in_time => 11:28 , organization_id => 1 , date => 2025-12-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , out_time => 17:17 , organization_id => 1 , date => 2025-12-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:28","out_time":"17:17","duration":"5:49","late_by":"0:58","early_by":"1:13","status":2,"punch_records":"11:28:in(USB) 11:33:out(USB) 15:47:in(USB) 16:57:out(USB) 16:57:(USB) 17:17:in(USB) 17:17:(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-12-05','11:28','17:17','5:49','0:58','1:13','11:28:in(USB) 11:33:out(USB) 15:47:in(USB) 16:57:out(USB) 16:57:(USB) 17:17:in(USB) 17:17:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-13 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-13' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , in_time => 11:27 , organization_id => 1 , date => 2025-05-13  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , out_time => 16:32 , organization_id => 1 , date => 2025-05-13  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:27","out_time":"16:32","duration":"5:5","late_by":"0:57","early_by":"1:58","status":2,"punch_records":"11:27:in(USB) 14:05:out(USB) 16:32:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-13','11:27','16:32','5:5','0:57','1:58','11:27:in(USB) 14:05:out(USB) 16:32:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-14 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-14' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , in_time => 15:15 , organization_id => 1 , date => 2025-05-14  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , out_time => 17:00 , organization_id => 1 , date => 2025-05-14  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"15:15","out_time":"17:00","duration":"1:45","late_by":"4:45","early_by":"1:30","status":2,"punch_records":"15:15:in(USB) 17:00:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-14','15:15','17:00','1:45','4:45','1:30','15:15:in(USB) 17:00:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-15 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-15' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , in_time => 13:25 , organization_id => 1 , date => 2025-05-15  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , out_time => 16:37 , organization_id => 1 , date => 2025-05-15  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:25","out_time":"16:37","duration":"3:12","late_by":"2:55","early_by":"1:53","status":2,"punch_records":"13:25:in(USB) 13:25:(USB) 14:26:out(USB) 16:30:in(USB) 16:30:(USB) 16:30:(USB) 16:37:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-15','13:25','16:37','3:12','2:55','1:53','13:25:in(USB) 13:25:(USB) 14:26:out(USB) 16:30:in(USB) 16:30:(USB) 16:30:(USB) 16:37:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-16 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-16' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-16','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-17 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-17' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-18 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-18' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-19 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-19' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"16:01","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"16:01:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-19','16:01','','0:00','0:00','0:00','16:01:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-20 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-20' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-20 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-20 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-20')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-20') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-20','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-21 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-21' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , in_time => 11:11 , organization_id => 1 , date => 2025-05-21  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , out_time => 14:12 , organization_id => 1 , date => 2025-05-21  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:11","out_time":"14:12","duration":"3:1","late_by":"0:41","early_by":"4:18","status":2,"punch_records":"11:11:in(USB) 11:53:out(USB) 11:53:(USB) 14:12:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-21','11:11','14:12','3:1','0:41','4:18','11:11:in(USB) 11:53:out(USB) 11:53:(USB) 14:12:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-22 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-22' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , in_time => 13:44 , organization_id => 1 , date => 2025-05-22  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , out_time => 17:21 , organization_id => 1 , date => 2025-05-22  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:44","out_time":"17:21","duration":"3:37","late_by":"3:14","early_by":"1:9","status":2,"punch_records":"13:44:in(USB) 15:00:out(USB) 17:21:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-22','13:44','17:21','3:37','3:14','1:9','13:44:in(USB) 15:00:out(USB) 17:21:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-23 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-23' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , in_time => 12:08 , organization_id => 1 , date => 2025-05-23  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , out_time => 16:17 , organization_id => 1 , date => 2025-05-23  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:08","out_time":"16:17","duration":"4:9","late_by":"1:38","early_by":"2:13","status":2,"punch_records":"12:08:in(USB) 16:17:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-23','12:08','16:17','4:9','1:38','2:13','12:08:in(USB) 16:17:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-24 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-24' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-25 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-25' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-26 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-26' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , in_time => 12:01 , organization_id => 1 , date => 2025-05-26  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , out_time => 14:20 , organization_id => 1 , date => 2025-05-26  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:01","out_time":"14:20","duration":"2:19","late_by":"1:31","early_by":"4:10","status":2,"punch_records":"12:01:in(USB) 12:01:(USB) 12:45:out(USB) 13:58:in(USB) 14:20:out(USB) 14:20:(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-26','12:01','14:20','2:19','1:31','4:10','12:01:in(USB) 12:01:(USB) 12:45:out(USB) 13:58:in(USB) 14:20:out(USB) 14:20:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-27 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-27' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , in_time => 11:13 , organization_id => 1 , date => 2025-05-27  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , out_time => 15:29 , organization_id => 1 , date => 2025-05-27  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:13","out_time":"15:29","duration":"4:16","late_by":"0:43","early_by":"3:1","status":2,"punch_records":"11:13:in(USB) 11:19:out(USB) 12:27:in(USB) 14:42:out(USB) 15:29:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-27','11:13','15:29','4:16','0:43','3:1','11:13:in(USB) 11:19:out(USB) 12:27:in(USB) 14:42:out(USB) 15:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-28 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-28' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , in_time => 10:59 , organization_id => 1 , date => 2025-05-28  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , out_time => 17:07 , organization_id => 1 , date => 2025-05-28  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:59","out_time":"17:07","duration":"6:8","late_by":"0:29","early_by":"1:23","status":2,"punch_records":"10:59:in(USB) 11:03:(USB) 11:08:out(USB) 14:54:in(USB) 17:07:out(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-28','10:59','17:07','6:8','0:29','1:23','10:59:in(USB) 11:03:(USB) 11:08:out(USB) 14:54:in(USB) 17:07:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-29 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-29' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"14:40","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"14:40:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-29','14:40','','0:00','0:00','0:00','14:40:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '5' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"71","user_biometric_id":"5","emp_name":"Akhilesh Semwal","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , biometric_id => 5 , date => 2025-05-30 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '71' AND `user_biometric_id` = '5' AND attendance_date = '2025-05-30' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , in_time => 11:27 , organization_id => 1 , date => 2025-05-30  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 , out_time => 13:26 , organization_id => 1 , date => 2025-05-30  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 71 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '71' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"5","employee_name":"Akhilesh Semwal","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:27","out_time":"13:26","duration":"1:59","late_by":"0:57","early_by":"5:4","status":2,"punch_records":"11:27:in(USB) 11:31:(USB) 12:18:out(USB) 13:26:in(USB) ","overtime":"0:00","user_id":"71","user_biometric_id":"5","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (71,5,'2025-05-30','11:27','13:26','1:59','0:57','5:4','11:27:in(USB) 11:31:(USB) 12:18:out(USB) 13:26:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-01-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-01-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-01-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-01-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-02-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-02-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-02-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-02-05 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-02-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-02-05') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-02-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-03-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-03-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-03-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-03-05 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-03-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-03-05') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-03-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-04-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-04-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-05 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-05') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-06-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-06-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , in_time => 12:30 , organization_id => 1 , date => 2025-06-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , out_time => 15:17 , organization_id => 1 , date => 2025-06-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:30","out_time":"15:17","duration":"2:47","late_by":"2:0","early_by":"3:13","status":2,"punch_records":"12:30:in(USB) 15:17:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-06-05','12:30','15:17','2:47','2:0','3:13','12:30:in(USB) 15:17:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-07-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-07-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , in_time => 11:31 , organization_id => 1 , date => 2025-07-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , out_time => 16:37 , organization_id => 1 , date => 2025-07-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:31","out_time":"16:37","duration":"5:6","late_by":"1:1","early_by":"1:53","status":2,"punch_records":"11:31:in(USB) 11:31:(USB) 14:07:out(USB) 14:07:(USB) 16:37:in(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-07-05','11:31','16:37','5:6','1:1','1:53','11:31:in(USB) 11:31:(USB) 14:07:out(USB) 14:07:(USB) 16:37:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-08-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-08-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , in_time => 11:22 , organization_id => 1 , date => 2025-08-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , out_time => 13:47 , organization_id => 1 , date => 2025-08-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:22","out_time":"13:47","duration":"2:25","late_by":"0:52","early_by":"4:43","status":2,"punch_records":"11:22:in(USB) 11:22:(USB) 13:47:out(USB) 13:47:(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-08-05','11:22','13:47','2:25','0:52','4:43','11:22:in(USB) 11:22:(USB) 13:47:out(USB) 13:47:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-09-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-09-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , in_time => 11:53 , organization_id => 1 , date => 2025-09-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , out_time => 15:10 , organization_id => 1 , date => 2025-09-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:53","out_time":"15:10","duration":"3:17","late_by":"1:23","early_by":"3:20","status":2,"punch_records":"11:53:in(USB) 11:53:(USB) 14:27:out(USB) 14:27:(USB) 14:52:in(USB) 15:10:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-09-05','11:53','15:10','3:17','1:23','3:20','11:53:in(USB) 11:53:(USB) 14:27:out(USB) 14:27:(USB) 14:52:in(USB) 15:10:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-10-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-10-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , in_time => 14:04 , organization_id => 1 , date => 2025-10-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , out_time => 16:39 , organization_id => 1 , date => 2025-10-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"14:04","out_time":"16:39","duration":"2:35","late_by":"3:34","early_by":"1:51","status":2,"punch_records":"14:04:in(USB) 14:04:(USB) 16:39:out(USB) 16:39:(USB) ","overtime":"2:35","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-10-05','14:04','16:39','2:35','3:34','1:51','14:04:in(USB) 14:04:(USB) 16:39:out(USB) 16:39:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-11-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-11-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-12-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-12-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , in_time => 11:33 , organization_id => 1 , date => 2025-12-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , out_time => 15:25 , organization_id => 1 , date => 2025-12-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:33","out_time":"15:25","duration":"3:52","late_by":"1:3","early_by":"3:5","status":2,"punch_records":"11:33:in(USB) 14:41:out(USB) 14:41:(USB) 14:49:in(USB) 14:49:(USB) 15:25:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-12-05','11:33','15:25','3:52','1:3','3:5','11:33:in(USB) 14:41:out(USB) 14:41:(USB) 14:49:in(USB) 14:49:(USB) 15:25:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-13 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-13' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , in_time => 11:27 , organization_id => 1 , date => 2025-05-13  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , out_time => 14:02 , organization_id => 1 , date => 2025-05-13  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:27","out_time":"14:02","duration":"2:35","late_by":"0:57","early_by":"4:28","status":2,"punch_records":"11:27:in(USB) 11:27:(USB) 13:17:out(USB) 14:02:in(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-13','11:27','14:02','2:35','0:57','4:28','11:27:in(USB) 11:27:(USB) 13:17:out(USB) 14:02:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-14 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-14' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-14 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-14 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-14')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-14') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-14','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-15 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-15' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , in_time => 11:01 , organization_id => 1 , date => 2025-05-15  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , out_time => 14:15 , organization_id => 1 , date => 2025-05-15  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:01","out_time":"14:15","duration":"3:14","late_by":"0:31","early_by":"4:15","status":2,"punch_records":"11:01:in(USB) 14:15:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-15','11:01','14:15','3:14','0:31','4:15','11:01:in(USB) 14:15:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-16 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-16' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-16','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-17 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-17' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-18 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-18' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-19 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-19' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-19 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-19 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-19')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-19') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-19','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-20 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-20' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-20 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-20 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-20')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-20') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-20','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-21 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-21' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-21 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-21 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-21')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-21') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-21','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-22 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-22' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-22 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-22 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-22')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-22') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-22','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-23 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-23' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-23 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-23 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-23')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-23') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-23','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-24 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-24' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-25 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-25' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-26 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-26' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , in_time => 12:38 , organization_id => 1 , date => 2025-05-26  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , out_time => 13:55 , organization_id => 1 , date => 2025-05-26  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:38","out_time":"13:55","duration":"1:17","late_by":"2:8","early_by":"4:35","status":2,"punch_records":"12:38:in(USB) 12:38:(USB) 13:55:out(USB) 13:55:(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-26','12:38','13:55','1:17','2:8','4:35','12:38:in(USB) 12:38:(USB) 13:55:out(USB) 13:55:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-27 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-27' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , in_time => 11:43 , organization_id => 1 , date => 2025-05-27  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , out_time => 14:51 , organization_id => 1 , date => 2025-05-27  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:43","out_time":"14:51","duration":"3:8","late_by":"1:13","early_by":"3:39","status":2,"punch_records":"11:43:in(USB) 11:43:(USB) 14:51:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-27','11:43','14:51','3:8','1:13','3:39','11:43:in(USB) 11:43:(USB) 14:51:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-28 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-28' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , in_time => 12:34 , organization_id => 1 , date => 2025-05-28  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , out_time => 14:50 , organization_id => 1 , date => 2025-05-28  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"12:34","out_time":"14:50","duration":"2:16","late_by":"2:4","early_by":"3:40","status":2,"punch_records":"12:34:in(USB) 14:50:out(USB) ","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-28','12:34','14:50','2:16','2:4','3:40','12:34:in(USB) 14:50:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-29 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-29' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-29 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-29 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-29')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-29') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-29','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '6' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"72","user_biometric_id":"6","emp_name":"Tajinder Singh","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 , biometric_id => 6 , date => 2025-05-30 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '72' AND `user_biometric_id` = '6' AND attendance_date = '2025-05-30' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-30 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-30 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-30')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-30') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 72 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '72' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"6","employee_name":"Tajinder Singh","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"72","user_biometric_id":"6","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (72,6,'2025-05-30','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-01-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-01-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:38 , organization_id => 1 , date => 2025-01-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 17:09 , organization_id => 1 , date => 2025-01-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:38","out_time":"17:09","duration":"6:31","late_by":"0:8","early_by":"1:21","status":2,"punch_records":"10:38:in(USB) 13:19:out(USB) 13:58:in(USB) 13:58:(USB) 16:20:out(USB) 17:09:in(USB) 17:09:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-01-05','10:38','17:09','6:31','0:8','1:21','10:38:in(USB) 13:19:out(USB) 13:58:in(USB) 13:58:(USB) 16:20:out(USB) 17:09:in(USB) 17:09:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-02-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-02-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:44 , organization_id => 1 , date => 2025-02-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-02-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:33 , organization_id => 1 , date => 2025-02-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:44","out_time":"18:33","duration":"7:49","late_by":"0:14","early_by":"00:00","status":2,"punch_records":"10:44:in(USB) 10:44:(USB) 13:00:out(USB) 13:00:(USB) 13:59:in(USB) 13:59:(USB) 13:59:(USB) 14:11:out(USB) 14:11:(USB) 18:33:in(USB) 18:33:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-02-05','10:44','18:33','7:49','0:14','00:00','10:44:in(USB) 10:44:(USB) 13:00:out(USB) 13:00:(USB) 13:59:in(USB) 13:59:(USB) 13:59:(USB) 14:11:out(USB) 14:11:(USB) 18:33:in(USB) 18:33:(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-03-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-03-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:41 , organization_id => 1 , date => 2025-03-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:25 , organization_id => 1 , date => 2025-03-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:41","out_time":"18:25","duration":"7:44","late_by":"0:11","early_by":"0:5","status":2,"punch_records":"10:41:in(USB) 11:12:out(USB) 13:19:in(USB) 18:25:out(USB) ","overtime":"7:44","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-03-05','10:41','18:25','7:44','0:11','0:5','10:41:in(USB) 11:12:out(USB) 13:19:in(USB) 18:25:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-04-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-04-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:37 , organization_id => 1 , date => 2025-05-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 17:47 , organization_id => 1 , date => 2025-05-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:37","out_time":"17:47","duration":"7:10","late_by":"0:7","early_by":"0:43","status":2,"punch_records":"10:37:in(USB) 11:25:out(USB) 13:11:in(USB) 16:56:out(USB) 16:56:(USB) 17:47:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-05','10:37','17:47','7:10','0:7','0:43','10:37:in(USB) 11:25:out(USB) 13:11:in(USB) 16:56:out(USB) 16:56:(USB) 17:47:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-06-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-06-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:17 , organization_id => 1 , date => 2025-06-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:30 , organization_id => 1 , date => 2025-06-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:17","out_time":"18:30","duration":"8:13","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:17:in(USB) 12:27:out(USB) 13:16:in(USB) 13:28:out(USB) 14:05:in(USB) 15:07:out(USB) 15:07:(USB) 16:59:in(USB) 18:10:out(USB) 18:30:in(USB) 18:30:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-06-05','10:17','18:30','8:13','00:00','00:00','10:17:in(USB) 12:27:out(USB) 13:16:in(USB) 13:28:out(USB) 14:05:in(USB) 15:07:out(USB) 15:07:(USB) 16:59:in(USB) 18:10:out(USB) 18:30:in(USB) 18:30:(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-07-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-07-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:08 , organization_id => 1 , date => 2025-07-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 14:55 , organization_id => 1 , date => 2025-07-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:08","out_time":"14:55","duration":"4:47","late_by":"00:00","early_by":"3:35","status":2,"punch_records":"10:08:in(USB) 10:08:(USB) 14:55:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-07-05','10:08','14:55','4:47','00:00','3:35','10:08:in(USB) 10:08:(USB) 14:55:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-08-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-08-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:27 , organization_id => 1 , date => 2025-08-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-08-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:27","out_time":"18:32","duration":"8:5","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:27:in(USB) 18:32:out(USB) 18:32:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-08-05','10:27','18:32','8:5','00:00','00:00','10:27:in(USB) 18:32:out(USB) 18:32:(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-09-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-09-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 11:07 , organization_id => 1 , date => 2025-09-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-09-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"11:07","out_time":"18:32","duration":"7:25","late_by":"0:37","early_by":"00:00","status":2,"punch_records":"11:07:in(USB) 13:52:out(USB) 13:52:(USB) 18:32:in(USB) 18:32:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-09-05','11:07','18:32','7:25','0:37','00:00','11:07:in(USB) 13:52:out(USB) 13:52:(USB) 18:32:in(USB) 18:32:(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-10-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-10-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:09 , organization_id => 1 , date => 2025-10-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:13 , organization_id => 1 , date => 2025-10-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:09","out_time":"18:13","duration":"8:4","late_by":"00:00","early_by":"0:17","status":2,"punch_records":"10:09:in(USB) 10:09:(USB) 11:24:out(USB) 12:29:in(USB) 12:29:(USB) 12:55:out(USB) 13:05:in(USB) 14:12:out(USB) 14:12:(USB) 15:32:in(USB) 15:32:(USB) 16:32:out(USB) 18:13:in(USB) 18:13:(USB) ","overtime":"8:04","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-10-05','10:09','18:13','8:4','00:00','0:17','10:09:in(USB) 10:09:(USB) 11:24:out(USB) 12:29:in(USB) 12:29:(USB) 12:55:out(USB) 13:05:in(USB) 14:12:out(USB) 14:12:(USB) 15:32:in(USB) 15:32:(USB) 16:32:out(USB) 18:13:in(USB) 18:13:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-11-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-11-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-12-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-12-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:13 , organization_id => 1 , date => 2025-12-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:24 , organization_id => 1 , date => 2025-12-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:13","out_time":"18:24","duration":"8:11","late_by":"00:00","early_by":"0:6","status":2,"punch_records":"10:13:in(USB) 10:21:out(USB) 10:21:(USB) 10:39:in(USB) 10:47:out(USB) 10:47:(USB) 11:01:in(USB) 15:10:out(USB) 16:31:in(USB) 18:24:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-12-05','10:13','18:24','8:11','00:00','0:6','10:13:in(USB) 10:21:out(USB) 10:21:(USB) 10:39:in(USB) 10:47:out(USB) 10:47:(USB) 11:01:in(USB) 15:10:out(USB) 16:31:in(USB) 18:24:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-13 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-13' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:29 , organization_id => 1 , date => 2025-05-13  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:00 , organization_id => 1 , date => 2025-05-13  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:29","out_time":"18:00","duration":"7:31","late_by":"00:00","early_by":"0:30","status":2,"punch_records":"10:29:in(USB) 13:23:out(USB) 13:23:(USB) 13:44:in(USB) 13:44:(USB) 16:30:out(USB) 16:30:(USB) 18:00:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-13','10:29','18:00','7:31','00:00','0:30','10:29:in(USB) 13:23:out(USB) 13:23:(USB) 13:44:in(USB) 13:44:(USB) 16:30:out(USB) 16:30:(USB) 18:00:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-14 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-14' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-14  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:46 , organization_id => 1 , date => 2025-05-14  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:46","duration":"8:12","late_by":"0:4","early_by":"00:00","status":2,"punch_records":"10:34:in(USB) 10:57:out(USB) 10:57:(USB) 11:28:in(USB) 11:34:out(USB) 11:34:(USB) 13:20:in(USB) 13:20:(USB) 14:57:out(USB) 16:43:in(USB) 16:43:(USB) 17:46:out(USB) 18:46:in(USB) 18:46:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-14','10:34','18:46','8:12','0:4','00:00','10:34:in(USB) 10:57:out(USB) 10:57:(USB) 11:28:in(USB) 11:34:out(USB) 11:34:(USB) 13:20:in(USB) 13:20:(USB) 14:57:out(USB) 16:43:in(USB) 16:43:(USB) 17:46:out(USB) 18:46:in(USB) 18:46:(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-15 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-15' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:37 , organization_id => 1 , date => 2025-05-15  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:20 , organization_id => 1 , date => 2025-05-15  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-15' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:37","out_time":"18:20","duration":"7:43","late_by":"0:7","early_by":"0:10","status":2,"punch_records":"10:37:in(USB) 10:37:(USB) 11:17:out(USB) 11:17:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:19:(USB) 11:20:(USB) 12:46:in(USB) 14:16:out(USB) 14:16:(USB) 16:57:in(USB) 16:57:(USB) 18:17:out(USB) 18:20:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-15','10:37','18:20','7:43','0:7','0:10','10:37:in(USB) 10:37:(USB) 11:17:out(USB) 11:17:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:18:(USB) 11:19:(USB) 11:20:(USB) 12:46:in(USB) 14:16:out(USB) 14:16:(USB) 16:57:in(USB) 16:57:(USB) 18:17:out(USB) 18:20:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-16 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-16' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:51 , organization_id => 1 , date => 2025-05-16  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 15:54 , organization_id => 1 , date => 2025-05-16  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:51","out_time":"15:54","duration":"5:3","late_by":"0:21","early_by":"2:36","status":2,"punch_records":"10:51:in(USB) 11:05:out(USB) 11:05:(USB) 11:12:in(USB) 11:12:(USB) 13:11:out(USB) 14:22:in(USB) 14:22:(USB) 14:34:out(USB) 15:54:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-16','10:51','15:54','5:3','0:21','2:36','10:51:in(USB) 11:05:out(USB) 11:05:(USB) 11:12:in(USB) 11:12:(USB) 13:11:out(USB) 14:22:in(USB) 14:22:(USB) 14:34:out(USB) 15:54:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-17 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-17' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:32 , organization_id => 1 , date => 2025-05-17  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-17' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:38 , organization_id => 1 , date => 2025-05-17  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:32","out_time":"18:38","duration":"8:6","late_by":"0:2","early_by":"00:00","status":2,"punch_records":"10:32:in(USB) 10:32:(USB) 11:29:out(USB) 13:15:in(USB) 15:08:out(USB) 18:18:in(USB) 18:38:out(USB) ","overtime":"8:06","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-17','10:32','18:38','8:6','0:2','00:00','10:32:in(USB) 10:32:(USB) 11:29:out(USB) 13:15:in(USB) 15:08:out(USB) 18:18:in(USB) 18:38:out(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-18 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-18' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-19 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-19' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-19  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-05-19  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:32","duration":"7:58","late_by":"0:4","early_by":"00:00","status":2,"punch_records":"10:34:in(USB) 10:34:(USB) 10:34:(USB) 10:40:out(USB) 10:56:in(USB) 12:06:out(USB) 12:20:in(USB) 12:32:out(USB) 16:57:in(USB) 17:07:out(USB) 18:32:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-19','10:34','18:32','7:58','0:4','00:00','10:34:in(USB) 10:34:(USB) 10:34:(USB) 10:40:out(USB) 10:56:in(USB) 12:06:out(USB) 12:20:in(USB) 12:32:out(USB) 16:57:in(USB) 17:07:out(USB) 18:32:in(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-20 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-20' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:44 , organization_id => 1 , date => 2025-05-20  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 17:11 , organization_id => 1 , date => 2025-05-20  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:44","out_time":"17:11","duration":"6:27","late_by":"0:14","early_by":"1:19","status":2,"punch_records":"10:44:in(USB) 11:08:out(USB) 12:16:in(USB) 13:41:out(USB) 16:15:in(USB) 16:15:(USB) 17:11:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-20','10:44','17:11','6:27','0:14','1:19','10:44:in(USB) 11:08:out(USB) 12:16:in(USB) 13:41:out(USB) 16:15:in(USB) 16:15:(USB) 17:11:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-21 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-21' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-21  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-21  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:28","duration":"7:54","late_by":"0:4","early_by":"0:2","status":2,"punch_records":"10:34:in(TD) 10:47:out(USB) 10:47:(USB) 13:39:in(USB) 16:12:out(USB) 16:50:in(USB) 18:28:out(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-21','10:34','18:28','7:54','0:4','0:2','10:34:in(TD) 10:47:out(USB) 10:47:(USB) 13:39:in(USB) 16:12:out(USB) 16:50:in(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-22 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-22' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-22  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-22  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:28","duration":"7:54","late_by":"0:4","early_by":"0:2","status":2,"punch_records":"10:34:in(USB) 10:34:(USB) 15:48:out(USB) 18:24:in(USB) 18:24:(USB) 18:28:(USB) 18:28:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-22','10:34','18:28','7:54','0:4','0:2','10:34:in(USB) 10:34:(USB) 15:48:out(USB) 18:24:in(USB) 18:24:(USB) 18:28:(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-23 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-23' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:29 , organization_id => 1 , date => 2025-05-23  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-23  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:29","out_time":"18:28","duration":"7:59","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:29:in(USB) 10:36:out(USB) 10:36:(USB) 12:21:in(USB) 13:21:out(USB) 13:50:in(USB) 14:11:out(USB) 16:26:in(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-23','10:29','18:28','7:59','00:00','0:2','10:29:in(USB) 10:36:out(USB) 10:36:(USB) 12:21:in(USB) 13:21:out(USB) 13:50:in(USB) 14:11:out(USB) 16:26:in(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-24 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-24' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:14 , organization_id => 1 , date => 2025-05-24  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:29 , organization_id => 1 , date => 2025-05-24  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:14","out_time":"18:29","duration":"8:15","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:14:in(USB) 10:22:out(USB) 13:42:in(USB) 16:29:out(USB) 17:51:in(USB) 18:14:out(USB) 18:29:in(USB) ","overtime":"8:15","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-24','10:14','18:29','8:15','00:00','0:1','10:14:in(USB) 10:22:out(USB) 13:42:in(USB) 16:29:out(USB) 17:51:in(USB) 18:14:out(USB) 18:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-25 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-25' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-26 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-26' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:26 , organization_id => 1 , date => 2025-05-26  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:32 , organization_id => 1 , date => 2025-05-26  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:26","out_time":"18:32","duration":"8:6","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:26:in(USB) 10:35:out(USB) 10:35:(USB) 10:40:(USB) 10:43:in(USB) 13:41:out(USB) 13:58:in(USB) 14:20:out(USB) 15:11:in(USB) 17:01:out(USB) 17:39:in(USB) 17:52:out(USB) 17:52:(USB) 18:29:in(USB) 18:32:(USB) 18:32:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-26','10:26','18:32','8:6','00:00','00:00','10:26:in(USB) 10:35:out(USB) 10:35:(USB) 10:40:(USB) 10:43:in(USB) 13:41:out(USB) 13:58:in(USB) 14:20:out(USB) 15:11:in(USB) 17:01:out(USB) 17:39:in(USB) 17:52:out(USB) 17:52:(USB) 18:29:in(USB) 18:32:(USB) 18:32:(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-27 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-27' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:27 , organization_id => 1 , date => 2025-05-27  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 14:28 , organization_id => 1 , date => 2025-05-27  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:27","out_time":"14:28","duration":"4:1","late_by":"00:00","early_by":"4:2","status":2,"punch_records":"10:27:in(USB) 13:26:out(USB) 14:28:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-27','10:27','14:28','4:1','00:00','4:2','10:27:in(USB) 13:26:out(USB) 14:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-28 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-28' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:34 , organization_id => 1 , date => 2025-05-28  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:34 , organization_id => 1 , date => 2025-05-28  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:34","out_time":"18:34","duration":"8:0","late_by":"0:4","early_by":"00:00","status":2,"punch_records":"10:34:in(USB) 11:56:out(USB) 15:00:in(USB) 15:01:(USB) 16:26:out(USB) 17:34:in(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-28','10:34','18:34','8:0','0:4','00:00','10:34:in(USB) 11:56:out(USB) 15:00:in(USB) 15:01:(USB) 16:26:out(USB) 17:34:in(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-29 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-29' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:29 , organization_id => 1 , date => 2025-05-29  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 14:19 , organization_id => 1 , date => 2025-05-29  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:29","out_time":"14:19","duration":"3:50","late_by":"00:00","early_by":"4:11","status":2,"punch_records":"10:29:in(USB) 10:29:(USB) 11:35:out(USB) 11:41:in(USB) 11:41:(USB) 11:41:(USB) 11:41:(USB) 11:43:(USB) 11:43:(USB) 11:44:(USB) 11:44:(USB) 11:50:out(USB) 11:51:(USB) 13:45:in(USB) 13:54:out(USB) 14:16:in(USB) 14:19:(USB) 14:19:(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-29','10:29','14:19','3:50','00:00','4:11','10:29:in(USB) 10:29:(USB) 11:35:out(USB) 11:41:in(USB) 11:41:(USB) 11:41:(USB) 11:41:(USB) 11:43:(USB) 11:43:(USB) 11:44:(USB) 11:44:(USB) 11:50:out(USB) 11:51:(USB) 13:45:in(USB) 13:54:out(USB) 14:16:in(USB) 14:19:(USB) 14:19:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '7' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"40","user_biometric_id":"7","emp_name":"Deekhsha Yadav","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , biometric_id => 7 , date => 2025-05-30 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '40' AND `user_biometric_id` = '7' AND attendance_date = '2025-05-30' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , in_time => 10:26 , organization_id => 1 , date => 2025-05-30  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 , out_time => 18:28 , organization_id => 1 , date => 2025-05-30  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 40 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '40' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"7","employee_name":"Deekhsha Yadav","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:26","out_time":"18:28","duration":"8:2","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:26:in(USB) 12:06:out(USB) 12:06:(USB) 12:59:in(USB) 14:21:out(USB) 18:28:in(USB) ","overtime":"0:00","user_id":"40","user_biometric_id":"7","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (40,7,'2025-05-30','10:26','18:28','8:2','00:00','0:2','10:26:in(USB) 12:06:out(USB) 12:06:(USB) 12:59:in(USB) 14:21:out(USB) 18:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-01-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-01-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:54","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"09:54:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-01-05','9:54','','0:00','0:00','0:00','09:54:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-02-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-02-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"18:28","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"18:28:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-02-05','18:28','','0:00','0:00','0:00','18:28:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-03-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-03-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , in_time => 10:07 , organization_id => 1 , date => 2025-03-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , out_time => 13:51 , organization_id => 1 , date => 2025-03-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:07","out_time":"13:51","duration":"3:44","late_by":"00:00","early_by":"4:39","status":2,"punch_records":"10:07:in(USB) 13:51:out(USB) 13:51:(USB) ","overtime":"3:44","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-03-05','10:07','13:51','3:44','00:00','4:39','10:07:in(USB) 13:51:out(USB) 13:51:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-04-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-04-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , in_time => 10:09 , organization_id => 1 , date => 2025-05-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , out_time => 18:29 , organization_id => 1 , date => 2025-05-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:09","out_time":"18:29","duration":"8:20","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:09:in(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-05','10:09','18:29','8:20','00:00','0:1','10:09:in(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-06-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-06-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , in_time => 9:40 , organization_id => 1 , date => 2025-06-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , out_time => 18:29 , organization_id => 1 , date => 2025-06-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:40","out_time":"18:29","duration":"8:49","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:40:in(USB) 09:40:(USB) 18:29:out(USB) 18:29:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-06-05','9:40','18:29','8:49','00:00','0:1','09:40:in(USB) 09:40:(USB) 18:29:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-07-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-07-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , in_time => 9:53 , organization_id => 1 , date => 2025-07-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , out_time => 14:22 , organization_id => 1 , date => 2025-07-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-07-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:53","out_time":"14:22","duration":"4:29","late_by":"00:00","early_by":"4:8","status":2,"punch_records":"09:53:in(USB) 09:53:(USB) 14:22:out(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-07-05','9:53','14:22','4:29','00:00','4:8','09:53:in(USB) 09:53:(USB) 14:22:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-08-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-08-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , in_time => 10:13 , organization_id => 1 , date => 2025-08-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , out_time => 18:27 , organization_id => 1 , date => 2025-08-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:13","out_time":"18:27","duration":"8:14","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:13:in(USB) 10:13:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-08-05','10:13','18:27','8:14','00:00','0:3','10:13:in(USB) 10:13:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-09-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-09-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , in_time => 10:02 , organization_id => 1 , date => 2025-09-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , out_time => 18:27 , organization_id => 1 , date => 2025-09-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:02","out_time":"18:27","duration":"8:25","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:02:in(USB) 10:02:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-09-05','10:02','18:27','8:25','00:00','0:3','10:02:in(USB) 10:02:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-10-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-10-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , in_time => 10:14 , organization_id => 1 , date => 2025-10-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , out_time => 16:15 , organization_id => 1 , date => 2025-10-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:14","out_time":"16:15","duration":"6:1","late_by":"00:00","early_by":"2:15","status":2,"punch_records":"10:14:in(USB) 10:14:(USB) 13:53:out(USB) 13:53:(USB) 16:15:in(USB) ","overtime":"6:01","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-10-05','10:14','16:15','6:1','00:00','2:15','10:14:in(USB) 10:14:(USB) 13:53:out(USB) 13:53:(USB) 16:15:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-11-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-11-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-12-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-12-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , in_time => 10:28 , organization_id => 1 , date => 2025-12-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , out_time => 18:28 , organization_id => 1 , date => 2025-12-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:28","out_time":"18:28","duration":"8:0","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:28:in(USB) 10:28:(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-12-05','10:28','18:28','8:0','00:00','0:2','10:28:in(USB) 10:28:(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-13 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-13' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , in_time => 10:02 , organization_id => 1 , date => 2025-05-13  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , out_time => 18:27 , organization_id => 1 , date => 2025-05-13  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:02","out_time":"18:27","duration":"8:25","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:02:in(USB) 10:02:(USB) 16:44:out(USB) 18:27:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-13','10:02','18:27','8:25','00:00','0:3','10:02:in(USB) 10:02:(USB) 16:44:out(USB) 18:27:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-14 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-14' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , in_time => 10:18 , organization_id => 1 , date => 2025-05-14  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , out_time => 18:32 , organization_id => 1 , date => 2025-05-14  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:18","out_time":"18:32","duration":"8:14","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:18:in(USB) 10:18:(USB) 13:44:out(USB) 13:44:(USB) 18:32:in(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-14','10:18','18:32','8:14','00:00','00:00','10:18:in(USB) 10:18:(USB) 13:44:out(USB) 13:44:(USB) 18:32:in(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-15 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-15' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:37","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"10:37:in(USB) 10:37:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-15','10:37','','0:00','0:00','0:00','10:37:in(USB) 10:37:(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-16 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-16' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-16','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-17 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-17' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-18 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-18' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-19 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-19' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , in_time => 10:04 , organization_id => 1 , date => 2025-05-19  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , out_time => 18:29 , organization_id => 1 , date => 2025-05-19  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:04","out_time":"18:29","duration":"8:25","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:04:in(USB) 11:44:out(USB) 18:29:in(USB) 18:29:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-19','10:04','18:29','8:25','00:00','0:1','10:04:in(USB) 11:44:out(USB) 18:29:in(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-20 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-20' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:53","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"09:53:in(USB) 09:54:(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-20','9:53','','0:00','0:00','0:00','09:53:in(USB) 09:54:(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-21 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-21' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-21 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-21 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-21')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-21') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-21','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-22 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-22' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-22 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-22 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-22')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-22') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-22','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-23 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-23' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , in_time => 9:59 , organization_id => 1 , date => 2025-05-23  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , out_time => 18:26 , organization_id => 1 , date => 2025-05-23  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:59","out_time":"18:26","duration":"8:27","late_by":"00:00","early_by":"0:4","status":2,"punch_records":"09:59:in(USB) 18:26:out(USB) ","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-23','9:59','18:26','8:27','00:00','0:4','09:59:in(USB) 18:26:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-24 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-24' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-25 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-25' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-26 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-26' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-26 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-26 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-26')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-26') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-26','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-27 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-27' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-27 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-27 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-27')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-27') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-27','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-28 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-28' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-28 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-28 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-28')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-28') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-28' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-28','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-29 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-29' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-29 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-29 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-29')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-29') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-29','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '8' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"42","user_biometric_id":"8","emp_name":"Divya Mishra","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 , biometric_id => 8 , date => 2025-05-30 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '42' AND `user_biometric_id` = '8' AND attendance_date = '2025-05-30' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-30 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-30 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-30')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-30') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 42 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '42' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"8","employee_name":"Divya Mishra","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"42","user_biometric_id":"8","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (42,8,'2025-05-30','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-01-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-01-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , in_time => 10:16 , organization_id => 1 , date => 2025-01-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , out_time => 17:30 , organization_id => 1 , date => 2025-01-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:16","out_time":"17:30","duration":"7:14","late_by":"00:00","early_by":"1:0","status":2,"punch_records":"10:16:in(USB) 13:50:out(USB) 13:50:(USB) 17:30:in(USB) 17:30:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-01-05','10:16','17:30','7:14','00:00','1:0','10:16:in(USB) 13:50:out(USB) 13:50:(USB) 17:30:in(USB) 17:30:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-02-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-02-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"18:31","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"18:31:in(USB) 18:31:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-02-05','18:31','','0:00','0:00','0:00','18:31:in(USB) 18:31:(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-03-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-03-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , in_time => 13:04 , organization_id => 1 , date => 2025-03-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , out_time => 18:27 , organization_id => 1 , date => 2025-03-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:04","out_time":"18:27","duration":"5:23","late_by":"2:34","early_by":"0:3","status":2,"punch_records":"13:04:in(USB) 13:04:(USB) 14:45:out(USB) 14:45:(USB) 18:27:in(USB) 18:27:(USB) ","overtime":"5:23","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-03-05','13:04','18:27','5:23','2:34','0:3','13:04:in(USB) 13:04:(USB) 14:45:out(USB) 14:45:(USB) 18:27:in(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-04-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-04-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-05 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-05') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-06-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-06-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , in_time => 10:09 , organization_id => 1 , date => 2025-06-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-06-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:09","out_time":"18:29","duration":"8:20","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:09:in(USB) 18:29:out(USB) 18:29:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-06-05','10:09','18:29','8:20','00:00','0:1','10:09:in(USB) 18:29:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-07-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-07-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , in_time => 10:03 , organization_id => 1 , date => 2025-07-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , out_time => 18:52 , organization_id => 1 , date => 2025-07-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:03","out_time":"18:52","duration":"8:49","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:03:in(USB) 10:03:(USB) 18:52:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-07-05','10:03','18:52','8:49','00:00','00:00','10:03:in(USB) 10:03:(USB) 18:52:out(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-08-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-08-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , in_time => 10:02 , organization_id => 1 , date => 2025-08-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , out_time => 18:30 , organization_id => 1 , date => 2025-08-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:02","out_time":"18:30","duration":"8:28","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:02:in(USB) 14:08:out(USB) 18:30:in(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-08-05','10:02','18:30','8:28','00:00','00:00','10:02:in(USB) 14:08:out(USB) 18:30:in(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-09-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-09-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , in_time => 10:08 , organization_id => 1 , date => 2025-09-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , out_time => 18:28 , organization_id => 1 , date => 2025-09-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:08","out_time":"18:28","duration":"8:20","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:08:in(USB) 18:28:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-09-05','10:08','18:28','8:20','00:00','0:2','10:08:in(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-10-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-10-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , in_time => 10:16 , organization_id => 1 , date => 2025-10-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , out_time => 18:28 , organization_id => 1 , date => 2025-10-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-10-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:16","out_time":"18:28","duration":"8:12","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:16:in(USB) 10:16:(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"8:12","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-10-05','10:16','18:28','8:12','00:00','0:2','10:16:in(USB) 10:16:(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-11-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-11-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-12-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-12-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , in_time => 10:04 , organization_id => 1 , date => 2025-12-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , out_time => 18:27 , organization_id => 1 , date => 2025-12-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:04","out_time":"18:27","duration":"8:23","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:04:in(USB) 18:27:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-12-05','10:04','18:27','8:23','00:00','0:3','10:04:in(USB) 18:27:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-13 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-13' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , in_time => 10:08 , organization_id => 1 , date => 2025-05-13  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-05-13  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:08","out_time":"18:29","duration":"8:21","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:08:in(USB) 10:09:(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-13','10:08','18:29','8:21','00:00','0:1','10:08:in(USB) 10:09:(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-14 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-14' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , in_time => 10:03 , organization_id => 1 , date => 2025-05-14  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , out_time => 18:35 , organization_id => 1 , date => 2025-05-14  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:03","out_time":"18:35","duration":"8:32","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:03:in(USB) 10:03:(USB) 18:35:out(USB) 18:35:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-14','10:03','18:35','8:32','00:00','00:00','10:03:in(USB) 10:03:(USB) 18:35:out(USB) 18:35:(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-15 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-15' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , in_time => 10:21 , organization_id => 1 , date => 2025-05-15  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , out_time => 18:30 , organization_id => 1 , date => 2025-05-15  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:21","out_time":"18:30","duration":"8:9","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:21:in(USB) 10:21:(USB) 18:30:out(USB) 18:30:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-15','10:21','18:30','8:9','00:00','00:00','10:21:in(USB) 10:21:(USB) 18:30:out(USB) 18:30:(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-16 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-16' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-16 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-16 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-16')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-16') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-16' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-16','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-17 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-17' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-17 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-17','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-18 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-18' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-19 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-19' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-19 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-19 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-19')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-19') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-19' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-19','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-20 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-20' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-20 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-20 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-20')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-20') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-20','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-21 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-21' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-21 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-21 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-21')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-21') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-21','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-22 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-22' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-22 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-22 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-22')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-22') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-22','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-23 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-23' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-23 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-23 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-23')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-23') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-23','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-24 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-24' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-24 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-24','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-25 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-25' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-26 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-26' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , in_time => 10:33 , organization_id => 1 , date => 2025-05-26  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-05-26  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-26' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:33","out_time":"18:29","duration":"7:56","late_by":"0:3","early_by":"0:1","status":2,"punch_records":"10:33:in(USB) 18:29:out(USB) 18:29:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-26','10:33','18:29','7:56','0:3','0:1','10:33:in(USB) 18:29:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-27 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-27' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , in_time => 10:04 , organization_id => 1 , date => 2025-05-27  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , out_time => 18:28 , organization_id => 1 , date => 2025-05-27  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:04","out_time":"18:28","duration":"8:24","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"10:04:in(USB) 13:54:out(USB) 13:54:(USB) 18:28:in(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-27','10:04','18:28','8:24','00:00','0:2','10:04:in(USB) 13:54:out(USB) 13:54:(USB) 18:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-28 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-28' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , in_time => 10:06 , organization_id => 1 , date => 2025-05-28  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , out_time => 18:30 , organization_id => 1 , date => 2025-05-28  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:06","out_time":"18:30","duration":"8:24","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"10:06:in(USB) 10:07:(USB) 18:30:out(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-28','10:06','18:30','8:24','00:00','00:00','10:06:in(USB) 10:07:(USB) 18:30:out(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-29 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-29' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , in_time => 10:00 , organization_id => 1 , date => 2025-05-29  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , out_time => 18:29 , organization_id => 1 , date => 2025-05-29  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:00","out_time":"18:29","duration":"8:29","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"10:00:in(USB) 10:01:(USB) 14:02:out(USB) 18:29:in(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-29','10:00','18:29','8:29','00:00','0:1','10:00:in(USB) 10:01:(USB) 14:02:out(USB) 18:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '9' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"27","user_biometric_id":"9","emp_name":"Karuna Patel","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , biometric_id => 9 , date => 2025-05-30 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '27' AND `user_biometric_id` = '9' AND attendance_date = '2025-05-30' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , in_time => 10:12 , organization_id => 1 , date => 2025-05-30  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 , out_time => 18:27 , organization_id => 1 , date => 2025-05-30  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 27 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '27' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"9","employee_name":"Karuna Patel","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"10:12","out_time":"18:27","duration":"8:15","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"10:12:in(USB) 10:12:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"27","user_biometric_id":"9","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (27,9,'2025-05-30','10:12','18:27','8:15','00:00','0:3','10:12:in(USB) 10:12:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-01-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-01-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 9:22 , organization_id => 1 , date => 2025-01-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 17:29 , organization_id => 1 , date => 2025-01-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-01-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-01-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:22","out_time":"17:29","duration":"8:7","late_by":"00:00","early_by":"1:1","status":2,"punch_records":"09:22:in(USB) 17:29:out(USB) 17:29:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-01-05','9:22','17:29','8:7','00:00','1:1','09:22:in(USB) 17:29:out(USB) 17:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-02-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-02-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 9:34 , organization_id => 1 , date => 2025-02-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 18:32 , organization_id => 1 , date => 2025-02-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-02-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:34","out_time":"18:32","duration":"8:58","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:34:in(USB) 18:32:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-02-05','9:34','18:32','8:58','00:00','00:00','09:34:in(USB) 18:32:out(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-03-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-03-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 9:27 , organization_id => 1 , date => 2025-03-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 18:27 , organization_id => 1 , date => 2025-03-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-03-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-03-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:27","out_time":"18:27","duration":"9:0","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"09:27:in(USB) 18:26:out(USB) 18:27:(USB) ","overtime":"8:59","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-03-05','9:27','18:27','9:0','00:00','0:3','09:27:in(USB) 18:26:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-04-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-04-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-04-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-04-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-04-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 8:57 , organization_id => 1 , date => 2025-05-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 18:30 , organization_id => 1 , date => 2025-05-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"8:57","out_time":"18:30","duration":"9:33","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"08:57:in(USB) 09:27:out(USB) 09:56:in(USB) 17:14:out(USB) 17:14:(USB) 18:30:in(USB) 18:30:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-05','8:57','18:30','9:33','00:00','00:00','08:57:in(USB) 09:27:out(USB) 09:56:in(USB) 17:14:out(USB) 17:14:(USB) 18:30:in(USB) 18:30:(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-06-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-06-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 9:20 , organization_id => 1 , date => 2025-06-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-06-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-06-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-06-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:20","out_time":"18:29","duration":"9:9","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:20:in(USB) 09:20:(USB) 09:50:out(USB) 18:29:in(USB) 18:29:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-06-05','9:20','18:29','9:9','00:00','0:1','09:20:in(USB) 09:20:(USB) 09:50:out(USB) 18:29:in(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-07-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-07-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 9:21 , organization_id => 1 , date => 2025-07-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 18:51 , organization_id => 1 , date => 2025-07-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-07-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:21","out_time":"18:51","duration":"9:30","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:21:in(USB) 09:21:(USB) 09:54:out(USB) 13:54:in(USB) 18:51:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-07-05','9:21','18:51','9:30','00:00','00:00','09:21:in(USB) 09:21:(USB) 09:54:out(USB) 13:54:in(USB) 18:51:out(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-08-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-08-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 9:26 , organization_id => 1 , date => 2025-08-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-08-05  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-08-05' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-08-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:26","out_time":"18:29","duration":"9:3","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:26:in(USB) 09:57:out(USB) 16:47:in(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-08-05','9:26','18:29','9:3','00:00','0:1','09:26:in(USB) 09:57:out(USB) 16:47:in(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-09-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-09-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-09-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-09-05 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-09-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-09-05') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-09-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-09-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-09-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-10-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-10-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-10-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-10-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-10-05','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-11-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-11-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-11-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-11-05 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-11-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-11-05') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-11-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-11-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-11-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-12-05 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-12-05' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-12-05 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-12-05 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-12-05')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-12-05') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-12-05' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-12-05","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-12-05','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-13 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-13' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-13 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-13 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-13')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-13') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-13' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-13","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-13','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-14 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-14' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-14 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkParticularDayHoliday 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-14 , organization => 1 

2025-07-14T14:32:26+02:00 :: checkHoliday_query => SELECT JSON_UNQUOTE(JSON_SEARCH(holiday, 'one', '2025-05-14')) AS `holiday_name` FROM attendance_setting WHERE organization_id = '1' AND JSON_SEARCH(holiday, 'one', '2025-05-14') IS NOT NULL 

2025-07-14T14:32:26+02:00 :: respose => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 Response received from checkParticularDayHoliday => {"status":400,"message":"Not Assign any holiday"}

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-14' BETWEEN leave_record.start_date AND leave_record.end_date AND leaveType.leaveWeightage = '1' AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 Response received from userFullDayLeaveStatus => {"status":200,"message":"Leave not applied mark as absent","data":null}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-14","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Leave not applied mark as absent"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-14','','','0:00','0:00','0:00','',1,'Leave not applied mark as absent') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-15 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-15' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 9:12 , organization_id => 1 , date => 2025-05-15  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 18:30 , organization_id => 1 , date => 2025-05-15  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-15","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:12","out_time":"18:30","duration":"9:18","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:12:in(USB) 09:50:out(USB) 18:30:in(USB) 18:30:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-15','9:12','18:30','9:18','00:00','00:00','09:12:in(USB) 09:50:out(USB) 18:30:in(USB) 18:30:(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-16 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-16' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 9:16 , organization_id => 1 , date => 2025-05-16  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 18:34 , organization_id => 1 , date => 2025-05-16  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-16","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:16","out_time":"18:34","duration":"9:18","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:16:in(USB) 09:16:(USB) 09:56:out(USB) 09:56:(USB) 16:32:in(USB) 16:32:(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-16','9:16','18:34','9:18','00:00','00:00','09:16:in(USB) 09:16:(USB) 09:56:out(USB) 09:56:(USB) 16:32:in(USB) 16:32:(USB) 18:34:out(USB) 18:34:(USB) 18:34:(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-17 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-17' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 9:17 , organization_id => 1 , date => 2025-05-17  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-05-17  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-17' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-17","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:17","out_time":"18:29","duration":"9:12","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:17:in(USB) 18:28:out(USB) 18:29:(USB) ","overtime":"9:11","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-17','9:17','18:29','9:12','00:00','0:1','09:17:in(USB) 18:28:out(USB) 18:29:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-18 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-18' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-18 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-18","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-18','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-19 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-19' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 8:58 , organization_id => 1 , date => 2025-05-19  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 18:58 , organization_id => 1 , date => 2025-05-19  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-19","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"8:58","out_time":"18:58","duration":"10:0","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"08:58:in(USB) 08:58:(USB) 09:32:out(USB) 09:32:(USB) 18:58:in(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-19','8:58','18:58','10:0','00:00','00:00','08:58:in(USB) 08:58:(USB) 09:32:out(USB) 09:32:(USB) 18:58:in(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-20 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-20' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 9:17 , organization_id => 1 , date => 2025-05-20  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-05-20  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-20' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-20","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:17","out_time":"18:29","duration":"9:12","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:17:in(USB) 09:50:out(USB) 18:29:in(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-20','9:17','18:29','9:12','00:00','0:1','09:17:in(USB) 09:50:out(USB) 18:29:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-21 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-21' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 9:12 , organization_id => 1 , date => 2025-05-21  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 9:42 , organization_id => 1 , date => 2025-05-21  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-21' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-21","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:12","out_time":"9:42","duration":"0:30","late_by":"00:00","early_by":"8:48","status":2,"punch_records":"09:12:in(USB) 09:42:out(USB) 09:42:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-21','9:12','9:42','0:30','00:00','8:48','09:12:in(USB) 09:42:out(USB) 09:42:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-22 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-22' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 9:24 , organization_id => 1 , date => 2025-05-22  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 18:29 , organization_id => 1 , date => 2025-05-22  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-22' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-22","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:24","out_time":"18:29","duration":"9:5","late_by":"00:00","early_by":"0:1","status":2,"punch_records":"09:24:in(USB) 13:45:out(USB) 14:11:in(USB) 18:29:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-22','9:24','18:29','9:5','00:00','0:1','09:24:in(USB) 13:45:out(USB) 14:11:in(USB) 18:29:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-23 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-23' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 9:25 , organization_id => 1 , date => 2025-05-23  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 18:28 , organization_id => 1 , date => 2025-05-23  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-23' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-23","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:25","out_time":"18:28","duration":"9:3","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"09:25:in(USB) 09:25:(USB) 09:59:out(USB) 14:07:in(USB) 18:28:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-23','9:25','18:28','9:3','00:00','0:2','09:25:in(USB) 09:25:(USB) 09:59:out(USB) 14:07:in(USB) 18:28:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-24 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-24' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 9:19 , organization_id => 1 , date => 2025-05-24  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 18:28 , organization_id => 1 , date => 2025-05-24  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-24' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-24","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:19","out_time":"18:28","duration":"9:9","late_by":"00:00","early_by":"0:2","status":2,"punch_records":"09:19:in(USB) 09:55:out(USB) 18:28:in(USB) ","overtime":"9:09","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-24','9:19','18:28','9:9','00:00','0:2','09:19:in(USB) 09:55:out(USB) 18:28:in(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-25 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-25' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkWeekOffStatus 

2025-07-14T14:32:26+02:00 :: requested param :: date => 2025-05-25 , organization_id => 1 

2025-07-14T14:32:26+02:00 :: getWeekOffDay_query => SELECT `week_off` FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-25","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":5,"punch_records":"","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Weekly Off"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-25','','','0:00','0:00','0:00','',5,'Weekly Off') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-26 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-26' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-26","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:14","out_time":"","duration":"0:00","late_by":"0:00","early_by":"0:00","status":1,"punch_records":"09:14:in(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"Absent (No OutPunch)"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-26','9:14','','0:00','0:00','0:00','09:14:in(USB) ',1,'Absent (No OutPunch)') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-27 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-27' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 9:12 , organization_id => 1 , date => 2025-05-27  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 9:38 , organization_id => 1 , date => 2025-05-27  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-27' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-27","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:12","out_time":"9:38","duration":"0:26","late_by":"00:00","early_by":"8:52","status":2,"punch_records":"09:12:in(USB) 09:38:out(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-27','9:12','9:38','0:26','00:00','8:52','09:12:in(USB) 09:38:out(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-28 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-28' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 9:24 , organization_id => 1 , date => 2025-05-28  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 18:30 , organization_id => 1 , date => 2025-05-28  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-28","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:24","out_time":"18:30","duration":"9:6","late_by":"00:00","early_by":"00:00","status":2,"punch_records":"09:24:in(USB) 09:24:(USB) 09:50:out(USB) 14:03:in(USB) 18:30:out(USB) 18:30:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":""} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-28','9:24','18:30','9:6','00:00','00:00','09:24:in(USB) 09:24:(USB) 09:50:out(USB) 14:03:in(USB) 18:30:out(USB) 18:30:(USB) ',2,'') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-29 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-29' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 13:42 , organization_id => 1 , date => 2025-05-29  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 18:28 , organization_id => 1 , date => 2025-05-29  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-29' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-29","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"13:42","out_time":"18:28","duration":"4:46","late_by":"3:12","early_by":"0:2","status":2,"punch_records":"13:42:in(USB) 18:28:out(USB) 18:28:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-29','13:42','18:28','4:46','3:12','0:2','13:42:in(USB) 18:28:out(USB) 18:28:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: mehod inside getEmplyeeDetails 

2025-07-14T14:32:26+02:00 :: employeeDetails_query => SELECT users.ID as `user_id` , users.biometric_id as `user_biometric_id` ,  users.Name as `emp_name` , users.Organization_id as `organization` FROM `users` WHERE users.biometric_id = '11' 

2025-07-14T14:32:26+02:00 Response received from getEmplyeeDetails => {"status":200,"message":{"user_id":"23","user_biometric_id":"11","emp_name":"Deepak Singh Rawat","organization":"1"}}

2025-07-14T14:32:26+02:00 :: mehod inside checkEmployeeAttendancePresentOrNot 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , biometric_id => 11 , date => 2025-05-30 

2025-07-14T14:32:26+02:00 :: checkEmployeeAttendance_query => SELECT * FROM `attendance` WHERE `user_id` = '23' AND `user_biometric_id` = '11' AND attendance_date = '2025-05-30' 

2025-07-14T14:32:26+02:00 Response received from checkEmployeeAttendancePresentOrNot => {"status":200}

2025-07-14T14:32:26+02:00 :: mehod inside checkInTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , in_time => 9:29 , organization_id => 1 , date => 2025-05-30  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkOutTimeCase 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 , out_time => 18:27 , organization_id => 1 , date => 2025-05-30  

2025-07-14T14:32:26+02:00 :: fetchOrganizationSetting_query => SELECT id, in_time , out_time , relaxation_time FROM `attendance_setting` WHERE organization_id = '1' 

2025-07-14T14:32:26+02:00 :: mehod inside checkUserAppliedLeave 

2025-07-14T14:32:26+02:00 :: requested param :: user_id => 23 

2025-07-14T14:32:26+02:00 :: checkUserAppliedLeave_query => SELECT leave_record.id , leaveType.leaveName as `leaveType_name` , leave_record.leave_type as `leaveType_id` FROM `leave_record` LEFT JOIN leaveType ON leaveType.id = leave_record.leave_type WHERE leave_record.user_id = '23' AND '2025-05-30' BETWEEN leave_record.start_date AND leave_record.end_date AND (leaveType.leaveWeightage = '0.25' OR leaveType.leaveWeightage = '0.5') AND leave_record.status = '1' limit 1 

2025-07-14T14:32:26+02:00 :: mehod inside insertAttendanceRecord 

2025-07-14T14:32:26+02:00 :: requested param :: attendance_data => {"date":"2025-05-30","employee_code":"11","employee_name":"Deepak Singh Rawat","company":"Default","department":"Default","category":"Default","degination":"","grade":"","team":"","shift":"GS","in_time":"9:29","out_time":"18:27","duration":"8:58","late_by":"00:00","early_by":"0:3","status":2,"punch_records":"09:29:in(USB) 09:43:out(USB) 13:53:in(USB) 13:53:(USB) 18:27:out(USB) 18:27:(USB) ","overtime":"0:00","user_id":"23","user_biometric_id":"11","organization":"1","description":"No Short or half dat leave are applied"} 

2025-07-14T14:32:26+02:00 :: insertattendance_query => INSERT INTO `attendance`(`user_id`, `user_biometric_id`, `attendance_date`, `in_time`, `out_time`, `work_duration`, `late_by`, `early_by`, `punch_in_record`, `status`, `description`) VALUES (23,11,'2025-05-30','9:29','18:27','8:58','00:00','0:3','09:29:in(USB) 09:43:out(USB) 13:53:in(USB) 13:53:(USB) 18:27:out(USB) 18:27:(USB) ',2,'No Short or half dat leave are applied') 

2025-07-14T14:32:26+02:00 :: Insert into attendance successful 

2025-07-14T14:32:26+02:00 :: Attendance Inserted 

 ============ End Of Script ================== 

